// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: analysis_config.proto

#ifndef PROTOBUF_analysis_5fconfig_2eproto__INCLUDED
#define PROTOBUF_analysis_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
namespace analysis_config {
class callret_analysis_results;
class callret_analysis_resultsDefaultTypeInternal;
extern callret_analysis_resultsDefaultTypeInternal _callret_analysis_results_default_instance_;
class callret_analysis_results_call_data;
class callret_analysis_results_call_dataDefaultTypeInternal;
extern callret_analysis_results_call_dataDefaultTypeInternal _callret_analysis_results_call_data_default_instance_;
class callret_analysis_results_ret_data;
class callret_analysis_results_ret_dataDefaultTypeInternal;
extern callret_analysis_results_ret_dataDefaultTypeInternal _callret_analysis_results_ret_data_default_instance_;
class generic_analysis;
class generic_analysisDefaultTypeInternal;
extern generic_analysisDefaultTypeInternal _generic_analysis_default_instance_;
class generic_analysis_results;
class generic_analysis_resultsDefaultTypeInternal;
extern generic_analysis_resultsDefaultTypeInternal _generic_analysis_results_default_instance_;
class po_analysis_results;
class po_analysis_resultsDefaultTypeInternal;
extern po_analysis_resultsDefaultTypeInternal _po_analysis_results_default_instance_;
class po_analysis_results_po_data;
class po_analysis_results_po_dataDefaultTypeInternal;
extern po_analysis_results_po_dataDefaultTypeInternal _po_analysis_results_po_data_default_instance_;
class specific_parameters_t;
class specific_parameters_tDefaultTypeInternal;
extern specific_parameters_tDefaultTypeInternal _specific_parameters_t_default_instance_;
class standard_analysis;
class standard_analysisDefaultTypeInternal;
extern standard_analysisDefaultTypeInternal _standard_analysis_default_instance_;
}  // namespace analysis_config
namespace common {
class indirect_register_t;
class indirect_register_tDefaultTypeInternal;
extern indirect_register_tDefaultTypeInternal _indirect_register_t_default_instance_;
class memory_pol;
class memory_polDefaultTypeInternal;
extern memory_polDefaultTypeInternal _memory_pol_default_instance_;
class memory_t;
class memory_tDefaultTypeInternal;
extern memory_tDefaultTypeInternal _memory_t_default_instance_;
class register_t;
class register_tDefaultTypeInternal;
extern register_tDefaultTypeInternal _register_t_default_instance_;
class register_value_t;
class register_value_tDefaultTypeInternal;
extern register_value_tDefaultTypeInternal _register_value_t_default_instance_;
}  // namespace common

namespace analysis_config {

namespace protobuf_analysis_5fconfig_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_analysis_5fconfig_2eproto

enum specific_parameters_t_analyse_type {
  specific_parameters_t_analyse_type_NONE = 0,
  specific_parameters_t_analyse_type_GENERIC = 1,
  specific_parameters_t_analyse_type_STANDARD = 2
};
bool specific_parameters_t_analyse_type_IsValid(int value);
const specific_parameters_t_analyse_type specific_parameters_t_analyse_type_analyse_type_MIN = specific_parameters_t_analyse_type_NONE;
const specific_parameters_t_analyse_type specific_parameters_t_analyse_type_analyse_type_MAX = specific_parameters_t_analyse_type_STANDARD;
const int specific_parameters_t_analyse_type_analyse_type_ARRAYSIZE = specific_parameters_t_analyse_type_analyse_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* specific_parameters_t_analyse_type_descriptor();
inline const ::std::string& specific_parameters_t_analyse_type_Name(specific_parameters_t_analyse_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    specific_parameters_t_analyse_type_descriptor(), value);
}
inline bool specific_parameters_t_analyse_type_Parse(
    const ::std::string& name, specific_parameters_t_analyse_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<specific_parameters_t_analyse_type>(
    specific_parameters_t_analyse_type_descriptor(), name, value);
}
enum generic_analysis_query_type {
  generic_analysis_query_type_SATISFIABILITY = 0,
  generic_analysis_query_type_VALUES = 1
};
bool generic_analysis_query_type_IsValid(int value);
const generic_analysis_query_type generic_analysis_query_type_query_type_MIN = generic_analysis_query_type_SATISFIABILITY;
const generic_analysis_query_type generic_analysis_query_type_query_type_MAX = generic_analysis_query_type_VALUES;
const int generic_analysis_query_type_query_type_ARRAYSIZE = generic_analysis_query_type_query_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* generic_analysis_query_type_descriptor();
inline const ::std::string& generic_analysis_query_type_Name(generic_analysis_query_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    generic_analysis_query_type_descriptor(), value);
}
inline bool generic_analysis_query_type_Parse(
    const ::std::string& name, generic_analysis_query_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<generic_analysis_query_type>(
    generic_analysis_query_type_descriptor(), name, value);
}
enum callret_analysis_results_callret_labels {
  callret_analysis_results_callret_labels_VIOLABLE = 1,
  callret_analysis_results_callret_labels_ALIGNED = 2,
  callret_analysis_results_callret_labels_DISALIGNED = 3,
  callret_analysis_results_callret_labels_CAN_RETURN = 4,
  callret_analysis_results_callret_labels_SINGLE = 5,
  callret_analysis_results_callret_labels_MULTIPLE = 6,
  callret_analysis_results_callret_labels_STRONG = 7,
  callret_analysis_results_callret_labels_WEAK = 8,
  callret_analysis_results_callret_labels_SOLVER_WRONG = 9,
  callret_analysis_results_callret_labels_NO_CALL = 10,
  callret_analysis_results_callret_labels_HAS_RETURNED = 11
};
bool callret_analysis_results_callret_labels_IsValid(int value);
const callret_analysis_results_callret_labels callret_analysis_results_callret_labels_callret_labels_MIN = callret_analysis_results_callret_labels_VIOLABLE;
const callret_analysis_results_callret_labels callret_analysis_results_callret_labels_callret_labels_MAX = callret_analysis_results_callret_labels_HAS_RETURNED;
const int callret_analysis_results_callret_labels_callret_labels_ARRAYSIZE = callret_analysis_results_callret_labels_callret_labels_MAX + 1;

const ::google::protobuf::EnumDescriptor* callret_analysis_results_callret_labels_descriptor();
inline const ::std::string& callret_analysis_results_callret_labels_Name(callret_analysis_results_callret_labels value) {
  return ::google::protobuf::internal::NameOfEnum(
    callret_analysis_results_callret_labels_descriptor(), value);
}
inline bool callret_analysis_results_callret_labels_Parse(
    const ::std::string& name, callret_analysis_results_callret_labels* value) {
  return ::google::protobuf::internal::ParseNamedEnum<callret_analysis_results_callret_labels>(
    callret_analysis_results_callret_labels_descriptor(), name, value);
}
enum callret_analysis_results_callret_status {
  callret_analysis_results_callret_status_OK = 1,
  callret_analysis_results_callret_status_VIOL = 2
};
bool callret_analysis_results_callret_status_IsValid(int value);
const callret_analysis_results_callret_status callret_analysis_results_callret_status_callret_status_MIN = callret_analysis_results_callret_status_OK;
const callret_analysis_results_callret_status callret_analysis_results_callret_status_callret_status_MAX = callret_analysis_results_callret_status_VIOL;
const int callret_analysis_results_callret_status_callret_status_ARRAYSIZE = callret_analysis_results_callret_status_callret_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* callret_analysis_results_callret_status_descriptor();
inline const ::std::string& callret_analysis_results_callret_status_Name(callret_analysis_results_callret_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    callret_analysis_results_callret_status_descriptor(), value);
}
inline bool callret_analysis_results_callret_status_Parse(
    const ::std::string& name, callret_analysis_results_callret_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<callret_analysis_results_callret_status>(
    callret_analysis_results_callret_status_descriptor(), name, value);
}
enum po_analysis_results_po_status {
  po_analysis_results_po_status_UNKNOWN = 1,
  po_analysis_results_po_status_NOT_OPAQUE = 2,
  po_analysis_results_po_status_OPAQUE = 3,
  po_analysis_results_po_status_LIKELY = 4
};
bool po_analysis_results_po_status_IsValid(int value);
const po_analysis_results_po_status po_analysis_results_po_status_po_status_MIN = po_analysis_results_po_status_UNKNOWN;
const po_analysis_results_po_status po_analysis_results_po_status_po_status_MAX = po_analysis_results_po_status_LIKELY;
const int po_analysis_results_po_status_po_status_ARRAYSIZE = po_analysis_results_po_status_po_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* po_analysis_results_po_status_descriptor();
inline const ::std::string& po_analysis_results_po_status_Name(po_analysis_results_po_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    po_analysis_results_po_status_descriptor(), value);
}
inline bool po_analysis_results_po_status_Parse(
    const ::std::string& name, po_analysis_results_po_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<po_analysis_results_po_status>(
    po_analysis_results_po_status_descriptor(), name, value);
}
// ===================================================================

class specific_parameters_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analysis_config.specific_parameters_t) */ {
 public:
  specific_parameters_t();
  virtual ~specific_parameters_t();

  specific_parameters_t(const specific_parameters_t& from);

  inline specific_parameters_t& operator=(const specific_parameters_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const specific_parameters_t& default_instance();

  enum AnalyseParamCase {
    kGenericParams = 2,
    kStandardParams = 3,
    ANALYSE_PARAM_NOT_SET = 0,
  };

  static inline const specific_parameters_t* internal_default_instance() {
    return reinterpret_cast<const specific_parameters_t*>(
               &_specific_parameters_t_default_instance_);
  }

  void Swap(specific_parameters_t* other);

  // implements Message ----------------------------------------------

  inline specific_parameters_t* New() const PROTOBUF_FINAL { return New(NULL); }

  specific_parameters_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const specific_parameters_t& from);
  void MergeFrom(const specific_parameters_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(specific_parameters_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef specific_parameters_t_analyse_type analyse_type;
  static const analyse_type NONE =
    specific_parameters_t_analyse_type_NONE;
  static const analyse_type GENERIC =
    specific_parameters_t_analyse_type_GENERIC;
  static const analyse_type STANDARD =
    specific_parameters_t_analyse_type_STANDARD;
  static inline bool analyse_type_IsValid(int value) {
    return specific_parameters_t_analyse_type_IsValid(value);
  }
  static const analyse_type analyse_type_MIN =
    specific_parameters_t_analyse_type_analyse_type_MIN;
  static const analyse_type analyse_type_MAX =
    specific_parameters_t_analyse_type_analyse_type_MAX;
  static const int analyse_type_ARRAYSIZE =
    specific_parameters_t_analyse_type_analyse_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  analyse_type_descriptor() {
    return specific_parameters_t_analyse_type_descriptor();
  }
  static inline const ::std::string& analyse_type_Name(analyse_type value) {
    return specific_parameters_t_analyse_type_Name(value);
  }
  static inline bool analyse_type_Parse(const ::std::string& name,
      analyse_type* value) {
    return specific_parameters_t_analyse_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .analysis_config.specific_parameters_t.analyse_type typeid = 1;
  bool has_typeid_() const;
  void clear_typeid_();
  static const int kTypeidFieldNumber = 1;
  ::analysis_config::specific_parameters_t_analyse_type typeid_() const;
  void set_typeid_(::analysis_config::specific_parameters_t_analyse_type value);

  // optional .analysis_config.generic_analysis generic_params = 2;
  bool has_generic_params() const;
  void clear_generic_params();
  static const int kGenericParamsFieldNumber = 2;
  const ::analysis_config::generic_analysis& generic_params() const;
  ::analysis_config::generic_analysis* mutable_generic_params();
  ::analysis_config::generic_analysis* release_generic_params();
  void set_allocated_generic_params(::analysis_config::generic_analysis* generic_params);

  // optional .analysis_config.standard_analysis standard_params = 3;
  bool has_standard_params() const;
  void clear_standard_params();
  static const int kStandardParamsFieldNumber = 3;
  const ::analysis_config::standard_analysis& standard_params() const;
  ::analysis_config::standard_analysis* mutable_standard_params();
  ::analysis_config::standard_analysis* release_standard_params();
  void set_allocated_standard_params(::analysis_config::standard_analysis* standard_params);

  AnalyseParamCase analyse_param_case() const;
  // @@protoc_insertion_point(class_scope:analysis_config.specific_parameters_t)
 private:
  void set_has_typeid_();
  void clear_has_typeid_();
  void set_has_generic_params();
  void set_has_standard_params();

  inline bool has_analyse_param() const;
  void clear_analyse_param();
  inline void clear_has_analyse_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int typeid__;
  union AnalyseParamUnion {
    AnalyseParamUnion() {}
    ::analysis_config::generic_analysis* generic_params_;
    ::analysis_config::standard_analysis* standard_params_;
  } analyse_param_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_analysis_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class standard_analysis : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analysis_config.standard_analysis) */ {
 public:
  standard_analysis();
  virtual ~standard_analysis();

  standard_analysis(const standard_analysis& from);

  inline standard_analysis& operator=(const standard_analysis& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const standard_analysis& default_instance();

  static inline const standard_analysis* internal_default_instance() {
    return reinterpret_cast<const standard_analysis*>(
               &_standard_analysis_default_instance_);
  }

  void Swap(standard_analysis* other);

  // implements Message ----------------------------------------------

  inline standard_analysis* New() const PROTOBUF_FINAL { return New(NULL); }

  standard_analysis* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const standard_analysis& from);
  void MergeFrom(const standard_analysis& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(standard_analysis* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 target_addr = 1;
  bool has_target_addr() const;
  void clear_target_addr();
  static const int kTargetAddrFieldNumber = 1;
  ::google::protobuf::uint64 target_addr() const;
  void set_target_addr(::google::protobuf::uint64 value);

  // optional bool uniq = 2;
  bool has_uniq() const;
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  bool uniq() const;
  void set_uniq(bool value);

  // optional bool get_formula = 3;
  bool has_get_formula() const;
  void clear_get_formula();
  static const int kGetFormulaFieldNumber = 3;
  bool get_formula() const;
  void set_get_formula(bool value);

  // @@protoc_insertion_point(class_scope:analysis_config.standard_analysis)
 private:
  void set_has_target_addr();
  void clear_has_target_addr();
  void set_has_uniq();
  void clear_has_uniq();
  void set_has_get_formula();
  void clear_has_get_formula();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 target_addr_;
  bool uniq_;
  bool get_formula_;
  friend struct  protobuf_analysis_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class generic_analysis : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analysis_config.generic_analysis) */ {
 public:
  generic_analysis();
  virtual ~generic_analysis();

  generic_analysis(const generic_analysis& from);

  inline generic_analysis& operator=(const generic_analysis& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const generic_analysis& default_instance();

  static inline const generic_analysis* internal_default_instance() {
    return reinterpret_cast<const generic_analysis*>(
               &_generic_analysis_default_instance_);
  }

  void Swap(generic_analysis* other);

  // implements Message ----------------------------------------------

  inline generic_analysis* New() const PROTOBUF_FINAL { return New(NULL); }

  generic_analysis* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const generic_analysis& from);
  void MergeFrom(const generic_analysis& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(generic_analysis* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef generic_analysis_query_type query_type;
  static const query_type SATISFIABILITY =
    generic_analysis_query_type_SATISFIABILITY;
  static const query_type VALUES =
    generic_analysis_query_type_VALUES;
  static inline bool query_type_IsValid(int value) {
    return generic_analysis_query_type_IsValid(value);
  }
  static const query_type query_type_MIN =
    generic_analysis_query_type_query_type_MIN;
  static const query_type query_type_MAX =
    generic_analysis_query_type_query_type_MAX;
  static const int query_type_ARRAYSIZE =
    generic_analysis_query_type_query_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  query_type_descriptor() {
    return generic_analysis_query_type_descriptor();
  }
  static inline const ::std::string& query_type_Name(query_type value) {
    return generic_analysis_query_type_Name(value);
  }
  static inline bool query_type_Parse(const ::std::string& name,
      query_type* value) {
    return generic_analysis_query_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string dba = 3;
  bool has_dba() const;
  void clear_dba();
  static const int kDbaFieldNumber = 3;
  const ::std::string& dba() const;
  void set_dba(const ::std::string& value);
  #if LANG_CXX11
  void set_dba(::std::string&& value);
  #endif
  void set_dba(const char* value);
  void set_dba(const char* value, size_t size);
  ::std::string* mutable_dba();
  ::std::string* release_dba();
  void set_allocated_dba(::std::string* dba);

  // required uint64 target_addr = 2;
  bool has_target_addr() const;
  void clear_target_addr();
  static const int kTargetAddrFieldNumber = 2;
  ::google::protobuf::uint64 target_addr() const;
  void set_target_addr(::google::protobuf::uint64 value);

  // required .analysis_config.generic_analysis.query_type kind = 1;
  bool has_kind() const;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::analysis_config::generic_analysis_query_type kind() const;
  void set_kind(::analysis_config::generic_analysis_query_type value);

  // optional uint32 limit_values = 4;
  bool has_limit_values() const;
  void clear_limit_values();
  static const int kLimitValuesFieldNumber = 4;
  ::google::protobuf::uint32 limit_values() const;
  void set_limit_values(::google::protobuf::uint32 value);

  // optional uint64 from_addr = 6;
  bool has_from_addr() const;
  void clear_from_addr();
  static const int kFromAddrFieldNumber = 6;
  ::google::protobuf::uint64 from_addr() const;
  void set_from_addr(::google::protobuf::uint64 value);

  // optional uint64 to_addr = 7;
  bool has_to_addr() const;
  void clear_to_addr();
  static const int kToAddrFieldNumber = 7;
  ::google::protobuf::uint64 to_addr() const;
  void set_to_addr(::google::protobuf::uint64 value);

  // optional uint64 restrict_values_from = 8;
  bool has_restrict_values_from() const;
  void clear_restrict_values_from();
  static const int kRestrictValuesFromFieldNumber = 8;
  ::google::protobuf::uint64 restrict_values_from() const;
  void set_restrict_values_from(::google::protobuf::uint64 value);

  // optional uint64 restrict_values_to = 9;
  bool has_restrict_values_to() const;
  void clear_restrict_values_to();
  static const int kRestrictValuesToFieldNumber = 9;
  ::google::protobuf::uint64 restrict_values_to() const;
  void set_restrict_values_to(::google::protobuf::uint64 value);

  // optional bool get_formula = 5;
  bool has_get_formula() const;
  void clear_get_formula();
  static const int kGetFormulaFieldNumber = 5;
  bool get_formula() const;
  void set_get_formula(bool value);

  // @@protoc_insertion_point(class_scope:analysis_config.generic_analysis)
 private:
  void set_has_kind();
  void clear_has_kind();
  void set_has_target_addr();
  void clear_has_target_addr();
  void set_has_dba();
  void clear_has_dba();
  void set_has_limit_values();
  void clear_has_limit_values();
  void set_has_get_formula();
  void clear_has_get_formula();
  void set_has_from_addr();
  void clear_has_from_addr();
  void set_has_to_addr();
  void clear_has_to_addr();
  void set_has_restrict_values_from();
  void clear_has_restrict_values_from();
  void set_has_restrict_values_to();
  void clear_has_restrict_values_to();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr dba_;
  ::google::protobuf::uint64 target_addr_;
  int kind_;
  ::google::protobuf::uint32 limit_values_;
  ::google::protobuf::uint64 from_addr_;
  ::google::protobuf::uint64 to_addr_;
  ::google::protobuf::uint64 restrict_values_from_;
  ::google::protobuf::uint64 restrict_values_to_;
  bool get_formula_;
  friend struct  protobuf_analysis_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class generic_analysis_results : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analysis_config.generic_analysis_results) */ {
 public:
  generic_analysis_results();
  virtual ~generic_analysis_results();

  generic_analysis_results(const generic_analysis_results& from);

  inline generic_analysis_results& operator=(const generic_analysis_results& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const generic_analysis_results& default_instance();

  static inline const generic_analysis_results* internal_default_instance() {
    return reinterpret_cast<const generic_analysis_results*>(
               &_generic_analysis_results_default_instance_);
  }

  void Swap(generic_analysis_results* other);

  // implements Message ----------------------------------------------

  inline generic_analysis_results* New() const PROTOBUF_FINAL { return New(NULL); }

  generic_analysis_results* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const generic_analysis_results& from);
  void MergeFrom(const generic_analysis_results& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(generic_analysis_results* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 values = 2;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 2;
  ::google::protobuf::uint64 values(int index) const;
  void set_values(int index, ::google::protobuf::uint64 value);
  void add_values(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_values();

  // optional string smt_formula = 3;
  bool has_smt_formula() const;
  void clear_smt_formula();
  static const int kSmtFormulaFieldNumber = 3;
  const ::std::string& smt_formula() const;
  void set_smt_formula(const ::std::string& value);
  #if LANG_CXX11
  void set_smt_formula(::std::string&& value);
  #endif
  void set_smt_formula(const char* value);
  void set_smt_formula(const char* value, size_t size);
  ::std::string* mutable_smt_formula();
  ::std::string* release_smt_formula();
  void set_allocated_smt_formula(::std::string* smt_formula);

  // required .common.smt_result result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::common::smt_result result() const;
  void set_result(::common::smt_result value);

  // @@protoc_insertion_point(class_scope:analysis_config.generic_analysis_results)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_smt_formula();
  void clear_has_smt_formula();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > values_;
  ::google::protobuf::internal::ArenaStringPtr smt_formula_;
  int result_;
  friend struct  protobuf_analysis_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class callret_analysis_results_call_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analysis_config.callret_analysis_results.call_data) */ {
 public:
  callret_analysis_results_call_data();
  virtual ~callret_analysis_results_call_data();

  callret_analysis_results_call_data(const callret_analysis_results_call_data& from);

  inline callret_analysis_results_call_data& operator=(const callret_analysis_results_call_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const callret_analysis_results_call_data& default_instance();

  static inline const callret_analysis_results_call_data* internal_default_instance() {
    return reinterpret_cast<const callret_analysis_results_call_data*>(
               &_callret_analysis_results_call_data_default_instance_);
  }

  void Swap(callret_analysis_results_call_data* other);

  // implements Message ----------------------------------------------

  inline callret_analysis_results_call_data* New() const PROTOBUF_FINAL { return New(NULL); }

  callret_analysis_results_call_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const callret_analysis_results_call_data& from);
  void MergeFrom(const callret_analysis_results_call_data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(callret_analysis_results_call_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 addr = 1;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 1;
  ::google::protobuf::uint64 addr() const;
  void set_addr(::google::protobuf::uint64 value);

  // required .analysis_config.callret_analysis_results.callret_status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::analysis_config::callret_analysis_results_callret_status status() const;
  void set_status(::analysis_config::callret_analysis_results_callret_status value);

  // @@protoc_insertion_point(class_scope:analysis_config.callret_analysis_results.call_data)
 private:
  void set_has_addr();
  void clear_has_addr();
  void set_has_status();
  void clear_has_status();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 addr_;
  int status_;
  friend struct  protobuf_analysis_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class callret_analysis_results_ret_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analysis_config.callret_analysis_results.ret_data) */ {
 public:
  callret_analysis_results_ret_data();
  virtual ~callret_analysis_results_ret_data();

  callret_analysis_results_ret_data(const callret_analysis_results_ret_data& from);

  inline callret_analysis_results_ret_data& operator=(const callret_analysis_results_ret_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const callret_analysis_results_ret_data& default_instance();

  static inline const callret_analysis_results_ret_data* internal_default_instance() {
    return reinterpret_cast<const callret_analysis_results_ret_data*>(
               &_callret_analysis_results_ret_data_default_instance_);
  }

  void Swap(callret_analysis_results_ret_data* other);

  // implements Message ----------------------------------------------

  inline callret_analysis_results_ret_data* New() const PROTOBUF_FINAL { return New(NULL); }

  callret_analysis_results_ret_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const callret_analysis_results_ret_data& from);
  void MergeFrom(const callret_analysis_results_ret_data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(callret_analysis_results_ret_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .analysis_config.callret_analysis_results.callret_labels labels = 3;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 3;
  ::analysis_config::callret_analysis_results_callret_labels labels(int index) const;
  void set_labels(int index, ::analysis_config::callret_analysis_results_callret_labels value);
  void add_labels(::analysis_config::callret_analysis_results_callret_labels value);
  const ::google::protobuf::RepeatedField<int>& labels() const;
  ::google::protobuf::RepeatedField<int>* mutable_labels();

  // repeated uint64 returnsites = 4;
  int returnsites_size() const;
  void clear_returnsites();
  static const int kReturnsitesFieldNumber = 4;
  ::google::protobuf::uint64 returnsites(int index) const;
  void set_returnsites(int index, ::google::protobuf::uint64 value);
  void add_returnsites(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      returnsites() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_returnsites();

  // repeated .analysis_config.callret_analysis_results.call_data calls = 6;
  int calls_size() const;
  void clear_calls();
  static const int kCallsFieldNumber = 6;
  const ::analysis_config::callret_analysis_results_call_data& calls(int index) const;
  ::analysis_config::callret_analysis_results_call_data* mutable_calls(int index);
  ::analysis_config::callret_analysis_results_call_data* add_calls();
  ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_call_data >*
      mutable_calls();
  const ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_call_data >&
      calls() const;

  // required uint64 ret_addr = 1;
  bool has_ret_addr() const;
  void clear_ret_addr();
  static const int kRetAddrFieldNumber = 1;
  ::google::protobuf::uint64 ret_addr() const;
  void set_ret_addr(::google::protobuf::uint64 value);

  // required uint32 solve_count = 5;
  bool has_solve_count() const;
  void clear_solve_count();
  static const int kSolveCountFieldNumber = 5;
  ::google::protobuf::uint32 solve_count() const;
  void set_solve_count(::google::protobuf::uint32 value);

  // required .analysis_config.callret_analysis_results.callret_status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::analysis_config::callret_analysis_results_callret_status status() const;
  void set_status(::analysis_config::callret_analysis_results_callret_status value);

  // @@protoc_insertion_point(class_scope:analysis_config.callret_analysis_results.ret_data)
 private:
  void set_has_ret_addr();
  void clear_has_ret_addr();
  void set_has_status();
  void clear_has_status();
  void set_has_solve_count();
  void clear_has_solve_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> labels_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > returnsites_;
  ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_call_data > calls_;
  ::google::protobuf::uint64 ret_addr_;
  ::google::protobuf::uint32 solve_count_;
  int status_;
  friend struct  protobuf_analysis_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class callret_analysis_results : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analysis_config.callret_analysis_results) */ {
 public:
  callret_analysis_results();
  virtual ~callret_analysis_results();

  callret_analysis_results(const callret_analysis_results& from);

  inline callret_analysis_results& operator=(const callret_analysis_results& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const callret_analysis_results& default_instance();

  static inline const callret_analysis_results* internal_default_instance() {
    return reinterpret_cast<const callret_analysis_results*>(
               &_callret_analysis_results_default_instance_);
  }

  void Swap(callret_analysis_results* other);

  // implements Message ----------------------------------------------

  inline callret_analysis_results* New() const PROTOBUF_FINAL { return New(NULL); }

  callret_analysis_results* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const callret_analysis_results& from);
  void MergeFrom(const callret_analysis_results& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(callret_analysis_results* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef callret_analysis_results_call_data call_data;
  typedef callret_analysis_results_ret_data ret_data;

  typedef callret_analysis_results_callret_labels callret_labels;
  static const callret_labels VIOLABLE =
    callret_analysis_results_callret_labels_VIOLABLE;
  static const callret_labels ALIGNED =
    callret_analysis_results_callret_labels_ALIGNED;
  static const callret_labels DISALIGNED =
    callret_analysis_results_callret_labels_DISALIGNED;
  static const callret_labels CAN_RETURN =
    callret_analysis_results_callret_labels_CAN_RETURN;
  static const callret_labels SINGLE =
    callret_analysis_results_callret_labels_SINGLE;
  static const callret_labels MULTIPLE =
    callret_analysis_results_callret_labels_MULTIPLE;
  static const callret_labels STRONG =
    callret_analysis_results_callret_labels_STRONG;
  static const callret_labels WEAK =
    callret_analysis_results_callret_labels_WEAK;
  static const callret_labels SOLVER_WRONG =
    callret_analysis_results_callret_labels_SOLVER_WRONG;
  static const callret_labels NO_CALL =
    callret_analysis_results_callret_labels_NO_CALL;
  static const callret_labels HAS_RETURNED =
    callret_analysis_results_callret_labels_HAS_RETURNED;
  static inline bool callret_labels_IsValid(int value) {
    return callret_analysis_results_callret_labels_IsValid(value);
  }
  static const callret_labels callret_labels_MIN =
    callret_analysis_results_callret_labels_callret_labels_MIN;
  static const callret_labels callret_labels_MAX =
    callret_analysis_results_callret_labels_callret_labels_MAX;
  static const int callret_labels_ARRAYSIZE =
    callret_analysis_results_callret_labels_callret_labels_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  callret_labels_descriptor() {
    return callret_analysis_results_callret_labels_descriptor();
  }
  static inline const ::std::string& callret_labels_Name(callret_labels value) {
    return callret_analysis_results_callret_labels_Name(value);
  }
  static inline bool callret_labels_Parse(const ::std::string& name,
      callret_labels* value) {
    return callret_analysis_results_callret_labels_Parse(name, value);
  }

  typedef callret_analysis_results_callret_status callret_status;
  static const callret_status OK =
    callret_analysis_results_callret_status_OK;
  static const callret_status VIOL =
    callret_analysis_results_callret_status_VIOL;
  static inline bool callret_status_IsValid(int value) {
    return callret_analysis_results_callret_status_IsValid(value);
  }
  static const callret_status callret_status_MIN =
    callret_analysis_results_callret_status_callret_status_MIN;
  static const callret_status callret_status_MAX =
    callret_analysis_results_callret_status_callret_status_MAX;
  static const int callret_status_ARRAYSIZE =
    callret_analysis_results_callret_status_callret_status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  callret_status_descriptor() {
    return callret_analysis_results_callret_status_descriptor();
  }
  static inline const ::std::string& callret_status_Name(callret_status value) {
    return callret_analysis_results_callret_status_Name(value);
  }
  static inline bool callret_status_Parse(const ::std::string& name,
      callret_status* value) {
    return callret_analysis_results_callret_status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .analysis_config.callret_analysis_results.ret_data values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::analysis_config::callret_analysis_results_ret_data& values(int index) const;
  ::analysis_config::callret_analysis_results_ret_data* mutable_values(int index);
  ::analysis_config::callret_analysis_results_ret_data* add_values();
  ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_ret_data >*
      mutable_values();
  const ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_ret_data >&
      values() const;

  // @@protoc_insertion_point(class_scope:analysis_config.callret_analysis_results)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_ret_data > values_;
  friend struct  protobuf_analysis_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class po_analysis_results_po_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analysis_config.po_analysis_results.po_data) */ {
 public:
  po_analysis_results_po_data();
  virtual ~po_analysis_results_po_data();

  po_analysis_results_po_data(const po_analysis_results_po_data& from);

  inline po_analysis_results_po_data& operator=(const po_analysis_results_po_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const po_analysis_results_po_data& default_instance();

  static inline const po_analysis_results_po_data* internal_default_instance() {
    return reinterpret_cast<const po_analysis_results_po_data*>(
               &_po_analysis_results_po_data_default_instance_);
  }

  void Swap(po_analysis_results_po_data* other);

  // implements Message ----------------------------------------------

  inline po_analysis_results_po_data* New() const PROTOBUF_FINAL { return New(NULL); }

  po_analysis_results_po_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const po_analysis_results_po_data& from);
  void MergeFrom(const po_analysis_results_po_data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(po_analysis_results_po_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string formula = 7;
  bool has_formula() const;
  void clear_formula();
  static const int kFormulaFieldNumber = 7;
  const ::std::string& formula() const;
  void set_formula(const ::std::string& value);
  #if LANG_CXX11
  void set_formula(::std::string&& value);
  #endif
  void set_formula(const char* value);
  void set_formula(const char* value, size_t size);
  ::std::string* mutable_formula();
  ::std::string* release_formula();
  void set_allocated_formula(::std::string* formula);

  // required uint64 jmp_addr = 1;
  bool has_jmp_addr() const;
  void clear_jmp_addr();
  static const int kJmpAddrFieldNumber = 1;
  ::google::protobuf::uint64 jmp_addr() const;
  void set_jmp_addr(::google::protobuf::uint64 value);

  // required uint32 ksteps = 3;
  bool has_ksteps() const;
  void clear_ksteps();
  static const int kKstepsFieldNumber = 3;
  ::google::protobuf::uint32 ksteps() const;
  void set_ksteps(::google::protobuf::uint32 value);

  // required float computation_time = 4;
  bool has_computation_time() const;
  void clear_computation_time();
  static const int kComputationTimeFieldNumber = 4;
  float computation_time() const;
  void set_computation_time(float value);

  // optional uint64 alive_branch = 6;
  bool has_alive_branch() const;
  void clear_alive_branch();
  static const int kAliveBranchFieldNumber = 6;
  ::google::protobuf::uint64 alive_branch() const;
  void set_alive_branch(::google::protobuf::uint64 value);

  // optional uint32 nb_paths = 5;
  bool has_nb_paths() const;
  void clear_nb_paths();
  static const int kNbPathsFieldNumber = 5;
  ::google::protobuf::uint32 nb_paths() const;
  void set_nb_paths(::google::protobuf::uint32 value);

  // required .analysis_config.po_analysis_results.po_status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::analysis_config::po_analysis_results_po_status status() const;
  void set_status(::analysis_config::po_analysis_results_po_status value);

  // @@protoc_insertion_point(class_scope:analysis_config.po_analysis_results.po_data)
 private:
  void set_has_jmp_addr();
  void clear_has_jmp_addr();
  void set_has_status();
  void clear_has_status();
  void set_has_ksteps();
  void clear_has_ksteps();
  void set_has_computation_time();
  void clear_has_computation_time();
  void set_has_nb_paths();
  void clear_has_nb_paths();
  void set_has_alive_branch();
  void clear_has_alive_branch();
  void set_has_formula();
  void clear_has_formula();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr formula_;
  ::google::protobuf::uint64 jmp_addr_;
  ::google::protobuf::uint32 ksteps_;
  float computation_time_;
  ::google::protobuf::uint64 alive_branch_;
  ::google::protobuf::uint32 nb_paths_;
  int status_;
  friend struct  protobuf_analysis_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class po_analysis_results : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analysis_config.po_analysis_results) */ {
 public:
  po_analysis_results();
  virtual ~po_analysis_results();

  po_analysis_results(const po_analysis_results& from);

  inline po_analysis_results& operator=(const po_analysis_results& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const po_analysis_results& default_instance();

  static inline const po_analysis_results* internal_default_instance() {
    return reinterpret_cast<const po_analysis_results*>(
               &_po_analysis_results_default_instance_);
  }

  void Swap(po_analysis_results* other);

  // implements Message ----------------------------------------------

  inline po_analysis_results* New() const PROTOBUF_FINAL { return New(NULL); }

  po_analysis_results* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const po_analysis_results& from);
  void MergeFrom(const po_analysis_results& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(po_analysis_results* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef po_analysis_results_po_data po_data;

  typedef po_analysis_results_po_status po_status;
  static const po_status UNKNOWN =
    po_analysis_results_po_status_UNKNOWN;
  static const po_status NOT_OPAQUE =
    po_analysis_results_po_status_NOT_OPAQUE;
  static const po_status OPAQUE =
    po_analysis_results_po_status_OPAQUE;
  static const po_status LIKELY =
    po_analysis_results_po_status_LIKELY;
  static inline bool po_status_IsValid(int value) {
    return po_analysis_results_po_status_IsValid(value);
  }
  static const po_status po_status_MIN =
    po_analysis_results_po_status_po_status_MIN;
  static const po_status po_status_MAX =
    po_analysis_results_po_status_po_status_MAX;
  static const int po_status_ARRAYSIZE =
    po_analysis_results_po_status_po_status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  po_status_descriptor() {
    return po_analysis_results_po_status_descriptor();
  }
  static inline const ::std::string& po_status_Name(po_status value) {
    return po_analysis_results_po_status_Name(value);
  }
  static inline bool po_status_Parse(const ::std::string& name,
      po_status* value) {
    return po_analysis_results_po_status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .analysis_config.po_analysis_results.po_data values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::analysis_config::po_analysis_results_po_data& values(int index) const;
  ::analysis_config::po_analysis_results_po_data* mutable_values(int index);
  ::analysis_config::po_analysis_results_po_data* add_values();
  ::google::protobuf::RepeatedPtrField< ::analysis_config::po_analysis_results_po_data >*
      mutable_values();
  const ::google::protobuf::RepeatedPtrField< ::analysis_config::po_analysis_results_po_data >&
      values() const;

  // @@protoc_insertion_point(class_scope:analysis_config.po_analysis_results)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::analysis_config::po_analysis_results_po_data > values_;
  friend struct  protobuf_analysis_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// specific_parameters_t

// required .analysis_config.specific_parameters_t.analyse_type typeid = 1;
inline bool specific_parameters_t::has_typeid_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void specific_parameters_t::set_has_typeid_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void specific_parameters_t::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void specific_parameters_t::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::analysis_config::specific_parameters_t_analyse_type specific_parameters_t::typeid_() const {
  // @@protoc_insertion_point(field_get:analysis_config.specific_parameters_t.typeid)
  return static_cast< ::analysis_config::specific_parameters_t_analyse_type >(typeid__);
}
inline void specific_parameters_t::set_typeid_(::analysis_config::specific_parameters_t_analyse_type value) {
  assert(::analysis_config::specific_parameters_t_analyse_type_IsValid(value));
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:analysis_config.specific_parameters_t.typeid)
}

// optional .analysis_config.generic_analysis generic_params = 2;
inline bool specific_parameters_t::has_generic_params() const {
  return analyse_param_case() == kGenericParams;
}
inline void specific_parameters_t::set_has_generic_params() {
  _oneof_case_[0] = kGenericParams;
}
inline void specific_parameters_t::clear_generic_params() {
  if (has_generic_params()) {
    delete analyse_param_.generic_params_;
    clear_has_analyse_param();
  }
}
inline  const ::analysis_config::generic_analysis& specific_parameters_t::generic_params() const {
  // @@protoc_insertion_point(field_get:analysis_config.specific_parameters_t.generic_params)
  return has_generic_params()
      ? *analyse_param_.generic_params_
      : ::analysis_config::generic_analysis::default_instance();
}
inline ::analysis_config::generic_analysis* specific_parameters_t::mutable_generic_params() {
  if (!has_generic_params()) {
    clear_analyse_param();
    set_has_generic_params();
    analyse_param_.generic_params_ = new ::analysis_config::generic_analysis;
  }
  // @@protoc_insertion_point(field_mutable:analysis_config.specific_parameters_t.generic_params)
  return analyse_param_.generic_params_;
}
inline ::analysis_config::generic_analysis* specific_parameters_t::release_generic_params() {
  // @@protoc_insertion_point(field_release:analysis_config.specific_parameters_t.generic_params)
  if (has_generic_params()) {
    clear_has_analyse_param();
    ::analysis_config::generic_analysis* temp = analyse_param_.generic_params_;
    analyse_param_.generic_params_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void specific_parameters_t::set_allocated_generic_params(::analysis_config::generic_analysis* generic_params) {
  clear_analyse_param();
  if (generic_params) {
    set_has_generic_params();
    analyse_param_.generic_params_ = generic_params;
  }
  // @@protoc_insertion_point(field_set_allocated:analysis_config.specific_parameters_t.generic_params)
}

// optional .analysis_config.standard_analysis standard_params = 3;
inline bool specific_parameters_t::has_standard_params() const {
  return analyse_param_case() == kStandardParams;
}
inline void specific_parameters_t::set_has_standard_params() {
  _oneof_case_[0] = kStandardParams;
}
inline void specific_parameters_t::clear_standard_params() {
  if (has_standard_params()) {
    delete analyse_param_.standard_params_;
    clear_has_analyse_param();
  }
}
inline  const ::analysis_config::standard_analysis& specific_parameters_t::standard_params() const {
  // @@protoc_insertion_point(field_get:analysis_config.specific_parameters_t.standard_params)
  return has_standard_params()
      ? *analyse_param_.standard_params_
      : ::analysis_config::standard_analysis::default_instance();
}
inline ::analysis_config::standard_analysis* specific_parameters_t::mutable_standard_params() {
  if (!has_standard_params()) {
    clear_analyse_param();
    set_has_standard_params();
    analyse_param_.standard_params_ = new ::analysis_config::standard_analysis;
  }
  // @@protoc_insertion_point(field_mutable:analysis_config.specific_parameters_t.standard_params)
  return analyse_param_.standard_params_;
}
inline ::analysis_config::standard_analysis* specific_parameters_t::release_standard_params() {
  // @@protoc_insertion_point(field_release:analysis_config.specific_parameters_t.standard_params)
  if (has_standard_params()) {
    clear_has_analyse_param();
    ::analysis_config::standard_analysis* temp = analyse_param_.standard_params_;
    analyse_param_.standard_params_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void specific_parameters_t::set_allocated_standard_params(::analysis_config::standard_analysis* standard_params) {
  clear_analyse_param();
  if (standard_params) {
    set_has_standard_params();
    analyse_param_.standard_params_ = standard_params;
  }
  // @@protoc_insertion_point(field_set_allocated:analysis_config.specific_parameters_t.standard_params)
}

inline bool specific_parameters_t::has_analyse_param() const {
  return analyse_param_case() != ANALYSE_PARAM_NOT_SET;
}
inline void specific_parameters_t::clear_has_analyse_param() {
  _oneof_case_[0] = ANALYSE_PARAM_NOT_SET;
}
inline specific_parameters_t::AnalyseParamCase specific_parameters_t::analyse_param_case() const {
  return specific_parameters_t::AnalyseParamCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// standard_analysis

// optional uint64 target_addr = 1;
inline bool standard_analysis::has_target_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void standard_analysis::set_has_target_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void standard_analysis::clear_has_target_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void standard_analysis::clear_target_addr() {
  target_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_target_addr();
}
inline ::google::protobuf::uint64 standard_analysis::target_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.standard_analysis.target_addr)
  return target_addr_;
}
inline void standard_analysis::set_target_addr(::google::protobuf::uint64 value) {
  set_has_target_addr();
  target_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.standard_analysis.target_addr)
}

// optional bool uniq = 2;
inline bool standard_analysis::has_uniq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void standard_analysis::set_has_uniq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void standard_analysis::clear_has_uniq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void standard_analysis::clear_uniq() {
  uniq_ = false;
  clear_has_uniq();
}
inline bool standard_analysis::uniq() const {
  // @@protoc_insertion_point(field_get:analysis_config.standard_analysis.uniq)
  return uniq_;
}
inline void standard_analysis::set_uniq(bool value) {
  set_has_uniq();
  uniq_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.standard_analysis.uniq)
}

// optional bool get_formula = 3;
inline bool standard_analysis::has_get_formula() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void standard_analysis::set_has_get_formula() {
  _has_bits_[0] |= 0x00000004u;
}
inline void standard_analysis::clear_has_get_formula() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void standard_analysis::clear_get_formula() {
  get_formula_ = false;
  clear_has_get_formula();
}
inline bool standard_analysis::get_formula() const {
  // @@protoc_insertion_point(field_get:analysis_config.standard_analysis.get_formula)
  return get_formula_;
}
inline void standard_analysis::set_get_formula(bool value) {
  set_has_get_formula();
  get_formula_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.standard_analysis.get_formula)
}

// -------------------------------------------------------------------

// generic_analysis

// required .analysis_config.generic_analysis.query_type kind = 1;
inline bool generic_analysis::has_kind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void generic_analysis::set_has_kind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void generic_analysis::clear_has_kind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void generic_analysis::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::analysis_config::generic_analysis_query_type generic_analysis::kind() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.kind)
  return static_cast< ::analysis_config::generic_analysis_query_type >(kind_);
}
inline void generic_analysis::set_kind(::analysis_config::generic_analysis_query_type value) {
  assert(::analysis_config::generic_analysis_query_type_IsValid(value));
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.kind)
}

// required uint64 target_addr = 2;
inline bool generic_analysis::has_target_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void generic_analysis::set_has_target_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void generic_analysis::clear_has_target_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void generic_analysis::clear_target_addr() {
  target_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_target_addr();
}
inline ::google::protobuf::uint64 generic_analysis::target_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.target_addr)
  return target_addr_;
}
inline void generic_analysis::set_target_addr(::google::protobuf::uint64 value) {
  set_has_target_addr();
  target_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.target_addr)
}

// required string dba = 3;
inline bool generic_analysis::has_dba() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void generic_analysis::set_has_dba() {
  _has_bits_[0] |= 0x00000001u;
}
inline void generic_analysis::clear_has_dba() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void generic_analysis::clear_dba() {
  dba_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dba();
}
inline const ::std::string& generic_analysis::dba() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.dba)
  return dba_.GetNoArena();
}
inline void generic_analysis::set_dba(const ::std::string& value) {
  set_has_dba();
  dba_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.dba)
}
#if LANG_CXX11
inline void generic_analysis::set_dba(::std::string&& value) {
  set_has_dba();
  dba_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:analysis_config.generic_analysis.dba)
}
#endif
inline void generic_analysis::set_dba(const char* value) {
  set_has_dba();
  dba_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analysis_config.generic_analysis.dba)
}
inline void generic_analysis::set_dba(const char* value, size_t size) {
  set_has_dba();
  dba_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analysis_config.generic_analysis.dba)
}
inline ::std::string* generic_analysis::mutable_dba() {
  set_has_dba();
  // @@protoc_insertion_point(field_mutable:analysis_config.generic_analysis.dba)
  return dba_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* generic_analysis::release_dba() {
  // @@protoc_insertion_point(field_release:analysis_config.generic_analysis.dba)
  clear_has_dba();
  return dba_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void generic_analysis::set_allocated_dba(::std::string* dba) {
  if (dba != NULL) {
    set_has_dba();
  } else {
    clear_has_dba();
  }
  dba_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dba);
  // @@protoc_insertion_point(field_set_allocated:analysis_config.generic_analysis.dba)
}

// optional uint32 limit_values = 4;
inline bool generic_analysis::has_limit_values() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void generic_analysis::set_has_limit_values() {
  _has_bits_[0] |= 0x00000008u;
}
inline void generic_analysis::clear_has_limit_values() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void generic_analysis::clear_limit_values() {
  limit_values_ = 0u;
  clear_has_limit_values();
}
inline ::google::protobuf::uint32 generic_analysis::limit_values() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.limit_values)
  return limit_values_;
}
inline void generic_analysis::set_limit_values(::google::protobuf::uint32 value) {
  set_has_limit_values();
  limit_values_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.limit_values)
}

// optional bool get_formula = 5;
inline bool generic_analysis::has_get_formula() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void generic_analysis::set_has_get_formula() {
  _has_bits_[0] |= 0x00000100u;
}
inline void generic_analysis::clear_has_get_formula() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void generic_analysis::clear_get_formula() {
  get_formula_ = false;
  clear_has_get_formula();
}
inline bool generic_analysis::get_formula() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.get_formula)
  return get_formula_;
}
inline void generic_analysis::set_get_formula(bool value) {
  set_has_get_formula();
  get_formula_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.get_formula)
}

// optional uint64 from_addr = 6;
inline bool generic_analysis::has_from_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void generic_analysis::set_has_from_addr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void generic_analysis::clear_has_from_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void generic_analysis::clear_from_addr() {
  from_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_from_addr();
}
inline ::google::protobuf::uint64 generic_analysis::from_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.from_addr)
  return from_addr_;
}
inline void generic_analysis::set_from_addr(::google::protobuf::uint64 value) {
  set_has_from_addr();
  from_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.from_addr)
}

// optional uint64 to_addr = 7;
inline bool generic_analysis::has_to_addr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void generic_analysis::set_has_to_addr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void generic_analysis::clear_has_to_addr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void generic_analysis::clear_to_addr() {
  to_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_to_addr();
}
inline ::google::protobuf::uint64 generic_analysis::to_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.to_addr)
  return to_addr_;
}
inline void generic_analysis::set_to_addr(::google::protobuf::uint64 value) {
  set_has_to_addr();
  to_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.to_addr)
}

// optional uint64 restrict_values_from = 8;
inline bool generic_analysis::has_restrict_values_from() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void generic_analysis::set_has_restrict_values_from() {
  _has_bits_[0] |= 0x00000040u;
}
inline void generic_analysis::clear_has_restrict_values_from() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void generic_analysis::clear_restrict_values_from() {
  restrict_values_from_ = GOOGLE_ULONGLONG(0);
  clear_has_restrict_values_from();
}
inline ::google::protobuf::uint64 generic_analysis::restrict_values_from() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.restrict_values_from)
  return restrict_values_from_;
}
inline void generic_analysis::set_restrict_values_from(::google::protobuf::uint64 value) {
  set_has_restrict_values_from();
  restrict_values_from_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.restrict_values_from)
}

// optional uint64 restrict_values_to = 9;
inline bool generic_analysis::has_restrict_values_to() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void generic_analysis::set_has_restrict_values_to() {
  _has_bits_[0] |= 0x00000080u;
}
inline void generic_analysis::clear_has_restrict_values_to() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void generic_analysis::clear_restrict_values_to() {
  restrict_values_to_ = GOOGLE_ULONGLONG(0);
  clear_has_restrict_values_to();
}
inline ::google::protobuf::uint64 generic_analysis::restrict_values_to() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.restrict_values_to)
  return restrict_values_to_;
}
inline void generic_analysis::set_restrict_values_to(::google::protobuf::uint64 value) {
  set_has_restrict_values_to();
  restrict_values_to_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.restrict_values_to)
}

// -------------------------------------------------------------------

// generic_analysis_results

// required .common.smt_result result = 1;
inline bool generic_analysis_results::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void generic_analysis_results::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void generic_analysis_results::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void generic_analysis_results::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::common::smt_result generic_analysis_results::result() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis_results.result)
  return static_cast< ::common::smt_result >(result_);
}
inline void generic_analysis_results::set_result(::common::smt_result value) {
  assert(::common::smt_result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis_results.result)
}

// repeated uint64 values = 2;
inline int generic_analysis_results::values_size() const {
  return values_.size();
}
inline void generic_analysis_results::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint64 generic_analysis_results::values(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis_results.values)
  return values_.Get(index);
}
inline void generic_analysis_results::set_values(int index, ::google::protobuf::uint64 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis_results.values)
}
inline void generic_analysis_results::add_values(::google::protobuf::uint64 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:analysis_config.generic_analysis_results.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
generic_analysis_results::values() const {
  // @@protoc_insertion_point(field_list:analysis_config.generic_analysis_results.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
generic_analysis_results::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.generic_analysis_results.values)
  return &values_;
}

// optional string smt_formula = 3;
inline bool generic_analysis_results::has_smt_formula() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void generic_analysis_results::set_has_smt_formula() {
  _has_bits_[0] |= 0x00000001u;
}
inline void generic_analysis_results::clear_has_smt_formula() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void generic_analysis_results::clear_smt_formula() {
  smt_formula_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smt_formula();
}
inline const ::std::string& generic_analysis_results::smt_formula() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis_results.smt_formula)
  return smt_formula_.GetNoArena();
}
inline void generic_analysis_results::set_smt_formula(const ::std::string& value) {
  set_has_smt_formula();
  smt_formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis_results.smt_formula)
}
#if LANG_CXX11
inline void generic_analysis_results::set_smt_formula(::std::string&& value) {
  set_has_smt_formula();
  smt_formula_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:analysis_config.generic_analysis_results.smt_formula)
}
#endif
inline void generic_analysis_results::set_smt_formula(const char* value) {
  set_has_smt_formula();
  smt_formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analysis_config.generic_analysis_results.smt_formula)
}
inline void generic_analysis_results::set_smt_formula(const char* value, size_t size) {
  set_has_smt_formula();
  smt_formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analysis_config.generic_analysis_results.smt_formula)
}
inline ::std::string* generic_analysis_results::mutable_smt_formula() {
  set_has_smt_formula();
  // @@protoc_insertion_point(field_mutable:analysis_config.generic_analysis_results.smt_formula)
  return smt_formula_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* generic_analysis_results::release_smt_formula() {
  // @@protoc_insertion_point(field_release:analysis_config.generic_analysis_results.smt_formula)
  clear_has_smt_formula();
  return smt_formula_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void generic_analysis_results::set_allocated_smt_formula(::std::string* smt_formula) {
  if (smt_formula != NULL) {
    set_has_smt_formula();
  } else {
    clear_has_smt_formula();
  }
  smt_formula_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smt_formula);
  // @@protoc_insertion_point(field_set_allocated:analysis_config.generic_analysis_results.smt_formula)
}

// -------------------------------------------------------------------

// callret_analysis_results_call_data

// required uint64 addr = 1;
inline bool callret_analysis_results_call_data::has_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void callret_analysis_results_call_data::set_has_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void callret_analysis_results_call_data::clear_has_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void callret_analysis_results_call_data::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
  clear_has_addr();
}
inline ::google::protobuf::uint64 callret_analysis_results_call_data::addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.call_data.addr)
  return addr_;
}
inline void callret_analysis_results_call_data::set_addr(::google::protobuf::uint64 value) {
  set_has_addr();
  addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.call_data.addr)
}

// required .analysis_config.callret_analysis_results.callret_status status = 2;
inline bool callret_analysis_results_call_data::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void callret_analysis_results_call_data::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void callret_analysis_results_call_data::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void callret_analysis_results_call_data::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::analysis_config::callret_analysis_results_callret_status callret_analysis_results_call_data::status() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.call_data.status)
  return static_cast< ::analysis_config::callret_analysis_results_callret_status >(status_);
}
inline void callret_analysis_results_call_data::set_status(::analysis_config::callret_analysis_results_callret_status value) {
  assert(::analysis_config::callret_analysis_results_callret_status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.call_data.status)
}

// -------------------------------------------------------------------

// callret_analysis_results_ret_data

// required uint64 ret_addr = 1;
inline bool callret_analysis_results_ret_data::has_ret_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void callret_analysis_results_ret_data::set_has_ret_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void callret_analysis_results_ret_data::clear_has_ret_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void callret_analysis_results_ret_data::clear_ret_addr() {
  ret_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_ret_addr();
}
inline ::google::protobuf::uint64 callret_analysis_results_ret_data::ret_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.ret_addr)
  return ret_addr_;
}
inline void callret_analysis_results_ret_data::set_ret_addr(::google::protobuf::uint64 value) {
  set_has_ret_addr();
  ret_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.ret_addr)
}

// required .analysis_config.callret_analysis_results.callret_status status = 2;
inline bool callret_analysis_results_ret_data::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void callret_analysis_results_ret_data::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void callret_analysis_results_ret_data::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void callret_analysis_results_ret_data::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::analysis_config::callret_analysis_results_callret_status callret_analysis_results_ret_data::status() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.status)
  return static_cast< ::analysis_config::callret_analysis_results_callret_status >(status_);
}
inline void callret_analysis_results_ret_data::set_status(::analysis_config::callret_analysis_results_callret_status value) {
  assert(::analysis_config::callret_analysis_results_callret_status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.status)
}

// repeated .analysis_config.callret_analysis_results.callret_labels labels = 3;
inline int callret_analysis_results_ret_data::labels_size() const {
  return labels_.size();
}
inline void callret_analysis_results_ret_data::clear_labels() {
  labels_.Clear();
}
inline ::analysis_config::callret_analysis_results_callret_labels callret_analysis_results_ret_data::labels(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.labels)
  return static_cast< ::analysis_config::callret_analysis_results_callret_labels >(labels_.Get(index));
}
inline void callret_analysis_results_ret_data::set_labels(int index, ::analysis_config::callret_analysis_results_callret_labels value) {
  assert(::analysis_config::callret_analysis_results_callret_labels_IsValid(value));
  labels_.Set(index, value);
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.labels)
}
inline void callret_analysis_results_ret_data::add_labels(::analysis_config::callret_analysis_results_callret_labels value) {
  assert(::analysis_config::callret_analysis_results_callret_labels_IsValid(value));
  labels_.Add(value);
  // @@protoc_insertion_point(field_add:analysis_config.callret_analysis_results.ret_data.labels)
}
inline const ::google::protobuf::RepeatedField<int>&
callret_analysis_results_ret_data::labels() const {
  // @@protoc_insertion_point(field_list:analysis_config.callret_analysis_results.ret_data.labels)
  return labels_;
}
inline ::google::protobuf::RepeatedField<int>*
callret_analysis_results_ret_data::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.callret_analysis_results.ret_data.labels)
  return &labels_;
}

// repeated uint64 returnsites = 4;
inline int callret_analysis_results_ret_data::returnsites_size() const {
  return returnsites_.size();
}
inline void callret_analysis_results_ret_data::clear_returnsites() {
  returnsites_.Clear();
}
inline ::google::protobuf::uint64 callret_analysis_results_ret_data::returnsites(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.returnsites)
  return returnsites_.Get(index);
}
inline void callret_analysis_results_ret_data::set_returnsites(int index, ::google::protobuf::uint64 value) {
  returnsites_.Set(index, value);
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.returnsites)
}
inline void callret_analysis_results_ret_data::add_returnsites(::google::protobuf::uint64 value) {
  returnsites_.Add(value);
  // @@protoc_insertion_point(field_add:analysis_config.callret_analysis_results.ret_data.returnsites)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
callret_analysis_results_ret_data::returnsites() const {
  // @@protoc_insertion_point(field_list:analysis_config.callret_analysis_results.ret_data.returnsites)
  return returnsites_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
callret_analysis_results_ret_data::mutable_returnsites() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.callret_analysis_results.ret_data.returnsites)
  return &returnsites_;
}

// required uint32 solve_count = 5;
inline bool callret_analysis_results_ret_data::has_solve_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void callret_analysis_results_ret_data::set_has_solve_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void callret_analysis_results_ret_data::clear_has_solve_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void callret_analysis_results_ret_data::clear_solve_count() {
  solve_count_ = 0u;
  clear_has_solve_count();
}
inline ::google::protobuf::uint32 callret_analysis_results_ret_data::solve_count() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.solve_count)
  return solve_count_;
}
inline void callret_analysis_results_ret_data::set_solve_count(::google::protobuf::uint32 value) {
  set_has_solve_count();
  solve_count_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.solve_count)
}

// repeated .analysis_config.callret_analysis_results.call_data calls = 6;
inline int callret_analysis_results_ret_data::calls_size() const {
  return calls_.size();
}
inline void callret_analysis_results_ret_data::clear_calls() {
  calls_.Clear();
}
inline const ::analysis_config::callret_analysis_results_call_data& callret_analysis_results_ret_data::calls(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.calls)
  return calls_.Get(index);
}
inline ::analysis_config::callret_analysis_results_call_data* callret_analysis_results_ret_data::mutable_calls(int index) {
  // @@protoc_insertion_point(field_mutable:analysis_config.callret_analysis_results.ret_data.calls)
  return calls_.Mutable(index);
}
inline ::analysis_config::callret_analysis_results_call_data* callret_analysis_results_ret_data::add_calls() {
  // @@protoc_insertion_point(field_add:analysis_config.callret_analysis_results.ret_data.calls)
  return calls_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_call_data >*
callret_analysis_results_ret_data::mutable_calls() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.callret_analysis_results.ret_data.calls)
  return &calls_;
}
inline const ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_call_data >&
callret_analysis_results_ret_data::calls() const {
  // @@protoc_insertion_point(field_list:analysis_config.callret_analysis_results.ret_data.calls)
  return calls_;
}

// -------------------------------------------------------------------

// callret_analysis_results

// repeated .analysis_config.callret_analysis_results.ret_data values = 1;
inline int callret_analysis_results::values_size() const {
  return values_.size();
}
inline void callret_analysis_results::clear_values() {
  values_.Clear();
}
inline const ::analysis_config::callret_analysis_results_ret_data& callret_analysis_results::values(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.values)
  return values_.Get(index);
}
inline ::analysis_config::callret_analysis_results_ret_data* callret_analysis_results::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:analysis_config.callret_analysis_results.values)
  return values_.Mutable(index);
}
inline ::analysis_config::callret_analysis_results_ret_data* callret_analysis_results::add_values() {
  // @@protoc_insertion_point(field_add:analysis_config.callret_analysis_results.values)
  return values_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_ret_data >*
callret_analysis_results::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.callret_analysis_results.values)
  return &values_;
}
inline const ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_ret_data >&
callret_analysis_results::values() const {
  // @@protoc_insertion_point(field_list:analysis_config.callret_analysis_results.values)
  return values_;
}

// -------------------------------------------------------------------

// po_analysis_results_po_data

// required uint64 jmp_addr = 1;
inline bool po_analysis_results_po_data::has_jmp_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void po_analysis_results_po_data::set_has_jmp_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void po_analysis_results_po_data::clear_has_jmp_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void po_analysis_results_po_data::clear_jmp_addr() {
  jmp_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_jmp_addr();
}
inline ::google::protobuf::uint64 po_analysis_results_po_data::jmp_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.jmp_addr)
  return jmp_addr_;
}
inline void po_analysis_results_po_data::set_jmp_addr(::google::protobuf::uint64 value) {
  set_has_jmp_addr();
  jmp_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.jmp_addr)
}

// required .analysis_config.po_analysis_results.po_status status = 2;
inline bool po_analysis_results_po_data::has_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void po_analysis_results_po_data::set_has_status() {
  _has_bits_[0] |= 0x00000040u;
}
inline void po_analysis_results_po_data::clear_has_status() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void po_analysis_results_po_data::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::analysis_config::po_analysis_results_po_status po_analysis_results_po_data::status() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.status)
  return static_cast< ::analysis_config::po_analysis_results_po_status >(status_);
}
inline void po_analysis_results_po_data::set_status(::analysis_config::po_analysis_results_po_status value) {
  assert(::analysis_config::po_analysis_results_po_status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.status)
}

// required uint32 ksteps = 3;
inline bool po_analysis_results_po_data::has_ksteps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void po_analysis_results_po_data::set_has_ksteps() {
  _has_bits_[0] |= 0x00000004u;
}
inline void po_analysis_results_po_data::clear_has_ksteps() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void po_analysis_results_po_data::clear_ksteps() {
  ksteps_ = 0u;
  clear_has_ksteps();
}
inline ::google::protobuf::uint32 po_analysis_results_po_data::ksteps() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.ksteps)
  return ksteps_;
}
inline void po_analysis_results_po_data::set_ksteps(::google::protobuf::uint32 value) {
  set_has_ksteps();
  ksteps_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.ksteps)
}

// required float computation_time = 4;
inline bool po_analysis_results_po_data::has_computation_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void po_analysis_results_po_data::set_has_computation_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void po_analysis_results_po_data::clear_has_computation_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void po_analysis_results_po_data::clear_computation_time() {
  computation_time_ = 0;
  clear_has_computation_time();
}
inline float po_analysis_results_po_data::computation_time() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.computation_time)
  return computation_time_;
}
inline void po_analysis_results_po_data::set_computation_time(float value) {
  set_has_computation_time();
  computation_time_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.computation_time)
}

// optional uint32 nb_paths = 5;
inline bool po_analysis_results_po_data::has_nb_paths() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void po_analysis_results_po_data::set_has_nb_paths() {
  _has_bits_[0] |= 0x00000020u;
}
inline void po_analysis_results_po_data::clear_has_nb_paths() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void po_analysis_results_po_data::clear_nb_paths() {
  nb_paths_ = 0u;
  clear_has_nb_paths();
}
inline ::google::protobuf::uint32 po_analysis_results_po_data::nb_paths() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.nb_paths)
  return nb_paths_;
}
inline void po_analysis_results_po_data::set_nb_paths(::google::protobuf::uint32 value) {
  set_has_nb_paths();
  nb_paths_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.nb_paths)
}

// optional uint64 alive_branch = 6;
inline bool po_analysis_results_po_data::has_alive_branch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void po_analysis_results_po_data::set_has_alive_branch() {
  _has_bits_[0] |= 0x00000010u;
}
inline void po_analysis_results_po_data::clear_has_alive_branch() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void po_analysis_results_po_data::clear_alive_branch() {
  alive_branch_ = GOOGLE_ULONGLONG(0);
  clear_has_alive_branch();
}
inline ::google::protobuf::uint64 po_analysis_results_po_data::alive_branch() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.alive_branch)
  return alive_branch_;
}
inline void po_analysis_results_po_data::set_alive_branch(::google::protobuf::uint64 value) {
  set_has_alive_branch();
  alive_branch_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.alive_branch)
}

// optional string formula = 7;
inline bool po_analysis_results_po_data::has_formula() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void po_analysis_results_po_data::set_has_formula() {
  _has_bits_[0] |= 0x00000001u;
}
inline void po_analysis_results_po_data::clear_has_formula() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void po_analysis_results_po_data::clear_formula() {
  formula_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_formula();
}
inline const ::std::string& po_analysis_results_po_data::formula() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.formula)
  return formula_.GetNoArena();
}
inline void po_analysis_results_po_data::set_formula(const ::std::string& value) {
  set_has_formula();
  formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.formula)
}
#if LANG_CXX11
inline void po_analysis_results_po_data::set_formula(::std::string&& value) {
  set_has_formula();
  formula_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:analysis_config.po_analysis_results.po_data.formula)
}
#endif
inline void po_analysis_results_po_data::set_formula(const char* value) {
  set_has_formula();
  formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analysis_config.po_analysis_results.po_data.formula)
}
inline void po_analysis_results_po_data::set_formula(const char* value, size_t size) {
  set_has_formula();
  formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analysis_config.po_analysis_results.po_data.formula)
}
inline ::std::string* po_analysis_results_po_data::mutable_formula() {
  set_has_formula();
  // @@protoc_insertion_point(field_mutable:analysis_config.po_analysis_results.po_data.formula)
  return formula_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* po_analysis_results_po_data::release_formula() {
  // @@protoc_insertion_point(field_release:analysis_config.po_analysis_results.po_data.formula)
  clear_has_formula();
  return formula_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void po_analysis_results_po_data::set_allocated_formula(::std::string* formula) {
  if (formula != NULL) {
    set_has_formula();
  } else {
    clear_has_formula();
  }
  formula_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), formula);
  // @@protoc_insertion_point(field_set_allocated:analysis_config.po_analysis_results.po_data.formula)
}

// -------------------------------------------------------------------

// po_analysis_results

// repeated .analysis_config.po_analysis_results.po_data values = 1;
inline int po_analysis_results::values_size() const {
  return values_.size();
}
inline void po_analysis_results::clear_values() {
  values_.Clear();
}
inline const ::analysis_config::po_analysis_results_po_data& po_analysis_results::values(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.values)
  return values_.Get(index);
}
inline ::analysis_config::po_analysis_results_po_data* po_analysis_results::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:analysis_config.po_analysis_results.values)
  return values_.Mutable(index);
}
inline ::analysis_config::po_analysis_results_po_data* po_analysis_results::add_values() {
  // @@protoc_insertion_point(field_add:analysis_config.po_analysis_results.values)
  return values_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::analysis_config::po_analysis_results_po_data >*
po_analysis_results::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.po_analysis_results.values)
  return &values_;
}
inline const ::google::protobuf::RepeatedPtrField< ::analysis_config::po_analysis_results_po_data >&
po_analysis_results::values() const {
  // @@protoc_insertion_point(field_list:analysis_config.po_analysis_results.values)
  return values_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace analysis_config

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::analysis_config::specific_parameters_t_analyse_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analysis_config::specific_parameters_t_analyse_type>() {
  return ::analysis_config::specific_parameters_t_analyse_type_descriptor();
}
template <> struct is_proto_enum< ::analysis_config::generic_analysis_query_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analysis_config::generic_analysis_query_type>() {
  return ::analysis_config::generic_analysis_query_type_descriptor();
}
template <> struct is_proto_enum< ::analysis_config::callret_analysis_results_callret_labels> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analysis_config::callret_analysis_results_callret_labels>() {
  return ::analysis_config::callret_analysis_results_callret_labels_descriptor();
}
template <> struct is_proto_enum< ::analysis_config::callret_analysis_results_callret_status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analysis_config::callret_analysis_results_callret_status>() {
  return ::analysis_config::callret_analysis_results_callret_status_descriptor();
}
template <> struct is_proto_enum< ::analysis_config::po_analysis_results_po_status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analysis_config::po_analysis_results_po_status>() {
  return ::analysis_config::po_analysis_results_po_status_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_analysis_5fconfig_2eproto__INCLUDED
