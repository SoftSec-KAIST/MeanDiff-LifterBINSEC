// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class message_start_execDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_start_exec> {
} _message_start_exec_default_instance_;
class message_bp_reachedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_bp_reached> {
} _message_bp_reached_default_instance_;
class message_patchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_patch> {
} _message_patch_default_instance_;
class message_infosDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_infos> {
} _message_infos_default_instance_;
class message_decode_instr_instr_entryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_decode_instr_instr_entry> {
} _message_decode_instr_instr_entry_default_instance_;
class message_decode_instrDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_decode_instr> {
} _message_decode_instr_default_instance_;
class message_decode_instr_reply_instr_entryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_decode_instr_reply_instr_entry> {
  public:
  const ::dba::dba_list* dba_instrs_;
} _message_decode_instr_reply_instr_entry_default_instance_;
class message_decode_instr_replyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_decode_instr_reply> {
} _message_decode_instr_reply_default_instance_;
class message_start_symb_execDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_start_symb_exec> {
} _message_start_symb_exec_default_instance_;
class message_outputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message_output> {
} _message_output_default_instance_;

namespace protobuf_message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_exec, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_exec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_exec, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_exec, stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_exec, size_chunks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_exec, breakpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_exec, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_exec, skips_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_bp_reached, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_bp_reached, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_bp_reached, addr_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_patch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_patch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_patch, patch_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_infos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_infos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_infos, nb_workers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_infos, analyses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_infos, solvers_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_instr_entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_instr_entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_instr_entry, instr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_instr_entry, base_addr_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr, instrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr, irkind_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_reply_instr_entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_reply_instr_entry, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_reply_instr_entry, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_reply_instr_entry, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_reply_instr_entry, irkind_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_message_decode_instr_reply_instr_entry_default_instance_), dba_instrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_reply_instr_entry, instrs_cnt_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_reply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_reply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_decode_instr_reply, instrs_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, trace_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, solver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, irkind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, formula_optim_cstfold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, formula_optim_rebase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, formula_optim_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, verbose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, addr_predicate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, predicate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_start_symb_exec, trace_filename_),
  10,
  0,
  11,
  3,
  9,
  4,
  5,
  6,
  7,
  8,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_output, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_output, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_output, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_output, ram_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_output, ram_free_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message_output, ram_available_),
  4,
  0,
  1,
  2,
  3,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(message_start_exec)},
  { 16, 21, sizeof(message_bp_reached)},
  { 22, 27, sizeof(message_patch)},
  { 28, 35, sizeof(message_infos)},
  { 38, 44, sizeof(message_decode_instr_instr_entry)},
  { 46, 53, sizeof(message_decode_instr)},
  { 56, 64, sizeof(message_decode_instr_reply_instr_entry)},
  { 67, 72, sizeof(message_decode_instr_reply)},
  { 73, 89, sizeof(message_start_symb_exec)},
  { 101, 110, sizeof(message_output)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_start_exec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_bp_reached_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_patch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_infos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_decode_instr_instr_entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_decode_instr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_decode_instr_reply_instr_entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_decode_instr_reply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_start_symb_exec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_output_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace

void TableStruct::Shutdown() {
  _message_start_exec_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _message_bp_reached_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _message_patch_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _message_infos_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _message_decode_instr_instr_entry_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _message_decode_instr_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _message_decode_instr_reply_instr_entry_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _message_decode_instr_reply_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _message_start_symb_exec_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _message_output_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::common::protobuf_common_2eproto::InitDefaults();
  ::dba::protobuf_dba_2eproto::InitDefaults();
  ::configuration::protobuf_config_2eproto::InitDefaults();
  _message_start_exec_default_instance_.DefaultConstruct();
  _message_bp_reached_default_instance_.DefaultConstruct();
  _message_patch_default_instance_.DefaultConstruct();
  _message_infos_default_instance_.DefaultConstruct();
  _message_decode_instr_instr_entry_default_instance_.DefaultConstruct();
  _message_decode_instr_default_instance_.DefaultConstruct();
  _message_decode_instr_reply_instr_entry_default_instance_.DefaultConstruct();
  _message_decode_instr_reply_default_instance_.DefaultConstruct();
  _message_start_symb_exec_default_instance_.DefaultConstruct();
  _message_output_default_instance_.DefaultConstruct();
  _message_decode_instr_reply_instr_entry_default_instance_.dba_instrs_ = const_cast< ::dba::dba_list*>(
      ::dba::dba_list::internal_default_instance());
  _message_start_symb_exec_default_instance_.get_mutable()->config_ = const_cast< ::configuration::configuration*>(
      ::configuration::configuration::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rmessage.proto\032\014common.proto\032\tdba.proto"
      "\032\014config.proto\"\230\001\n\022message_start_exec\022\r\n"
      "\005start\030\001 \002(\004\022\014\n\004stop\030\002 \002(\004\022\031\n\013size_chunk"
      "s\030\003 \001(\r:\0041000\022\023\n\013breakpoints\030\004 \003(\004\022&\n\006in"
      "puts\030\005 \003(\0132\026.configuration.input_t\022\r\n\005sk"
      "ips\030\006 \003(\004\"\"\n\022message_bp_reached\022\014\n\004addr\030"
      "\001 \002(\004\"6\n\rmessage_patch\022%\n\005patch\030\001 \003(\0132\026."
      "configuration.input_t\"F\n\rmessage_infos\022\022"
      "\n\nnb_workers\030\001 \002(\r\022\020\n\010analyses\030\002 \003(\t\022\017\n\007"
      "solvers\030\003 \003(\t\"\367\001\n\024message_decode_instr\0221"
      "\n\006instrs\030\001 \003(\0132!.message_decode_instr.in"
      "str_entry\0221\n\004kind\030\002 \001(\0162\036.message_decode"
      "_instr.bin_kind:\003BIN\022&\n\006irkind\030\003 \001(\0162\021.c"
      "ommon.ir_kind_t:\003DBA\0322\n\013instr_entry\022\r\n\005i"
      "nstr\030\001 \002(\t\022\024\n\tbase_addr\030\002 \001(\004:\0010\"\035\n\010bin_"
      "kind\022\010\n\004HEXA\020\001\022\007\n\003BIN\020\002\"\312\001\n\032message_deco"
      "de_instr_reply\0227\n\006instrs\030\001 \003(\0132\'.message"
      "_decode_instr_reply.instr_entry\032s\n\013instr"
      "_entry\022\016\n\006opcode\030\001 \002(\t\022!\n\006irkind\030\002 \002(\0162\021"
      ".common.ir_kind_t\022#\n\ndba_instrs\030\003 \001(\0132\r."
      "dba.dba_listH\000B\014\n\ninstrs_cnt\"\254\003\n\027message"
      "_start_symb_exec\0227\n\ntrace_type\030\001 \002(\0162#.m"
      "essage_start_symb_exec.trace_kind\022\014\n\004nam"
      "e\030\002 \002(\t\022$\n\006solver\030\003 \001(\0162\020.common.solver_"
      "t:\002Z3\022,\n\006config\030\004 \001(\0132\034.configuration.co"
      "nfiguration\022&\n\006irkind\030\005 \001(\0162\021.common.ir_"
      "kind_t:\003DBA\022\035\n\025formula_optim_cstfold\030\006 \001"
      "(\010\022\034\n\024formula_optim_rebase\030\007 \001(\010\022\031\n\021form"
      "ula_optim_row\030\010 \001(\010\022\017\n\007verbose\030\t \002(\r\022\026\n\016"
      "addr_predicate\030\n \001(\004\022\021\n\tpredicate\030\013 \001(\t\022"
      "\026\n\016trace_filename\030\014 \001(\t\"\"\n\ntrace_kind\022\010\n"
      "\004FILE\020\001\022\n\n\006STREAM\020\002\"\340\001\n\016message_output\022)"
      "\n\004type\030\001 \002(\0162\033.message_output.output_kin"
      "d\022\017\n\007message\030\002 \002(\t\022\021\n\tram_total\030\003 \001(\r\022\020\n"
      "\010ram_free\030\004 \001(\r\022\025\n\rram_available\030\005 \001(\r\"V"
      "\n\013output_kind\022\013\n\007SUCCESS\020\001\022\n\n\006RESULT\020\002\022\t"
      "\n\005DEBUG\020\003\022\013\n\007WARNING\020\004\022\t\n\005ERROR\020\005\022\013\n\007FAI"
      "LURE\020\006"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1486);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  ::common::protobuf_common_2eproto::AddDescriptors();
  ::dba::protobuf_dba_2eproto::AddDescriptors();
  ::configuration::protobuf_config_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_message_2eproto

const ::google::protobuf::EnumDescriptor* message_decode_instr_bin_kind_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[0];
}
bool message_decode_instr_bin_kind_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const message_decode_instr_bin_kind message_decode_instr::HEXA;
const message_decode_instr_bin_kind message_decode_instr::BIN;
const message_decode_instr_bin_kind message_decode_instr::bin_kind_MIN;
const message_decode_instr_bin_kind message_decode_instr::bin_kind_MAX;
const int message_decode_instr::bin_kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* message_start_symb_exec_trace_kind_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[1];
}
bool message_start_symb_exec_trace_kind_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const message_start_symb_exec_trace_kind message_start_symb_exec::FILE;
const message_start_symb_exec_trace_kind message_start_symb_exec::STREAM;
const message_start_symb_exec_trace_kind message_start_symb_exec::trace_kind_MIN;
const message_start_symb_exec_trace_kind message_start_symb_exec::trace_kind_MAX;
const int message_start_symb_exec::trace_kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* message_output_output_kind_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[2];
}
bool message_output_output_kind_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const message_output_output_kind message_output::SUCCESS;
const message_output_output_kind message_output::RESULT;
const message_output_output_kind message_output::DEBUG;
const message_output_output_kind message_output::WARNING;
const message_output_output_kind message_output::ERROR;
const message_output_output_kind message_output::FAILURE;
const message_output_output_kind message_output::output_kind_MIN;
const message_output_output_kind message_output::output_kind_MAX;
const int message_output::output_kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_start_exec::kStartFieldNumber;
const int message_start_exec::kStopFieldNumber;
const int message_start_exec::kSizeChunksFieldNumber;
const int message_start_exec::kBreakpointsFieldNumber;
const int message_start_exec::kInputsFieldNumber;
const int message_start_exec::kSkipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_start_exec::message_start_exec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_start_exec)
}
message_start_exec::message_start_exec(const message_start_exec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      breakpoints_(from.breakpoints_),
      inputs_(from.inputs_),
      skips_(from.skips_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    reinterpret_cast<char*>(&size_chunks_) -
    reinterpret_cast<char*>(&start_) + sizeof(size_chunks_));
  // @@protoc_insertion_point(copy_constructor:message_start_exec)
}

void message_start_exec::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&start_, 0, reinterpret_cast<char*>(&stop_) -
    reinterpret_cast<char*>(&start_) + sizeof(stop_));
  size_chunks_ = 1000u;
}

message_start_exec::~message_start_exec() {
  // @@protoc_insertion_point(destructor:message_start_exec)
  SharedDtor();
}

void message_start_exec::SharedDtor() {
}

void message_start_exec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_start_exec::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[0].descriptor;
}

const message_start_exec& message_start_exec::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_start_exec* message_start_exec::New(::google::protobuf::Arena* arena) const {
  message_start_exec* n = new message_start_exec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_start_exec::Clear() {
// @@protoc_insertion_point(message_clear_start:message_start_exec)
  breakpoints_.Clear();
  inputs_.Clear();
  skips_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&start_, 0, reinterpret_cast<char*>(&stop_) -
      reinterpret_cast<char*>(&start_) + sizeof(stop_));
    size_chunks_ = 1000u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_start_exec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_start_exec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 start = 1;
      case 1: {
        if (tag == 8u) {
          set_has_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 stop = 2;
      case 2: {
        if (tag == 16u) {
          set_has_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 size_chunks = 3 [default = 1000];
      case 3: {
        if (tag == 24u) {
          set_has_size_chunks();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_chunks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 breakpoints = 4;
      case 4: {
        if (tag == 32u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32u, input, this->mutable_breakpoints())));
        } else if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_breakpoints())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .configuration.input_t inputs = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated uint64 skips = 6;
      case 6: {
        if (tag == 48u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 48u, input, this->mutable_skips())));
        } else if (tag == 50u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_skips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_start_exec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_start_exec)
  return false;
#undef DO_
}

void message_start_exec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_start_exec)
  // required uint64 start = 1;
  if (has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start(), output);
  }

  // required uint64 stop = 2;
  if (has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->stop(), output);
  }

  // optional uint32 size_chunks = 3 [default = 1000];
  if (has_size_chunks()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->size_chunks(), output);
  }

  // repeated uint64 breakpoints = 4;
  for (int i = 0; i < this->breakpoints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->breakpoints(i), output);
  }

  // repeated .configuration.input_t inputs = 5;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->inputs(i), output);
  }

  // repeated uint64 skips = 6;
  for (int i = 0; i < this->skips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      6, this->skips(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_start_exec)
}

::google::protobuf::uint8* message_start_exec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_start_exec)
  // required uint64 start = 1;
  if (has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start(), target);
  }

  // required uint64 stop = 2;
  if (has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->stop(), target);
  }

  // optional uint32 size_chunks = 3 [default = 1000];
  if (has_size_chunks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->size_chunks(), target);
  }

  // repeated uint64 breakpoints = 4;
  for (int i = 0; i < this->breakpoints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(4, this->breakpoints(i), target);
  }

  // repeated .configuration.input_t inputs = 5;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->inputs(i), false, target);
  }

  // repeated uint64 skips = 6;
  for (int i = 0; i < this->skips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(6, this->skips(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_start_exec)
  return target;
}

size_t message_start_exec::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message_start_exec)
  size_t total_size = 0;

  if (has_start()) {
    // required uint64 start = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start());
  }

  if (has_stop()) {
    // required uint64 stop = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->stop());
  }

  return total_size;
}
size_t message_start_exec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_start_exec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 start = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start());

    // required uint64 stop = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->stop());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint64 breakpoints = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->breakpoints_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->breakpoints_size());
    total_size += data_size;
  }

  // repeated .configuration.input_t inputs = 5;
  {
    unsigned int count = this->inputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inputs(i));
    }
  }

  // repeated uint64 skips = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->skips_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->skips_size());
    total_size += data_size;
  }

  // optional uint32 size_chunks = 3 [default = 1000];
  if (has_size_chunks()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size_chunks());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_start_exec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_start_exec)
  GOOGLE_DCHECK_NE(&from, this);
  const message_start_exec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_start_exec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_start_exec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_start_exec)
    MergeFrom(*source);
  }
}

void message_start_exec::MergeFrom(const message_start_exec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_start_exec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  breakpoints_.MergeFrom(from.breakpoints_);
  inputs_.MergeFrom(from.inputs_);
  skips_.MergeFrom(from.skips_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_start()) {
      set_start(from.start());
    }
    if (from.has_stop()) {
      set_stop(from.stop());
    }
    if (from.has_size_chunks()) {
      set_size_chunks(from.size_chunks());
    }
  }
}

void message_start_exec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_start_exec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_start_exec::CopyFrom(const message_start_exec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_start_exec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_start_exec::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->inputs())) return false;
  return true;
}

void message_start_exec::Swap(message_start_exec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_start_exec::InternalSwap(message_start_exec* other) {
  breakpoints_.UnsafeArenaSwap(&other->breakpoints_);
  inputs_.UnsafeArenaSwap(&other->inputs_);
  skips_.UnsafeArenaSwap(&other->skips_);
  std::swap(start_, other->start_);
  std::swap(stop_, other->stop_);
  std::swap(size_chunks_, other->size_chunks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_start_exec::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_start_exec

// required uint64 start = 1;
bool message_start_exec::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void message_start_exec::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
void message_start_exec::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
void message_start_exec::clear_start() {
  start_ = GOOGLE_ULONGLONG(0);
  clear_has_start();
}
::google::protobuf::uint64 message_start_exec::start() const {
  // @@protoc_insertion_point(field_get:message_start_exec.start)
  return start_;
}
void message_start_exec::set_start(::google::protobuf::uint64 value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:message_start_exec.start)
}

// required uint64 stop = 2;
bool message_start_exec::has_stop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void message_start_exec::set_has_stop() {
  _has_bits_[0] |= 0x00000002u;
}
void message_start_exec::clear_has_stop() {
  _has_bits_[0] &= ~0x00000002u;
}
void message_start_exec::clear_stop() {
  stop_ = GOOGLE_ULONGLONG(0);
  clear_has_stop();
}
::google::protobuf::uint64 message_start_exec::stop() const {
  // @@protoc_insertion_point(field_get:message_start_exec.stop)
  return stop_;
}
void message_start_exec::set_stop(::google::protobuf::uint64 value) {
  set_has_stop();
  stop_ = value;
  // @@protoc_insertion_point(field_set:message_start_exec.stop)
}

// optional uint32 size_chunks = 3 [default = 1000];
bool message_start_exec::has_size_chunks() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void message_start_exec::set_has_size_chunks() {
  _has_bits_[0] |= 0x00000004u;
}
void message_start_exec::clear_has_size_chunks() {
  _has_bits_[0] &= ~0x00000004u;
}
void message_start_exec::clear_size_chunks() {
  size_chunks_ = 1000u;
  clear_has_size_chunks();
}
::google::protobuf::uint32 message_start_exec::size_chunks() const {
  // @@protoc_insertion_point(field_get:message_start_exec.size_chunks)
  return size_chunks_;
}
void message_start_exec::set_size_chunks(::google::protobuf::uint32 value) {
  set_has_size_chunks();
  size_chunks_ = value;
  // @@protoc_insertion_point(field_set:message_start_exec.size_chunks)
}

// repeated uint64 breakpoints = 4;
int message_start_exec::breakpoints_size() const {
  return breakpoints_.size();
}
void message_start_exec::clear_breakpoints() {
  breakpoints_.Clear();
}
::google::protobuf::uint64 message_start_exec::breakpoints(int index) const {
  // @@protoc_insertion_point(field_get:message_start_exec.breakpoints)
  return breakpoints_.Get(index);
}
void message_start_exec::set_breakpoints(int index, ::google::protobuf::uint64 value) {
  breakpoints_.Set(index, value);
  // @@protoc_insertion_point(field_set:message_start_exec.breakpoints)
}
void message_start_exec::add_breakpoints(::google::protobuf::uint64 value) {
  breakpoints_.Add(value);
  // @@protoc_insertion_point(field_add:message_start_exec.breakpoints)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
message_start_exec::breakpoints() const {
  // @@protoc_insertion_point(field_list:message_start_exec.breakpoints)
  return breakpoints_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
message_start_exec::mutable_breakpoints() {
  // @@protoc_insertion_point(field_mutable_list:message_start_exec.breakpoints)
  return &breakpoints_;
}

// repeated .configuration.input_t inputs = 5;
int message_start_exec::inputs_size() const {
  return inputs_.size();
}
void message_start_exec::clear_inputs() {
  inputs_.Clear();
}
const ::configuration::input_t& message_start_exec::inputs(int index) const {
  // @@protoc_insertion_point(field_get:message_start_exec.inputs)
  return inputs_.Get(index);
}
::configuration::input_t* message_start_exec::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:message_start_exec.inputs)
  return inputs_.Mutable(index);
}
::configuration::input_t* message_start_exec::add_inputs() {
  // @@protoc_insertion_point(field_add:message_start_exec.inputs)
  return inputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::configuration::input_t >*
message_start_exec::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:message_start_exec.inputs)
  return &inputs_;
}
const ::google::protobuf::RepeatedPtrField< ::configuration::input_t >&
message_start_exec::inputs() const {
  // @@protoc_insertion_point(field_list:message_start_exec.inputs)
  return inputs_;
}

// repeated uint64 skips = 6;
int message_start_exec::skips_size() const {
  return skips_.size();
}
void message_start_exec::clear_skips() {
  skips_.Clear();
}
::google::protobuf::uint64 message_start_exec::skips(int index) const {
  // @@protoc_insertion_point(field_get:message_start_exec.skips)
  return skips_.Get(index);
}
void message_start_exec::set_skips(int index, ::google::protobuf::uint64 value) {
  skips_.Set(index, value);
  // @@protoc_insertion_point(field_set:message_start_exec.skips)
}
void message_start_exec::add_skips(::google::protobuf::uint64 value) {
  skips_.Add(value);
  // @@protoc_insertion_point(field_add:message_start_exec.skips)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
message_start_exec::skips() const {
  // @@protoc_insertion_point(field_list:message_start_exec.skips)
  return skips_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
message_start_exec::mutable_skips() {
  // @@protoc_insertion_point(field_mutable_list:message_start_exec.skips)
  return &skips_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_bp_reached::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_bp_reached::message_bp_reached()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_bp_reached)
}
message_bp_reached::message_bp_reached(const message_bp_reached& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addr_ = from.addr_;
  // @@protoc_insertion_point(copy_constructor:message_bp_reached)
}

void message_bp_reached::SharedCtor() {
  _cached_size_ = 0;
  addr_ = GOOGLE_ULONGLONG(0);
}

message_bp_reached::~message_bp_reached() {
  // @@protoc_insertion_point(destructor:message_bp_reached)
  SharedDtor();
}

void message_bp_reached::SharedDtor() {
}

void message_bp_reached::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_bp_reached::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[1].descriptor;
}

const message_bp_reached& message_bp_reached::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_bp_reached* message_bp_reached::New(::google::protobuf::Arena* arena) const {
  message_bp_reached* n = new message_bp_reached;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_bp_reached::Clear() {
// @@protoc_insertion_point(message_clear_start:message_bp_reached)
  addr_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_bp_reached::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_bp_reached)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 addr = 1;
      case 1: {
        if (tag == 8u) {
          set_has_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_bp_reached)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_bp_reached)
  return false;
#undef DO_
}

void message_bp_reached::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_bp_reached)
  // required uint64 addr = 1;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_bp_reached)
}

::google::protobuf::uint8* message_bp_reached::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_bp_reached)
  // required uint64 addr = 1;
  if (has_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_bp_reached)
  return target;
}

size_t message_bp_reached::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_bp_reached)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 addr = 1;
  if (has_addr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->addr());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_bp_reached::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_bp_reached)
  GOOGLE_DCHECK_NE(&from, this);
  const message_bp_reached* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_bp_reached>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_bp_reached)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_bp_reached)
    MergeFrom(*source);
  }
}

void message_bp_reached::MergeFrom(const message_bp_reached& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_bp_reached)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_addr()) {
    set_addr(from.addr());
  }
}

void message_bp_reached::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_bp_reached)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_bp_reached::CopyFrom(const message_bp_reached& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_bp_reached)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_bp_reached::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void message_bp_reached::Swap(message_bp_reached* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_bp_reached::InternalSwap(message_bp_reached* other) {
  std::swap(addr_, other->addr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_bp_reached::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_bp_reached

// required uint64 addr = 1;
bool message_bp_reached::has_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void message_bp_reached::set_has_addr() {
  _has_bits_[0] |= 0x00000001u;
}
void message_bp_reached::clear_has_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
void message_bp_reached::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
  clear_has_addr();
}
::google::protobuf::uint64 message_bp_reached::addr() const {
  // @@protoc_insertion_point(field_get:message_bp_reached.addr)
  return addr_;
}
void message_bp_reached::set_addr(::google::protobuf::uint64 value) {
  set_has_addr();
  addr_ = value;
  // @@protoc_insertion_point(field_set:message_bp_reached.addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_patch::kPatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_patch::message_patch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_patch)
}
message_patch::message_patch(const message_patch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      patch_(from.patch_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:message_patch)
}

void message_patch::SharedCtor() {
  _cached_size_ = 0;
}

message_patch::~message_patch() {
  // @@protoc_insertion_point(destructor:message_patch)
  SharedDtor();
}

void message_patch::SharedDtor() {
}

void message_patch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_patch::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[2].descriptor;
}

const message_patch& message_patch::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_patch* message_patch::New(::google::protobuf::Arena* arena) const {
  message_patch* n = new message_patch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_patch::Clear() {
// @@protoc_insertion_point(message_clear_start:message_patch)
  patch_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_patch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_patch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .configuration.input_t patch = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_patch()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_patch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_patch)
  return false;
#undef DO_
}

void message_patch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_patch)
  // repeated .configuration.input_t patch = 1;
  for (unsigned int i = 0, n = this->patch_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->patch(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_patch)
}

::google::protobuf::uint8* message_patch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_patch)
  // repeated .configuration.input_t patch = 1;
  for (unsigned int i = 0, n = this->patch_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->patch(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_patch)
  return target;
}

size_t message_patch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_patch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .configuration.input_t patch = 1;
  {
    unsigned int count = this->patch_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->patch(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_patch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_patch)
  GOOGLE_DCHECK_NE(&from, this);
  const message_patch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_patch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_patch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_patch)
    MergeFrom(*source);
  }
}

void message_patch::MergeFrom(const message_patch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_patch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  patch_.MergeFrom(from.patch_);
}

void message_patch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_patch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_patch::CopyFrom(const message_patch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_patch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_patch::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->patch())) return false;
  return true;
}

void message_patch::Swap(message_patch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_patch::InternalSwap(message_patch* other) {
  patch_.UnsafeArenaSwap(&other->patch_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_patch::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_patch

// repeated .configuration.input_t patch = 1;
int message_patch::patch_size() const {
  return patch_.size();
}
void message_patch::clear_patch() {
  patch_.Clear();
}
const ::configuration::input_t& message_patch::patch(int index) const {
  // @@protoc_insertion_point(field_get:message_patch.patch)
  return patch_.Get(index);
}
::configuration::input_t* message_patch::mutable_patch(int index) {
  // @@protoc_insertion_point(field_mutable:message_patch.patch)
  return patch_.Mutable(index);
}
::configuration::input_t* message_patch::add_patch() {
  // @@protoc_insertion_point(field_add:message_patch.patch)
  return patch_.Add();
}
::google::protobuf::RepeatedPtrField< ::configuration::input_t >*
message_patch::mutable_patch() {
  // @@protoc_insertion_point(field_mutable_list:message_patch.patch)
  return &patch_;
}
const ::google::protobuf::RepeatedPtrField< ::configuration::input_t >&
message_patch::patch() const {
  // @@protoc_insertion_point(field_list:message_patch.patch)
  return patch_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_infos::kNbWorkersFieldNumber;
const int message_infos::kAnalysesFieldNumber;
const int message_infos::kSolversFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_infos::message_infos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_infos)
}
message_infos::message_infos(const message_infos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      analyses_(from.analyses_),
      solvers_(from.solvers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nb_workers_ = from.nb_workers_;
  // @@protoc_insertion_point(copy_constructor:message_infos)
}

void message_infos::SharedCtor() {
  _cached_size_ = 0;
  nb_workers_ = 0u;
}

message_infos::~message_infos() {
  // @@protoc_insertion_point(destructor:message_infos)
  SharedDtor();
}

void message_infos::SharedDtor() {
}

void message_infos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_infos::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[3].descriptor;
}

const message_infos& message_infos::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_infos* message_infos::New(::google::protobuf::Arena* arena) const {
  message_infos* n = new message_infos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_infos::Clear() {
// @@protoc_insertion_point(message_clear_start:message_infos)
  analyses_.Clear();
  solvers_.Clear();
  nb_workers_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_infos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_infos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nb_workers = 1;
      case 1: {
        if (tag == 8u) {
          set_has_nb_workers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nb_workers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string analyses = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_analyses()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->analyses(this->analyses_size() - 1).data(),
            this->analyses(this->analyses_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_infos.analyses");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string solvers = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_solvers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->solvers(this->solvers_size() - 1).data(),
            this->solvers(this->solvers_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_infos.solvers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_infos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_infos)
  return false;
#undef DO_
}

void message_infos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_infos)
  // required uint32 nb_workers = 1;
  if (has_nb_workers()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nb_workers(), output);
  }

  // repeated string analyses = 2;
  for (int i = 0; i < this->analyses_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->analyses(i).data(), this->analyses(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_infos.analyses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->analyses(i), output);
  }

  // repeated string solvers = 3;
  for (int i = 0; i < this->solvers_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solvers(i).data(), this->solvers(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_infos.solvers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->solvers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_infos)
}

::google::protobuf::uint8* message_infos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_infos)
  // required uint32 nb_workers = 1;
  if (has_nb_workers()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nb_workers(), target);
  }

  // repeated string analyses = 2;
  for (int i = 0; i < this->analyses_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->analyses(i).data(), this->analyses(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_infos.analyses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->analyses(i), target);
  }

  // repeated string solvers = 3;
  for (int i = 0; i < this->solvers_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solvers(i).data(), this->solvers(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_infos.solvers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->solvers(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_infos)
  return target;
}

size_t message_infos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_infos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 nb_workers = 1;
  if (has_nb_workers()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nb_workers());
  }
  // repeated string analyses = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->analyses_size());
  for (int i = 0; i < this->analyses_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->analyses(i));
  }

  // repeated string solvers = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->solvers_size());
  for (int i = 0; i < this->solvers_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->solvers(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_infos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_infos)
  GOOGLE_DCHECK_NE(&from, this);
  const message_infos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_infos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_infos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_infos)
    MergeFrom(*source);
  }
}

void message_infos::MergeFrom(const message_infos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_infos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  analyses_.MergeFrom(from.analyses_);
  solvers_.MergeFrom(from.solvers_);
  if (from.has_nb_workers()) {
    set_nb_workers(from.nb_workers());
  }
}

void message_infos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_infos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_infos::CopyFrom(const message_infos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_infos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_infos::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void message_infos::Swap(message_infos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_infos::InternalSwap(message_infos* other) {
  analyses_.UnsafeArenaSwap(&other->analyses_);
  solvers_.UnsafeArenaSwap(&other->solvers_);
  std::swap(nb_workers_, other->nb_workers_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_infos::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_infos

// required uint32 nb_workers = 1;
bool message_infos::has_nb_workers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void message_infos::set_has_nb_workers() {
  _has_bits_[0] |= 0x00000001u;
}
void message_infos::clear_has_nb_workers() {
  _has_bits_[0] &= ~0x00000001u;
}
void message_infos::clear_nb_workers() {
  nb_workers_ = 0u;
  clear_has_nb_workers();
}
::google::protobuf::uint32 message_infos::nb_workers() const {
  // @@protoc_insertion_point(field_get:message_infos.nb_workers)
  return nb_workers_;
}
void message_infos::set_nb_workers(::google::protobuf::uint32 value) {
  set_has_nb_workers();
  nb_workers_ = value;
  // @@protoc_insertion_point(field_set:message_infos.nb_workers)
}

// repeated string analyses = 2;
int message_infos::analyses_size() const {
  return analyses_.size();
}
void message_infos::clear_analyses() {
  analyses_.Clear();
}
const ::std::string& message_infos::analyses(int index) const {
  // @@protoc_insertion_point(field_get:message_infos.analyses)
  return analyses_.Get(index);
}
::std::string* message_infos::mutable_analyses(int index) {
  // @@protoc_insertion_point(field_mutable:message_infos.analyses)
  return analyses_.Mutable(index);
}
void message_infos::set_analyses(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:message_infos.analyses)
  analyses_.Mutable(index)->assign(value);
}
void message_infos::set_analyses(int index, const char* value) {
  analyses_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:message_infos.analyses)
}
void message_infos::set_analyses(int index, const char* value, size_t size) {
  analyses_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:message_infos.analyses)
}
::std::string* message_infos::add_analyses() {
  // @@protoc_insertion_point(field_add_mutable:message_infos.analyses)
  return analyses_.Add();
}
void message_infos::add_analyses(const ::std::string& value) {
  analyses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:message_infos.analyses)
}
void message_infos::add_analyses(const char* value) {
  analyses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:message_infos.analyses)
}
void message_infos::add_analyses(const char* value, size_t size) {
  analyses_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:message_infos.analyses)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
message_infos::analyses() const {
  // @@protoc_insertion_point(field_list:message_infos.analyses)
  return analyses_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
message_infos::mutable_analyses() {
  // @@protoc_insertion_point(field_mutable_list:message_infos.analyses)
  return &analyses_;
}

// repeated string solvers = 3;
int message_infos::solvers_size() const {
  return solvers_.size();
}
void message_infos::clear_solvers() {
  solvers_.Clear();
}
const ::std::string& message_infos::solvers(int index) const {
  // @@protoc_insertion_point(field_get:message_infos.solvers)
  return solvers_.Get(index);
}
::std::string* message_infos::mutable_solvers(int index) {
  // @@protoc_insertion_point(field_mutable:message_infos.solvers)
  return solvers_.Mutable(index);
}
void message_infos::set_solvers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:message_infos.solvers)
  solvers_.Mutable(index)->assign(value);
}
void message_infos::set_solvers(int index, const char* value) {
  solvers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:message_infos.solvers)
}
void message_infos::set_solvers(int index, const char* value, size_t size) {
  solvers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:message_infos.solvers)
}
::std::string* message_infos::add_solvers() {
  // @@protoc_insertion_point(field_add_mutable:message_infos.solvers)
  return solvers_.Add();
}
void message_infos::add_solvers(const ::std::string& value) {
  solvers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:message_infos.solvers)
}
void message_infos::add_solvers(const char* value) {
  solvers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:message_infos.solvers)
}
void message_infos::add_solvers(const char* value, size_t size) {
  solvers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:message_infos.solvers)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
message_infos::solvers() const {
  // @@protoc_insertion_point(field_list:message_infos.solvers)
  return solvers_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
message_infos::mutable_solvers() {
  // @@protoc_insertion_point(field_mutable_list:message_infos.solvers)
  return &solvers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_decode_instr_instr_entry::kInstrFieldNumber;
const int message_decode_instr_instr_entry::kBaseAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_decode_instr_instr_entry::message_decode_instr_instr_entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_decode_instr.instr_entry)
}
message_decode_instr_instr_entry::message_decode_instr_instr_entry(const message_decode_instr_instr_entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_instr()) {
    instr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instr_);
  }
  base_addr_ = from.base_addr_;
  // @@protoc_insertion_point(copy_constructor:message_decode_instr.instr_entry)
}

void message_decode_instr_instr_entry::SharedCtor() {
  _cached_size_ = 0;
  instr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_addr_ = GOOGLE_ULONGLONG(0);
}

message_decode_instr_instr_entry::~message_decode_instr_instr_entry() {
  // @@protoc_insertion_point(destructor:message_decode_instr.instr_entry)
  SharedDtor();
}

void message_decode_instr_instr_entry::SharedDtor() {
  instr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void message_decode_instr_instr_entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_decode_instr_instr_entry::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[4].descriptor;
}

const message_decode_instr_instr_entry& message_decode_instr_instr_entry::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_decode_instr_instr_entry* message_decode_instr_instr_entry::New(::google::protobuf::Arena* arena) const {
  message_decode_instr_instr_entry* n = new message_decode_instr_instr_entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_decode_instr_instr_entry::Clear() {
// @@protoc_insertion_point(message_clear_start:message_decode_instr.instr_entry)
  if (has_instr()) {
    GOOGLE_DCHECK(!instr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*instr_.UnsafeRawStringPointer())->clear();
  }
  base_addr_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_decode_instr_instr_entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_decode_instr.instr_entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string instr = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->instr().data(), this->instr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_decode_instr.instr_entry.instr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 base_addr = 2 [default = 0];
      case 2: {
        if (tag == 16u) {
          set_has_base_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &base_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_decode_instr.instr_entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_decode_instr.instr_entry)
  return false;
#undef DO_
}

void message_decode_instr_instr_entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_decode_instr.instr_entry)
  // required string instr = 1;
  if (has_instr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instr().data(), this->instr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_decode_instr.instr_entry.instr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instr(), output);
  }

  // optional uint64 base_addr = 2 [default = 0];
  if (has_base_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->base_addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_decode_instr.instr_entry)
}

::google::protobuf::uint8* message_decode_instr_instr_entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_decode_instr.instr_entry)
  // required string instr = 1;
  if (has_instr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instr().data(), this->instr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_decode_instr.instr_entry.instr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instr(), target);
  }

  // optional uint64 base_addr = 2 [default = 0];
  if (has_base_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->base_addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_decode_instr.instr_entry)
  return target;
}

size_t message_decode_instr_instr_entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_decode_instr.instr_entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string instr = 1;
  if (has_instr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instr());
  }
  // optional uint64 base_addr = 2 [default = 0];
  if (has_base_addr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->base_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_decode_instr_instr_entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_decode_instr.instr_entry)
  GOOGLE_DCHECK_NE(&from, this);
  const message_decode_instr_instr_entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_decode_instr_instr_entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_decode_instr.instr_entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_decode_instr.instr_entry)
    MergeFrom(*source);
  }
}

void message_decode_instr_instr_entry::MergeFrom(const message_decode_instr_instr_entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_decode_instr.instr_entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_instr()) {
      set_has_instr();
      instr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instr_);
    }
    if (from.has_base_addr()) {
      set_base_addr(from.base_addr());
    }
  }
}

void message_decode_instr_instr_entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_decode_instr.instr_entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_decode_instr_instr_entry::CopyFrom(const message_decode_instr_instr_entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_decode_instr.instr_entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_decode_instr_instr_entry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void message_decode_instr_instr_entry::Swap(message_decode_instr_instr_entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_decode_instr_instr_entry::InternalSwap(message_decode_instr_instr_entry* other) {
  instr_.Swap(&other->instr_);
  std::swap(base_addr_, other->base_addr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_decode_instr_instr_entry::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_decode_instr_instr_entry

// required string instr = 1;
bool message_decode_instr_instr_entry::has_instr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void message_decode_instr_instr_entry::set_has_instr() {
  _has_bits_[0] |= 0x00000001u;
}
void message_decode_instr_instr_entry::clear_has_instr() {
  _has_bits_[0] &= ~0x00000001u;
}
void message_decode_instr_instr_entry::clear_instr() {
  instr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instr();
}
const ::std::string& message_decode_instr_instr_entry::instr() const {
  // @@protoc_insertion_point(field_get:message_decode_instr.instr_entry.instr)
  return instr_.GetNoArena();
}
void message_decode_instr_instr_entry::set_instr(const ::std::string& value) {
  set_has_instr();
  instr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message_decode_instr.instr_entry.instr)
}
#if LANG_CXX11
void message_decode_instr_instr_entry::set_instr(::std::string&& value) {
  set_has_instr();
  instr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message_decode_instr.instr_entry.instr)
}
#endif
void message_decode_instr_instr_entry::set_instr(const char* value) {
  set_has_instr();
  instr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message_decode_instr.instr_entry.instr)
}
void message_decode_instr_instr_entry::set_instr(const char* value, size_t size) {
  set_has_instr();
  instr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message_decode_instr.instr_entry.instr)
}
::std::string* message_decode_instr_instr_entry::mutable_instr() {
  set_has_instr();
  // @@protoc_insertion_point(field_mutable:message_decode_instr.instr_entry.instr)
  return instr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message_decode_instr_instr_entry::release_instr() {
  // @@protoc_insertion_point(field_release:message_decode_instr.instr_entry.instr)
  clear_has_instr();
  return instr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message_decode_instr_instr_entry::set_allocated_instr(::std::string* instr) {
  if (instr != NULL) {
    set_has_instr();
  } else {
    clear_has_instr();
  }
  instr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instr);
  // @@protoc_insertion_point(field_set_allocated:message_decode_instr.instr_entry.instr)
}

// optional uint64 base_addr = 2 [default = 0];
bool message_decode_instr_instr_entry::has_base_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void message_decode_instr_instr_entry::set_has_base_addr() {
  _has_bits_[0] |= 0x00000002u;
}
void message_decode_instr_instr_entry::clear_has_base_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
void message_decode_instr_instr_entry::clear_base_addr() {
  base_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_base_addr();
}
::google::protobuf::uint64 message_decode_instr_instr_entry::base_addr() const {
  // @@protoc_insertion_point(field_get:message_decode_instr.instr_entry.base_addr)
  return base_addr_;
}
void message_decode_instr_instr_entry::set_base_addr(::google::protobuf::uint64 value) {
  set_has_base_addr();
  base_addr_ = value;
  // @@protoc_insertion_point(field_set:message_decode_instr.instr_entry.base_addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_decode_instr::kInstrsFieldNumber;
const int message_decode_instr::kKindFieldNumber;
const int message_decode_instr::kIrkindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_decode_instr::message_decode_instr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_decode_instr)
}
message_decode_instr::message_decode_instr(const message_decode_instr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      instrs_(from.instrs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&kind_, &from.kind_,
    reinterpret_cast<char*>(&irkind_) -
    reinterpret_cast<char*>(&kind_) + sizeof(irkind_));
  // @@protoc_insertion_point(copy_constructor:message_decode_instr)
}

void message_decode_instr::SharedCtor() {
  _cached_size_ = 0;
  kind_ = 2;
  irkind_ = 1;
}

message_decode_instr::~message_decode_instr() {
  // @@protoc_insertion_point(destructor:message_decode_instr)
  SharedDtor();
}

void message_decode_instr::SharedDtor() {
}

void message_decode_instr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_decode_instr::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[5].descriptor;
}

const message_decode_instr& message_decode_instr::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_decode_instr* message_decode_instr::New(::google::protobuf::Arena* arena) const {
  message_decode_instr* n = new message_decode_instr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_decode_instr::Clear() {
// @@protoc_insertion_point(message_clear_start:message_decode_instr)
  instrs_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    kind_ = 2;
    irkind_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_decode_instr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_decode_instr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .message_decode_instr.instr_entry instrs = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_instrs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional .message_decode_instr.bin_kind kind = 2 [default = BIN];
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message_decode_instr_bin_kind_IsValid(value)) {
            set_kind(static_cast< ::message_decode_instr_bin_kind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.ir_kind_t irkind = 3 [default = DBA];
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::common::ir_kind_t_IsValid(value)) {
            set_irkind(static_cast< ::common::ir_kind_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_decode_instr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_decode_instr)
  return false;
#undef DO_
}

void message_decode_instr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_decode_instr)
  // repeated .message_decode_instr.instr_entry instrs = 1;
  for (unsigned int i = 0, n = this->instrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->instrs(i), output);
  }

  // optional .message_decode_instr.bin_kind kind = 2 [default = BIN];
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->kind(), output);
  }

  // optional .common.ir_kind_t irkind = 3 [default = DBA];
  if (has_irkind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->irkind(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_decode_instr)
}

::google::protobuf::uint8* message_decode_instr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_decode_instr)
  // repeated .message_decode_instr.instr_entry instrs = 1;
  for (unsigned int i = 0, n = this->instrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->instrs(i), false, target);
  }

  // optional .message_decode_instr.bin_kind kind = 2 [default = BIN];
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->kind(), target);
  }

  // optional .common.ir_kind_t irkind = 3 [default = DBA];
  if (has_irkind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->irkind(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_decode_instr)
  return target;
}

size_t message_decode_instr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_decode_instr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .message_decode_instr.instr_entry instrs = 1;
  {
    unsigned int count = this->instrs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instrs(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .message_decode_instr.bin_kind kind = 2 [default = BIN];
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
    }

    // optional .common.ir_kind_t irkind = 3 [default = DBA];
    if (has_irkind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->irkind());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_decode_instr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_decode_instr)
  GOOGLE_DCHECK_NE(&from, this);
  const message_decode_instr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_decode_instr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_decode_instr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_decode_instr)
    MergeFrom(*source);
  }
}

void message_decode_instr::MergeFrom(const message_decode_instr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_decode_instr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrs_.MergeFrom(from.instrs_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_irkind()) {
      set_irkind(from.irkind());
    }
  }
}

void message_decode_instr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_decode_instr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_decode_instr::CopyFrom(const message_decode_instr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_decode_instr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_decode_instr::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->instrs())) return false;
  return true;
}

void message_decode_instr::Swap(message_decode_instr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_decode_instr::InternalSwap(message_decode_instr* other) {
  instrs_.UnsafeArenaSwap(&other->instrs_);
  std::swap(kind_, other->kind_);
  std::swap(irkind_, other->irkind_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_decode_instr::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_decode_instr

// repeated .message_decode_instr.instr_entry instrs = 1;
int message_decode_instr::instrs_size() const {
  return instrs_.size();
}
void message_decode_instr::clear_instrs() {
  instrs_.Clear();
}
const ::message_decode_instr_instr_entry& message_decode_instr::instrs(int index) const {
  // @@protoc_insertion_point(field_get:message_decode_instr.instrs)
  return instrs_.Get(index);
}
::message_decode_instr_instr_entry* message_decode_instr::mutable_instrs(int index) {
  // @@protoc_insertion_point(field_mutable:message_decode_instr.instrs)
  return instrs_.Mutable(index);
}
::message_decode_instr_instr_entry* message_decode_instr::add_instrs() {
  // @@protoc_insertion_point(field_add:message_decode_instr.instrs)
  return instrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::message_decode_instr_instr_entry >*
message_decode_instr::mutable_instrs() {
  // @@protoc_insertion_point(field_mutable_list:message_decode_instr.instrs)
  return &instrs_;
}
const ::google::protobuf::RepeatedPtrField< ::message_decode_instr_instr_entry >&
message_decode_instr::instrs() const {
  // @@protoc_insertion_point(field_list:message_decode_instr.instrs)
  return instrs_;
}

// optional .message_decode_instr.bin_kind kind = 2 [default = BIN];
bool message_decode_instr::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void message_decode_instr::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
void message_decode_instr::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
void message_decode_instr::clear_kind() {
  kind_ = 2;
  clear_has_kind();
}
::message_decode_instr_bin_kind message_decode_instr::kind() const {
  // @@protoc_insertion_point(field_get:message_decode_instr.kind)
  return static_cast< ::message_decode_instr_bin_kind >(kind_);
}
void message_decode_instr::set_kind(::message_decode_instr_bin_kind value) {
  assert(::message_decode_instr_bin_kind_IsValid(value));
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:message_decode_instr.kind)
}

// optional .common.ir_kind_t irkind = 3 [default = DBA];
bool message_decode_instr::has_irkind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void message_decode_instr::set_has_irkind() {
  _has_bits_[0] |= 0x00000002u;
}
void message_decode_instr::clear_has_irkind() {
  _has_bits_[0] &= ~0x00000002u;
}
void message_decode_instr::clear_irkind() {
  irkind_ = 1;
  clear_has_irkind();
}
::common::ir_kind_t message_decode_instr::irkind() const {
  // @@protoc_insertion_point(field_get:message_decode_instr.irkind)
  return static_cast< ::common::ir_kind_t >(irkind_);
}
void message_decode_instr::set_irkind(::common::ir_kind_t value) {
  assert(::common::ir_kind_t_IsValid(value));
  set_has_irkind();
  irkind_ = value;
  // @@protoc_insertion_point(field_set:message_decode_instr.irkind)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_decode_instr_reply_instr_entry::kOpcodeFieldNumber;
const int message_decode_instr_reply_instr_entry::kIrkindFieldNumber;
const int message_decode_instr_reply_instr_entry::kDbaInstrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_decode_instr_reply_instr_entry::message_decode_instr_reply_instr_entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_decode_instr_reply.instr_entry)
}
message_decode_instr_reply_instr_entry::message_decode_instr_reply_instr_entry(const message_decode_instr_reply_instr_entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  opcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_opcode()) {
    opcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opcode_);
  }
  irkind_ = from.irkind_;
  clear_has_instrs_cnt();
  switch (from.instrs_cnt_case()) {
    case kDbaInstrs: {
      mutable_dba_instrs()->::dba::dba_list::MergeFrom(from.dba_instrs());
      break;
    }
    case INSTRS_CNT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:message_decode_instr_reply.instr_entry)
}

void message_decode_instr_reply_instr_entry::SharedCtor() {
  _cached_size_ = 0;
  opcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  irkind_ = 1;
  clear_has_instrs_cnt();
}

message_decode_instr_reply_instr_entry::~message_decode_instr_reply_instr_entry() {
  // @@protoc_insertion_point(destructor:message_decode_instr_reply.instr_entry)
  SharedDtor();
}

void message_decode_instr_reply_instr_entry::SharedDtor() {
  opcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_instrs_cnt()) {
    clear_instrs_cnt();
  }
}

void message_decode_instr_reply_instr_entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_decode_instr_reply_instr_entry::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[6].descriptor;
}

const message_decode_instr_reply_instr_entry& message_decode_instr_reply_instr_entry::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_decode_instr_reply_instr_entry* message_decode_instr_reply_instr_entry::New(::google::protobuf::Arena* arena) const {
  message_decode_instr_reply_instr_entry* n = new message_decode_instr_reply_instr_entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_decode_instr_reply_instr_entry::clear_instrs_cnt() {
// @@protoc_insertion_point(one_of_clear_start:message_decode_instr_reply.instr_entry)
  switch (instrs_cnt_case()) {
    case kDbaInstrs: {
      delete instrs_cnt_.dba_instrs_;
      break;
    }
    case INSTRS_CNT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INSTRS_CNT_NOT_SET;
}


void message_decode_instr_reply_instr_entry::Clear() {
// @@protoc_insertion_point(message_clear_start:message_decode_instr_reply.instr_entry)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_opcode()) {
      GOOGLE_DCHECK(!opcode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*opcode_.UnsafeRawStringPointer())->clear();
    }
    irkind_ = 1;
  }
  clear_instrs_cnt();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_decode_instr_reply_instr_entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_decode_instr_reply.instr_entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string opcode = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->opcode().data(), this->opcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_decode_instr_reply.instr_entry.opcode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .common.ir_kind_t irkind = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::common::ir_kind_t_IsValid(value)) {
            set_irkind(static_cast< ::common::ir_kind_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .dba.dba_list dba_instrs = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dba_instrs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_decode_instr_reply.instr_entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_decode_instr_reply.instr_entry)
  return false;
#undef DO_
}

void message_decode_instr_reply_instr_entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_decode_instr_reply.instr_entry)
  // required string opcode = 1;
  if (has_opcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->opcode().data(), this->opcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_decode_instr_reply.instr_entry.opcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->opcode(), output);
  }

  // required .common.ir_kind_t irkind = 2;
  if (has_irkind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->irkind(), output);
  }

  // optional .dba.dba_list dba_instrs = 3;
  if (has_dba_instrs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *instrs_cnt_.dba_instrs_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_decode_instr_reply.instr_entry)
}

::google::protobuf::uint8* message_decode_instr_reply_instr_entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_decode_instr_reply.instr_entry)
  // required string opcode = 1;
  if (has_opcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->opcode().data(), this->opcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_decode_instr_reply.instr_entry.opcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->opcode(), target);
  }

  // required .common.ir_kind_t irkind = 2;
  if (has_irkind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->irkind(), target);
  }

  // optional .dba.dba_list dba_instrs = 3;
  if (has_dba_instrs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *instrs_cnt_.dba_instrs_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_decode_instr_reply.instr_entry)
  return target;
}

size_t message_decode_instr_reply_instr_entry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message_decode_instr_reply.instr_entry)
  size_t total_size = 0;

  if (has_opcode()) {
    // required string opcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opcode());
  }

  if (has_irkind()) {
    // required .common.ir_kind_t irkind = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->irkind());
  }

  return total_size;
}
size_t message_decode_instr_reply_instr_entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_decode_instr_reply.instr_entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string opcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opcode());

    // required .common.ir_kind_t irkind = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->irkind());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  switch (instrs_cnt_case()) {
    // optional .dba.dba_list dba_instrs = 3;
    case kDbaInstrs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *instrs_cnt_.dba_instrs_);
      break;
    }
    case INSTRS_CNT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_decode_instr_reply_instr_entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_decode_instr_reply.instr_entry)
  GOOGLE_DCHECK_NE(&from, this);
  const message_decode_instr_reply_instr_entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_decode_instr_reply_instr_entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_decode_instr_reply.instr_entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_decode_instr_reply.instr_entry)
    MergeFrom(*source);
  }
}

void message_decode_instr_reply_instr_entry::MergeFrom(const message_decode_instr_reply_instr_entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_decode_instr_reply.instr_entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_opcode()) {
      set_has_opcode();
      opcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opcode_);
    }
    if (from.has_irkind()) {
      set_irkind(from.irkind());
    }
  }
  switch (from.instrs_cnt_case()) {
    case kDbaInstrs: {
      mutable_dba_instrs()->::dba::dba_list::MergeFrom(from.dba_instrs());
      break;
    }
    case INSTRS_CNT_NOT_SET: {
      break;
    }
  }
}

void message_decode_instr_reply_instr_entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_decode_instr_reply.instr_entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_decode_instr_reply_instr_entry::CopyFrom(const message_decode_instr_reply_instr_entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_decode_instr_reply.instr_entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_decode_instr_reply_instr_entry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  switch (instrs_cnt_case()) {
    case kDbaInstrs: {
      if (has_dba_instrs()) {
        if (!this->dba_instrs().IsInitialized()) return false;
      }
      break;
    }
    case INSTRS_CNT_NOT_SET: {
      break;
    }
  }
  return true;
}

void message_decode_instr_reply_instr_entry::Swap(message_decode_instr_reply_instr_entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_decode_instr_reply_instr_entry::InternalSwap(message_decode_instr_reply_instr_entry* other) {
  opcode_.Swap(&other->opcode_);
  std::swap(irkind_, other->irkind_);
  std::swap(instrs_cnt_, other->instrs_cnt_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_decode_instr_reply_instr_entry::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_decode_instr_reply_instr_entry

// required string opcode = 1;
bool message_decode_instr_reply_instr_entry::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void message_decode_instr_reply_instr_entry::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
void message_decode_instr_reply_instr_entry::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void message_decode_instr_reply_instr_entry::clear_opcode() {
  opcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_opcode();
}
const ::std::string& message_decode_instr_reply_instr_entry::opcode() const {
  // @@protoc_insertion_point(field_get:message_decode_instr_reply.instr_entry.opcode)
  return opcode_.GetNoArena();
}
void message_decode_instr_reply_instr_entry::set_opcode(const ::std::string& value) {
  set_has_opcode();
  opcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message_decode_instr_reply.instr_entry.opcode)
}
#if LANG_CXX11
void message_decode_instr_reply_instr_entry::set_opcode(::std::string&& value) {
  set_has_opcode();
  opcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message_decode_instr_reply.instr_entry.opcode)
}
#endif
void message_decode_instr_reply_instr_entry::set_opcode(const char* value) {
  set_has_opcode();
  opcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message_decode_instr_reply.instr_entry.opcode)
}
void message_decode_instr_reply_instr_entry::set_opcode(const char* value, size_t size) {
  set_has_opcode();
  opcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message_decode_instr_reply.instr_entry.opcode)
}
::std::string* message_decode_instr_reply_instr_entry::mutable_opcode() {
  set_has_opcode();
  // @@protoc_insertion_point(field_mutable:message_decode_instr_reply.instr_entry.opcode)
  return opcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message_decode_instr_reply_instr_entry::release_opcode() {
  // @@protoc_insertion_point(field_release:message_decode_instr_reply.instr_entry.opcode)
  clear_has_opcode();
  return opcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message_decode_instr_reply_instr_entry::set_allocated_opcode(::std::string* opcode) {
  if (opcode != NULL) {
    set_has_opcode();
  } else {
    clear_has_opcode();
  }
  opcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opcode);
  // @@protoc_insertion_point(field_set_allocated:message_decode_instr_reply.instr_entry.opcode)
}

// required .common.ir_kind_t irkind = 2;
bool message_decode_instr_reply_instr_entry::has_irkind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void message_decode_instr_reply_instr_entry::set_has_irkind() {
  _has_bits_[0] |= 0x00000002u;
}
void message_decode_instr_reply_instr_entry::clear_has_irkind() {
  _has_bits_[0] &= ~0x00000002u;
}
void message_decode_instr_reply_instr_entry::clear_irkind() {
  irkind_ = 1;
  clear_has_irkind();
}
::common::ir_kind_t message_decode_instr_reply_instr_entry::irkind() const {
  // @@protoc_insertion_point(field_get:message_decode_instr_reply.instr_entry.irkind)
  return static_cast< ::common::ir_kind_t >(irkind_);
}
void message_decode_instr_reply_instr_entry::set_irkind(::common::ir_kind_t value) {
  assert(::common::ir_kind_t_IsValid(value));
  set_has_irkind();
  irkind_ = value;
  // @@protoc_insertion_point(field_set:message_decode_instr_reply.instr_entry.irkind)
}

// optional .dba.dba_list dba_instrs = 3;
bool message_decode_instr_reply_instr_entry::has_dba_instrs() const {
  return instrs_cnt_case() == kDbaInstrs;
}
void message_decode_instr_reply_instr_entry::set_has_dba_instrs() {
  _oneof_case_[0] = kDbaInstrs;
}
void message_decode_instr_reply_instr_entry::clear_dba_instrs() {
  if (has_dba_instrs()) {
    delete instrs_cnt_.dba_instrs_;
    clear_has_instrs_cnt();
  }
}
 const ::dba::dba_list& message_decode_instr_reply_instr_entry::dba_instrs() const {
  // @@protoc_insertion_point(field_get:message_decode_instr_reply.instr_entry.dba_instrs)
  return has_dba_instrs()
      ? *instrs_cnt_.dba_instrs_
      : ::dba::dba_list::default_instance();
}
::dba::dba_list* message_decode_instr_reply_instr_entry::mutable_dba_instrs() {
  if (!has_dba_instrs()) {
    clear_instrs_cnt();
    set_has_dba_instrs();
    instrs_cnt_.dba_instrs_ = new ::dba::dba_list;
  }
  // @@protoc_insertion_point(field_mutable:message_decode_instr_reply.instr_entry.dba_instrs)
  return instrs_cnt_.dba_instrs_;
}
::dba::dba_list* message_decode_instr_reply_instr_entry::release_dba_instrs() {
  // @@protoc_insertion_point(field_release:message_decode_instr_reply.instr_entry.dba_instrs)
  if (has_dba_instrs()) {
    clear_has_instrs_cnt();
    ::dba::dba_list* temp = instrs_cnt_.dba_instrs_;
    instrs_cnt_.dba_instrs_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void message_decode_instr_reply_instr_entry::set_allocated_dba_instrs(::dba::dba_list* dba_instrs) {
  clear_instrs_cnt();
  if (dba_instrs) {
    set_has_dba_instrs();
    instrs_cnt_.dba_instrs_ = dba_instrs;
  }
  // @@protoc_insertion_point(field_set_allocated:message_decode_instr_reply.instr_entry.dba_instrs)
}

bool message_decode_instr_reply_instr_entry::has_instrs_cnt() const {
  return instrs_cnt_case() != INSTRS_CNT_NOT_SET;
}
void message_decode_instr_reply_instr_entry::clear_has_instrs_cnt() {
  _oneof_case_[0] = INSTRS_CNT_NOT_SET;
}
message_decode_instr_reply_instr_entry::InstrsCntCase message_decode_instr_reply_instr_entry::instrs_cnt_case() const {
  return message_decode_instr_reply_instr_entry::InstrsCntCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_decode_instr_reply::kInstrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_decode_instr_reply::message_decode_instr_reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_decode_instr_reply)
}
message_decode_instr_reply::message_decode_instr_reply(const message_decode_instr_reply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      instrs_(from.instrs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:message_decode_instr_reply)
}

void message_decode_instr_reply::SharedCtor() {
  _cached_size_ = 0;
}

message_decode_instr_reply::~message_decode_instr_reply() {
  // @@protoc_insertion_point(destructor:message_decode_instr_reply)
  SharedDtor();
}

void message_decode_instr_reply::SharedDtor() {
}

void message_decode_instr_reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_decode_instr_reply::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[7].descriptor;
}

const message_decode_instr_reply& message_decode_instr_reply::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_decode_instr_reply* message_decode_instr_reply::New(::google::protobuf::Arena* arena) const {
  message_decode_instr_reply* n = new message_decode_instr_reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_decode_instr_reply::Clear() {
// @@protoc_insertion_point(message_clear_start:message_decode_instr_reply)
  instrs_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_decode_instr_reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_decode_instr_reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .message_decode_instr_reply.instr_entry instrs = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_instrs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_decode_instr_reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_decode_instr_reply)
  return false;
#undef DO_
}

void message_decode_instr_reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_decode_instr_reply)
  // repeated .message_decode_instr_reply.instr_entry instrs = 1;
  for (unsigned int i = 0, n = this->instrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->instrs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_decode_instr_reply)
}

::google::protobuf::uint8* message_decode_instr_reply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_decode_instr_reply)
  // repeated .message_decode_instr_reply.instr_entry instrs = 1;
  for (unsigned int i = 0, n = this->instrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->instrs(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_decode_instr_reply)
  return target;
}

size_t message_decode_instr_reply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_decode_instr_reply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .message_decode_instr_reply.instr_entry instrs = 1;
  {
    unsigned int count = this->instrs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instrs(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_decode_instr_reply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_decode_instr_reply)
  GOOGLE_DCHECK_NE(&from, this);
  const message_decode_instr_reply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_decode_instr_reply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_decode_instr_reply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_decode_instr_reply)
    MergeFrom(*source);
  }
}

void message_decode_instr_reply::MergeFrom(const message_decode_instr_reply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_decode_instr_reply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrs_.MergeFrom(from.instrs_);
}

void message_decode_instr_reply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_decode_instr_reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_decode_instr_reply::CopyFrom(const message_decode_instr_reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_decode_instr_reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_decode_instr_reply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->instrs())) return false;
  return true;
}

void message_decode_instr_reply::Swap(message_decode_instr_reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_decode_instr_reply::InternalSwap(message_decode_instr_reply* other) {
  instrs_.UnsafeArenaSwap(&other->instrs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_decode_instr_reply::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_decode_instr_reply

// repeated .message_decode_instr_reply.instr_entry instrs = 1;
int message_decode_instr_reply::instrs_size() const {
  return instrs_.size();
}
void message_decode_instr_reply::clear_instrs() {
  instrs_.Clear();
}
const ::message_decode_instr_reply_instr_entry& message_decode_instr_reply::instrs(int index) const {
  // @@protoc_insertion_point(field_get:message_decode_instr_reply.instrs)
  return instrs_.Get(index);
}
::message_decode_instr_reply_instr_entry* message_decode_instr_reply::mutable_instrs(int index) {
  // @@protoc_insertion_point(field_mutable:message_decode_instr_reply.instrs)
  return instrs_.Mutable(index);
}
::message_decode_instr_reply_instr_entry* message_decode_instr_reply::add_instrs() {
  // @@protoc_insertion_point(field_add:message_decode_instr_reply.instrs)
  return instrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::message_decode_instr_reply_instr_entry >*
message_decode_instr_reply::mutable_instrs() {
  // @@protoc_insertion_point(field_mutable_list:message_decode_instr_reply.instrs)
  return &instrs_;
}
const ::google::protobuf::RepeatedPtrField< ::message_decode_instr_reply_instr_entry >&
message_decode_instr_reply::instrs() const {
  // @@protoc_insertion_point(field_list:message_decode_instr_reply.instrs)
  return instrs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_start_symb_exec::kTraceTypeFieldNumber;
const int message_start_symb_exec::kNameFieldNumber;
const int message_start_symb_exec::kSolverFieldNumber;
const int message_start_symb_exec::kConfigFieldNumber;
const int message_start_symb_exec::kIrkindFieldNumber;
const int message_start_symb_exec::kFormulaOptimCstfoldFieldNumber;
const int message_start_symb_exec::kFormulaOptimRebaseFieldNumber;
const int message_start_symb_exec::kFormulaOptimRowFieldNumber;
const int message_start_symb_exec::kVerboseFieldNumber;
const int message_start_symb_exec::kAddrPredicateFieldNumber;
const int message_start_symb_exec::kPredicateFieldNumber;
const int message_start_symb_exec::kTraceFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_start_symb_exec::message_start_symb_exec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_start_symb_exec)
}
message_start_symb_exec::message_start_symb_exec(const message_start_symb_exec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  predicate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_predicate()) {
    predicate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.predicate_);
  }
  trace_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trace_filename()) {
    trace_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trace_filename_);
  }
  if (from.has_config()) {
    config_ = new ::configuration::configuration(*from.config_);
  } else {
    config_ = NULL;
  }
  ::memcpy(&formula_optim_cstfold_, &from.formula_optim_cstfold_,
    reinterpret_cast<char*>(&solver_) -
    reinterpret_cast<char*>(&formula_optim_cstfold_) + sizeof(solver_));
  // @@protoc_insertion_point(copy_constructor:message_start_symb_exec)
}

void message_start_symb_exec::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  predicate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trace_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, reinterpret_cast<char*>(&addr_predicate_) -
    reinterpret_cast<char*>(&config_) + sizeof(addr_predicate_));
  irkind_ = 1;
  trace_type_ = 1;
  solver_ = 1;
}

message_start_symb_exec::~message_start_symb_exec() {
  // @@protoc_insertion_point(destructor:message_start_symb_exec)
  SharedDtor();
}

void message_start_symb_exec::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  predicate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trace_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete config_;
  }
}

void message_start_symb_exec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_start_symb_exec::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[8].descriptor;
}

const message_start_symb_exec& message_start_symb_exec::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_start_symb_exec* message_start_symb_exec::New(::google::protobuf::Arena* arena) const {
  message_start_symb_exec* n = new message_start_symb_exec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_start_symb_exec::Clear() {
// @@protoc_insertion_point(message_clear_start:message_start_symb_exec)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_predicate()) {
      GOOGLE_DCHECK(!predicate_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*predicate_.UnsafeRawStringPointer())->clear();
    }
    if (has_trace_filename()) {
      GOOGLE_DCHECK(!trace_filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*trace_filename_.UnsafeRawStringPointer())->clear();
    }
    if (has_config()) {
      GOOGLE_DCHECK(config_ != NULL);
      config_->::configuration::configuration::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&formula_optim_cstfold_, 0, reinterpret_cast<char*>(&verbose_) -
      reinterpret_cast<char*>(&formula_optim_cstfold_) + sizeof(verbose_));
  }
  if (_has_bits_[8 / 32] & 3840u) {
    addr_predicate_ = GOOGLE_ULONGLONG(0);
    irkind_ = 1;
    trace_type_ = 1;
    solver_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_start_symb_exec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_start_symb_exec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_start_symb_exec.trace_kind trace_type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message_start_symb_exec_trace_kind_IsValid(value)) {
            set_trace_type(static_cast< ::message_start_symb_exec_trace_kind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_start_symb_exec.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.solver_t solver = 3 [default = Z3];
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::common::solver_t_IsValid(value)) {
            set_solver(static_cast< ::common::solver_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .configuration.configuration config = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.ir_kind_t irkind = 5 [default = DBA];
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::common::ir_kind_t_IsValid(value)) {
            set_irkind(static_cast< ::common::ir_kind_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool formula_optim_cstfold = 6;
      case 6: {
        if (tag == 48u) {
          set_has_formula_optim_cstfold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &formula_optim_cstfold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool formula_optim_rebase = 7;
      case 7: {
        if (tag == 56u) {
          set_has_formula_optim_rebase();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &formula_optim_rebase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool formula_optim_row = 8;
      case 8: {
        if (tag == 64u) {
          set_has_formula_optim_row();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &formula_optim_row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 verbose = 9;
      case 9: {
        if (tag == 72u) {
          set_has_verbose();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &verbose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 addr_predicate = 10;
      case 10: {
        if (tag == 80u) {
          set_has_addr_predicate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &addr_predicate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string predicate = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_predicate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->predicate().data(), this->predicate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_start_symb_exec.predicate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string trace_filename = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trace_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trace_filename().data(), this->trace_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_start_symb_exec.trace_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_start_symb_exec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_start_symb_exec)
  return false;
#undef DO_
}

void message_start_symb_exec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_start_symb_exec)
  // required .message_start_symb_exec.trace_kind trace_type = 1;
  if (has_trace_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->trace_type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_start_symb_exec.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .common.solver_t solver = 3 [default = Z3];
  if (has_solver()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->solver(), output);
  }

  // optional .configuration.configuration config = 4;
  if (has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->config_, output);
  }

  // optional .common.ir_kind_t irkind = 5 [default = DBA];
  if (has_irkind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->irkind(), output);
  }

  // optional bool formula_optim_cstfold = 6;
  if (has_formula_optim_cstfold()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->formula_optim_cstfold(), output);
  }

  // optional bool formula_optim_rebase = 7;
  if (has_formula_optim_rebase()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->formula_optim_rebase(), output);
  }

  // optional bool formula_optim_row = 8;
  if (has_formula_optim_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->formula_optim_row(), output);
  }

  // required uint32 verbose = 9;
  if (has_verbose()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->verbose(), output);
  }

  // optional uint64 addr_predicate = 10;
  if (has_addr_predicate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->addr_predicate(), output);
  }

  // optional string predicate = 11;
  if (has_predicate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->predicate().data(), this->predicate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_start_symb_exec.predicate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->predicate(), output);
  }

  // optional string trace_filename = 12;
  if (has_trace_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trace_filename().data(), this->trace_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_start_symb_exec.trace_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->trace_filename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_start_symb_exec)
}

::google::protobuf::uint8* message_start_symb_exec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_start_symb_exec)
  // required .message_start_symb_exec.trace_kind trace_type = 1;
  if (has_trace_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->trace_type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_start_symb_exec.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .common.solver_t solver = 3 [default = Z3];
  if (has_solver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->solver(), target);
  }

  // optional .configuration.configuration config = 4;
  if (has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->config_, false, target);
  }

  // optional .common.ir_kind_t irkind = 5 [default = DBA];
  if (has_irkind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->irkind(), target);
  }

  // optional bool formula_optim_cstfold = 6;
  if (has_formula_optim_cstfold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->formula_optim_cstfold(), target);
  }

  // optional bool formula_optim_rebase = 7;
  if (has_formula_optim_rebase()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->formula_optim_rebase(), target);
  }

  // optional bool formula_optim_row = 8;
  if (has_formula_optim_row()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->formula_optim_row(), target);
  }

  // required uint32 verbose = 9;
  if (has_verbose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->verbose(), target);
  }

  // optional uint64 addr_predicate = 10;
  if (has_addr_predicate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->addr_predicate(), target);
  }

  // optional string predicate = 11;
  if (has_predicate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->predicate().data(), this->predicate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_start_symb_exec.predicate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->predicate(), target);
  }

  // optional string trace_filename = 12;
  if (has_trace_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trace_filename().data(), this->trace_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_start_symb_exec.trace_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->trace_filename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_start_symb_exec)
  return target;
}

size_t message_start_symb_exec::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message_start_symb_exec)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_verbose()) {
    // required uint32 verbose = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->verbose());
  }

  if (has_trace_type()) {
    // required .message_start_symb_exec.trace_kind trace_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trace_type());
  }

  return total_size;
}
size_t message_start_symb_exec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_start_symb_exec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000481) ^ 0x00000481) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint32 verbose = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->verbose());

    // required .message_start_symb_exec.trace_kind trace_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trace_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 126u) {
    // optional string predicate = 11;
    if (has_predicate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->predicate());
    }

    // optional string trace_filename = 12;
    if (has_trace_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trace_filename());
    }

    // optional .configuration.configuration config = 4;
    if (has_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->config_);
    }

    // optional bool formula_optim_cstfold = 6;
    if (has_formula_optim_cstfold()) {
      total_size += 1 + 1;
    }

    // optional bool formula_optim_rebase = 7;
    if (has_formula_optim_rebase()) {
      total_size += 1 + 1;
    }

    // optional bool formula_optim_row = 8;
    if (has_formula_optim_row()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint64 addr_predicate = 10;
    if (has_addr_predicate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->addr_predicate());
    }

    // optional .common.ir_kind_t irkind = 5 [default = DBA];
    if (has_irkind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->irkind());
    }

  }
  // optional .common.solver_t solver = 3 [default = Z3];
  if (has_solver()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->solver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_start_symb_exec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_start_symb_exec)
  GOOGLE_DCHECK_NE(&from, this);
  const message_start_symb_exec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_start_symb_exec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_start_symb_exec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_start_symb_exec)
    MergeFrom(*source);
  }
}

void message_start_symb_exec::MergeFrom(const message_start_symb_exec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_start_symb_exec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_predicate()) {
      set_has_predicate();
      predicate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.predicate_);
    }
    if (from.has_trace_filename()) {
      set_has_trace_filename();
      trace_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trace_filename_);
    }
    if (from.has_config()) {
      mutable_config()->::configuration::configuration::MergeFrom(from.config());
    }
    if (from.has_formula_optim_cstfold()) {
      set_formula_optim_cstfold(from.formula_optim_cstfold());
    }
    if (from.has_formula_optim_rebase()) {
      set_formula_optim_rebase(from.formula_optim_rebase());
    }
    if (from.has_formula_optim_row()) {
      set_formula_optim_row(from.formula_optim_row());
    }
    if (from.has_verbose()) {
      set_verbose(from.verbose());
    }
  }
  if (from._has_bits_[8 / 32] & 3840u) {
    if (from.has_addr_predicate()) {
      set_addr_predicate(from.addr_predicate());
    }
    if (from.has_irkind()) {
      set_irkind(from.irkind());
    }
    if (from.has_trace_type()) {
      set_trace_type(from.trace_type());
    }
    if (from.has_solver()) {
      set_solver(from.solver());
    }
  }
}

void message_start_symb_exec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_start_symb_exec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_start_symb_exec::CopyFrom(const message_start_symb_exec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_start_symb_exec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_start_symb_exec::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000481) != 0x00000481) return false;
  if (has_config()) {
    if (!this->config_->IsInitialized()) return false;
  }
  return true;
}

void message_start_symb_exec::Swap(message_start_symb_exec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_start_symb_exec::InternalSwap(message_start_symb_exec* other) {
  name_.Swap(&other->name_);
  predicate_.Swap(&other->predicate_);
  trace_filename_.Swap(&other->trace_filename_);
  std::swap(config_, other->config_);
  std::swap(formula_optim_cstfold_, other->formula_optim_cstfold_);
  std::swap(formula_optim_rebase_, other->formula_optim_rebase_);
  std::swap(formula_optim_row_, other->formula_optim_row_);
  std::swap(verbose_, other->verbose_);
  std::swap(addr_predicate_, other->addr_predicate_);
  std::swap(irkind_, other->irkind_);
  std::swap(trace_type_, other->trace_type_);
  std::swap(solver_, other->solver_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_start_symb_exec::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_start_symb_exec

// required .message_start_symb_exec.trace_kind trace_type = 1;
bool message_start_symb_exec::has_trace_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void message_start_symb_exec::set_has_trace_type() {
  _has_bits_[0] |= 0x00000400u;
}
void message_start_symb_exec::clear_has_trace_type() {
  _has_bits_[0] &= ~0x00000400u;
}
void message_start_symb_exec::clear_trace_type() {
  trace_type_ = 1;
  clear_has_trace_type();
}
::message_start_symb_exec_trace_kind message_start_symb_exec::trace_type() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.trace_type)
  return static_cast< ::message_start_symb_exec_trace_kind >(trace_type_);
}
void message_start_symb_exec::set_trace_type(::message_start_symb_exec_trace_kind value) {
  assert(::message_start_symb_exec_trace_kind_IsValid(value));
  set_has_trace_type();
  trace_type_ = value;
  // @@protoc_insertion_point(field_set:message_start_symb_exec.trace_type)
}

// required string name = 2;
bool message_start_symb_exec::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void message_start_symb_exec::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void message_start_symb_exec::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void message_start_symb_exec::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& message_start_symb_exec::name() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.name)
  return name_.GetNoArena();
}
void message_start_symb_exec::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message_start_symb_exec.name)
}
#if LANG_CXX11
void message_start_symb_exec::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message_start_symb_exec.name)
}
#endif
void message_start_symb_exec::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message_start_symb_exec.name)
}
void message_start_symb_exec::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message_start_symb_exec.name)
}
::std::string* message_start_symb_exec::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message_start_symb_exec.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message_start_symb_exec::release_name() {
  // @@protoc_insertion_point(field_release:message_start_symb_exec.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message_start_symb_exec::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message_start_symb_exec.name)
}

// optional .common.solver_t solver = 3 [default = Z3];
bool message_start_symb_exec::has_solver() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void message_start_symb_exec::set_has_solver() {
  _has_bits_[0] |= 0x00000800u;
}
void message_start_symb_exec::clear_has_solver() {
  _has_bits_[0] &= ~0x00000800u;
}
void message_start_symb_exec::clear_solver() {
  solver_ = 1;
  clear_has_solver();
}
::common::solver_t message_start_symb_exec::solver() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.solver)
  return static_cast< ::common::solver_t >(solver_);
}
void message_start_symb_exec::set_solver(::common::solver_t value) {
  assert(::common::solver_t_IsValid(value));
  set_has_solver();
  solver_ = value;
  // @@protoc_insertion_point(field_set:message_start_symb_exec.solver)
}

// optional .configuration.configuration config = 4;
bool message_start_symb_exec::has_config() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void message_start_symb_exec::set_has_config() {
  _has_bits_[0] |= 0x00000008u;
}
void message_start_symb_exec::clear_has_config() {
  _has_bits_[0] &= ~0x00000008u;
}
void message_start_symb_exec::clear_config() {
  if (config_ != NULL) config_->::configuration::configuration::Clear();
  clear_has_config();
}
const ::configuration::configuration& message_start_symb_exec::config() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.config)
  return config_ != NULL ? *config_
                         : *::configuration::configuration::internal_default_instance();
}
::configuration::configuration* message_start_symb_exec::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    config_ = new ::configuration::configuration;
  }
  // @@protoc_insertion_point(field_mutable:message_start_symb_exec.config)
  return config_;
}
::configuration::configuration* message_start_symb_exec::release_config() {
  // @@protoc_insertion_point(field_release:message_start_symb_exec.config)
  clear_has_config();
  ::configuration::configuration* temp = config_;
  config_ = NULL;
  return temp;
}
void message_start_symb_exec::set_allocated_config(::configuration::configuration* config) {
  delete config_;
  config_ = config;
  if (config) {
    set_has_config();
  } else {
    clear_has_config();
  }
  // @@protoc_insertion_point(field_set_allocated:message_start_symb_exec.config)
}

// optional .common.ir_kind_t irkind = 5 [default = DBA];
bool message_start_symb_exec::has_irkind() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void message_start_symb_exec::set_has_irkind() {
  _has_bits_[0] |= 0x00000200u;
}
void message_start_symb_exec::clear_has_irkind() {
  _has_bits_[0] &= ~0x00000200u;
}
void message_start_symb_exec::clear_irkind() {
  irkind_ = 1;
  clear_has_irkind();
}
::common::ir_kind_t message_start_symb_exec::irkind() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.irkind)
  return static_cast< ::common::ir_kind_t >(irkind_);
}
void message_start_symb_exec::set_irkind(::common::ir_kind_t value) {
  assert(::common::ir_kind_t_IsValid(value));
  set_has_irkind();
  irkind_ = value;
  // @@protoc_insertion_point(field_set:message_start_symb_exec.irkind)
}

// optional bool formula_optim_cstfold = 6;
bool message_start_symb_exec::has_formula_optim_cstfold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void message_start_symb_exec::set_has_formula_optim_cstfold() {
  _has_bits_[0] |= 0x00000010u;
}
void message_start_symb_exec::clear_has_formula_optim_cstfold() {
  _has_bits_[0] &= ~0x00000010u;
}
void message_start_symb_exec::clear_formula_optim_cstfold() {
  formula_optim_cstfold_ = false;
  clear_has_formula_optim_cstfold();
}
bool message_start_symb_exec::formula_optim_cstfold() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.formula_optim_cstfold)
  return formula_optim_cstfold_;
}
void message_start_symb_exec::set_formula_optim_cstfold(bool value) {
  set_has_formula_optim_cstfold();
  formula_optim_cstfold_ = value;
  // @@protoc_insertion_point(field_set:message_start_symb_exec.formula_optim_cstfold)
}

// optional bool formula_optim_rebase = 7;
bool message_start_symb_exec::has_formula_optim_rebase() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void message_start_symb_exec::set_has_formula_optim_rebase() {
  _has_bits_[0] |= 0x00000020u;
}
void message_start_symb_exec::clear_has_formula_optim_rebase() {
  _has_bits_[0] &= ~0x00000020u;
}
void message_start_symb_exec::clear_formula_optim_rebase() {
  formula_optim_rebase_ = false;
  clear_has_formula_optim_rebase();
}
bool message_start_symb_exec::formula_optim_rebase() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.formula_optim_rebase)
  return formula_optim_rebase_;
}
void message_start_symb_exec::set_formula_optim_rebase(bool value) {
  set_has_formula_optim_rebase();
  formula_optim_rebase_ = value;
  // @@protoc_insertion_point(field_set:message_start_symb_exec.formula_optim_rebase)
}

// optional bool formula_optim_row = 8;
bool message_start_symb_exec::has_formula_optim_row() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void message_start_symb_exec::set_has_formula_optim_row() {
  _has_bits_[0] |= 0x00000040u;
}
void message_start_symb_exec::clear_has_formula_optim_row() {
  _has_bits_[0] &= ~0x00000040u;
}
void message_start_symb_exec::clear_formula_optim_row() {
  formula_optim_row_ = false;
  clear_has_formula_optim_row();
}
bool message_start_symb_exec::formula_optim_row() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.formula_optim_row)
  return formula_optim_row_;
}
void message_start_symb_exec::set_formula_optim_row(bool value) {
  set_has_formula_optim_row();
  formula_optim_row_ = value;
  // @@protoc_insertion_point(field_set:message_start_symb_exec.formula_optim_row)
}

// required uint32 verbose = 9;
bool message_start_symb_exec::has_verbose() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void message_start_symb_exec::set_has_verbose() {
  _has_bits_[0] |= 0x00000080u;
}
void message_start_symb_exec::clear_has_verbose() {
  _has_bits_[0] &= ~0x00000080u;
}
void message_start_symb_exec::clear_verbose() {
  verbose_ = 0u;
  clear_has_verbose();
}
::google::protobuf::uint32 message_start_symb_exec::verbose() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.verbose)
  return verbose_;
}
void message_start_symb_exec::set_verbose(::google::protobuf::uint32 value) {
  set_has_verbose();
  verbose_ = value;
  // @@protoc_insertion_point(field_set:message_start_symb_exec.verbose)
}

// optional uint64 addr_predicate = 10;
bool message_start_symb_exec::has_addr_predicate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void message_start_symb_exec::set_has_addr_predicate() {
  _has_bits_[0] |= 0x00000100u;
}
void message_start_symb_exec::clear_has_addr_predicate() {
  _has_bits_[0] &= ~0x00000100u;
}
void message_start_symb_exec::clear_addr_predicate() {
  addr_predicate_ = GOOGLE_ULONGLONG(0);
  clear_has_addr_predicate();
}
::google::protobuf::uint64 message_start_symb_exec::addr_predicate() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.addr_predicate)
  return addr_predicate_;
}
void message_start_symb_exec::set_addr_predicate(::google::protobuf::uint64 value) {
  set_has_addr_predicate();
  addr_predicate_ = value;
  // @@protoc_insertion_point(field_set:message_start_symb_exec.addr_predicate)
}

// optional string predicate = 11;
bool message_start_symb_exec::has_predicate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void message_start_symb_exec::set_has_predicate() {
  _has_bits_[0] |= 0x00000002u;
}
void message_start_symb_exec::clear_has_predicate() {
  _has_bits_[0] &= ~0x00000002u;
}
void message_start_symb_exec::clear_predicate() {
  predicate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_predicate();
}
const ::std::string& message_start_symb_exec::predicate() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.predicate)
  return predicate_.GetNoArena();
}
void message_start_symb_exec::set_predicate(const ::std::string& value) {
  set_has_predicate();
  predicate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message_start_symb_exec.predicate)
}
#if LANG_CXX11
void message_start_symb_exec::set_predicate(::std::string&& value) {
  set_has_predicate();
  predicate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message_start_symb_exec.predicate)
}
#endif
void message_start_symb_exec::set_predicate(const char* value) {
  set_has_predicate();
  predicate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message_start_symb_exec.predicate)
}
void message_start_symb_exec::set_predicate(const char* value, size_t size) {
  set_has_predicate();
  predicate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message_start_symb_exec.predicate)
}
::std::string* message_start_symb_exec::mutable_predicate() {
  set_has_predicate();
  // @@protoc_insertion_point(field_mutable:message_start_symb_exec.predicate)
  return predicate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message_start_symb_exec::release_predicate() {
  // @@protoc_insertion_point(field_release:message_start_symb_exec.predicate)
  clear_has_predicate();
  return predicate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message_start_symb_exec::set_allocated_predicate(::std::string* predicate) {
  if (predicate != NULL) {
    set_has_predicate();
  } else {
    clear_has_predicate();
  }
  predicate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), predicate);
  // @@protoc_insertion_point(field_set_allocated:message_start_symb_exec.predicate)
}

// optional string trace_filename = 12;
bool message_start_symb_exec::has_trace_filename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void message_start_symb_exec::set_has_trace_filename() {
  _has_bits_[0] |= 0x00000004u;
}
void message_start_symb_exec::clear_has_trace_filename() {
  _has_bits_[0] &= ~0x00000004u;
}
void message_start_symb_exec::clear_trace_filename() {
  trace_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trace_filename();
}
const ::std::string& message_start_symb_exec::trace_filename() const {
  // @@protoc_insertion_point(field_get:message_start_symb_exec.trace_filename)
  return trace_filename_.GetNoArena();
}
void message_start_symb_exec::set_trace_filename(const ::std::string& value) {
  set_has_trace_filename();
  trace_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message_start_symb_exec.trace_filename)
}
#if LANG_CXX11
void message_start_symb_exec::set_trace_filename(::std::string&& value) {
  set_has_trace_filename();
  trace_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message_start_symb_exec.trace_filename)
}
#endif
void message_start_symb_exec::set_trace_filename(const char* value) {
  set_has_trace_filename();
  trace_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message_start_symb_exec.trace_filename)
}
void message_start_symb_exec::set_trace_filename(const char* value, size_t size) {
  set_has_trace_filename();
  trace_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message_start_symb_exec.trace_filename)
}
::std::string* message_start_symb_exec::mutable_trace_filename() {
  set_has_trace_filename();
  // @@protoc_insertion_point(field_mutable:message_start_symb_exec.trace_filename)
  return trace_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message_start_symb_exec::release_trace_filename() {
  // @@protoc_insertion_point(field_release:message_start_symb_exec.trace_filename)
  clear_has_trace_filename();
  return trace_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message_start_symb_exec::set_allocated_trace_filename(::std::string* trace_filename) {
  if (trace_filename != NULL) {
    set_has_trace_filename();
  } else {
    clear_has_trace_filename();
  }
  trace_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trace_filename);
  // @@protoc_insertion_point(field_set_allocated:message_start_symb_exec.trace_filename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_output::kTypeFieldNumber;
const int message_output::kMessageFieldNumber;
const int message_output::kRamTotalFieldNumber;
const int message_output::kRamFreeFieldNumber;
const int message_output::kRamAvailableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_output::message_output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message_output)
}
message_output::message_output(const message_output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&ram_total_, &from.ram_total_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&ram_total_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:message_output)
}

void message_output::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ram_total_, 0, reinterpret_cast<char*>(&ram_available_) -
    reinterpret_cast<char*>(&ram_total_) + sizeof(ram_available_));
  type_ = 1;
}

message_output::~message_output() {
  // @@protoc_insertion_point(destructor:message_output)
  SharedDtor();
}

void message_output::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void message_output::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message_output::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[9].descriptor;
}

const message_output& message_output::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

message_output* message_output::New(::google::protobuf::Arena* arena) const {
  message_output* n = new message_output;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message_output::Clear() {
// @@protoc_insertion_point(message_clear_start:message_output)
  if (has_message()) {
    GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*message_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&ram_total_, 0, reinterpret_cast<char*>(&ram_available_) -
      reinterpret_cast<char*>(&ram_total_) + sizeof(ram_available_));
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message_output)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message_output.output_kind type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message_output_output_kind_IsValid(value)) {
            set_type(static_cast< ::message_output_output_kind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string message = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message_output.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ram_total = 3;
      case 3: {
        if (tag == 24u) {
          set_has_ram_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ram_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ram_free = 4;
      case 4: {
        if (tag == 32u) {
          set_has_ram_free();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ram_free_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ram_available = 5;
      case 5: {
        if (tag == 40u) {
          set_has_ram_available();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ram_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message_output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message_output)
  return false;
#undef DO_
}

void message_output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message_output)
  // required .message_output.output_kind type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_output.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // optional uint32 ram_total = 3;
  if (has_ram_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ram_total(), output);
  }

  // optional uint32 ram_free = 4;
  if (has_ram_free()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ram_free(), output);
  }

  // optional uint32 ram_available = 5;
  if (has_ram_available()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ram_available(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message_output)
}

::google::protobuf::uint8* message_output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message_output)
  // required .message_output.output_kind type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message_output.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional uint32 ram_total = 3;
  if (has_ram_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ram_total(), target);
  }

  // optional uint32 ram_free = 4;
  if (has_ram_free()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ram_free(), target);
  }

  // optional uint32 ram_available = 5;
  if (has_ram_available()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ram_available(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message_output)
  return target;
}

size_t message_output::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message_output)
  size_t total_size = 0;

  if (has_message()) {
    // required string message = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  if (has_type()) {
    // required .message_output.output_kind type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t message_output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message_output)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000011) ^ 0x00000011) == 0) {  // All required fields are present.
    // required string message = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());

    // required .message_output.output_kind type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional uint32 ram_total = 3;
    if (has_ram_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ram_total());
    }

    // optional uint32 ram_free = 4;
    if (has_ram_free()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ram_free());
    }

    // optional uint32 ram_available = 5;
    if (has_ram_available()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ram_available());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message_output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message_output)
  GOOGLE_DCHECK_NE(&from, this);
  const message_output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message_output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message_output)
    MergeFrom(*source);
  }
}

void message_output::MergeFrom(const message_output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message_output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_message()) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (from.has_ram_total()) {
      set_ram_total(from.ram_total());
    }
    if (from.has_ram_free()) {
      set_ram_free(from.ram_free());
    }
    if (from.has_ram_available()) {
      set_ram_available(from.ram_available());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
}

void message_output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message_output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_output::CopyFrom(const message_output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message_output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_output::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000011) != 0x00000011) return false;
  return true;
}

void message_output::Swap(message_output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_output::InternalSwap(message_output* other) {
  message_.Swap(&other->message_);
  std::swap(ram_total_, other->ram_total_);
  std::swap(ram_free_, other->ram_free_);
  std::swap(ram_available_, other->ram_available_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message_output::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message_output

// required .message_output.output_kind type = 1;
bool message_output::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void message_output::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
void message_output::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void message_output::clear_type() {
  type_ = 1;
  clear_has_type();
}
::message_output_output_kind message_output::type() const {
  // @@protoc_insertion_point(field_get:message_output.type)
  return static_cast< ::message_output_output_kind >(type_);
}
void message_output::set_type(::message_output_output_kind value) {
  assert(::message_output_output_kind_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:message_output.type)
}

// required string message = 2;
bool message_output::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void message_output::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
void message_output::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void message_output::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
const ::std::string& message_output::message() const {
  // @@protoc_insertion_point(field_get:message_output.message)
  return message_.GetNoArena();
}
void message_output::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message_output.message)
}
#if LANG_CXX11
void message_output::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message_output.message)
}
#endif
void message_output::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message_output.message)
}
void message_output::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message_output.message)
}
::std::string* message_output::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:message_output.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message_output::release_message() {
  // @@protoc_insertion_point(field_release:message_output.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message_output::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:message_output.message)
}

// optional uint32 ram_total = 3;
bool message_output::has_ram_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void message_output::set_has_ram_total() {
  _has_bits_[0] |= 0x00000002u;
}
void message_output::clear_has_ram_total() {
  _has_bits_[0] &= ~0x00000002u;
}
void message_output::clear_ram_total() {
  ram_total_ = 0u;
  clear_has_ram_total();
}
::google::protobuf::uint32 message_output::ram_total() const {
  // @@protoc_insertion_point(field_get:message_output.ram_total)
  return ram_total_;
}
void message_output::set_ram_total(::google::protobuf::uint32 value) {
  set_has_ram_total();
  ram_total_ = value;
  // @@protoc_insertion_point(field_set:message_output.ram_total)
}

// optional uint32 ram_free = 4;
bool message_output::has_ram_free() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void message_output::set_has_ram_free() {
  _has_bits_[0] |= 0x00000004u;
}
void message_output::clear_has_ram_free() {
  _has_bits_[0] &= ~0x00000004u;
}
void message_output::clear_ram_free() {
  ram_free_ = 0u;
  clear_has_ram_free();
}
::google::protobuf::uint32 message_output::ram_free() const {
  // @@protoc_insertion_point(field_get:message_output.ram_free)
  return ram_free_;
}
void message_output::set_ram_free(::google::protobuf::uint32 value) {
  set_has_ram_free();
  ram_free_ = value;
  // @@protoc_insertion_point(field_set:message_output.ram_free)
}

// optional uint32 ram_available = 5;
bool message_output::has_ram_available() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void message_output::set_has_ram_available() {
  _has_bits_[0] |= 0x00000008u;
}
void message_output::clear_has_ram_available() {
  _has_bits_[0] &= ~0x00000008u;
}
void message_output::clear_ram_available() {
  ram_available_ = 0u;
  clear_has_ram_available();
}
::google::protobuf::uint32 message_output::ram_available() const {
  // @@protoc_insertion_point(field_get:message_output.ram_available)
  return ram_available_;
}
void message_output::set_ram_available(::google::protobuf::uint32 value) {
  set_has_ram_available();
  ram_available_ = value;
  // @@protoc_insertion_point(field_set:message_output.ram_available)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
