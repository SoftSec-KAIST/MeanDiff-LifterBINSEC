// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: analysis_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "analysis_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace analysis_config {
class specific_parameters_tDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<specific_parameters_t> {
  public:
  const ::analysis_config::generic_analysis* generic_params_;
  const ::analysis_config::standard_analysis* standard_params_;
} _specific_parameters_t_default_instance_;
class standard_analysisDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<standard_analysis> {
} _standard_analysis_default_instance_;
class generic_analysisDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<generic_analysis> {
} _generic_analysis_default_instance_;
class generic_analysis_resultsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<generic_analysis_results> {
} _generic_analysis_results_default_instance_;
class callret_analysis_results_call_dataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<callret_analysis_results_call_data> {
} _callret_analysis_results_call_data_default_instance_;
class callret_analysis_results_ret_dataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<callret_analysis_results_ret_data> {
} _callret_analysis_results_ret_data_default_instance_;
class callret_analysis_resultsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<callret_analysis_results> {
} _callret_analysis_results_default_instance_;
class po_analysis_results_po_dataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<po_analysis_results_po_data> {
} _po_analysis_results_po_data_default_instance_;
class po_analysis_resultsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<po_analysis_results> {
} _po_analysis_results_default_instance_;

namespace protobuf_analysis_5fconfig_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(specific_parameters_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(specific_parameters_t, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(specific_parameters_t, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(specific_parameters_t, typeid__),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_specific_parameters_t_default_instance_), generic_params_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_specific_parameters_t_default_instance_), standard_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(specific_parameters_t, analyse_param_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(standard_analysis, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(standard_analysis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(standard_analysis, target_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(standard_analysis, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(standard_analysis, get_formula_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, target_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, dba_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, limit_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, get_formula_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, from_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, to_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, restrict_values_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis, restrict_values_to_),
  2,
  1,
  0,
  3,
  8,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis_results, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis_results, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis_results, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis_results, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(generic_analysis_results, smt_formula_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_call_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_call_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_call_data, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_call_data, status_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_ret_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_ret_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_ret_data, ret_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_ret_data, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_ret_data, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_ret_data, returnsites_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_ret_data, solve_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results_ret_data, calls_),
  0,
  2,
  ~0u,
  ~0u,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(callret_analysis_results, values_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results_po_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results_po_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results_po_data, jmp_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results_po_data, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results_po_data, ksteps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results_po_data, computation_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results_po_data, nb_paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results_po_data, alive_branch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results_po_data, formula_),
  1,
  6,
  2,
  3,
  5,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(po_analysis_results, values_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(specific_parameters_t)},
  { 11, 18, sizeof(standard_analysis)},
  { 21, 34, sizeof(generic_analysis)},
  { 43, 50, sizeof(generic_analysis_results)},
  { 53, 59, sizeof(callret_analysis_results_call_data)},
  { 61, 71, sizeof(callret_analysis_results_ret_data)},
  { 77, 82, sizeof(callret_analysis_results)},
  { 83, 94, sizeof(po_analysis_results_po_data)},
  { 101, 106, sizeof(po_analysis_results)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_specific_parameters_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_standard_analysis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_generic_analysis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_generic_analysis_results_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_callret_analysis_results_call_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_callret_analysis_results_ret_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_callret_analysis_results_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_po_analysis_results_po_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_po_analysis_results_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "analysis_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _specific_parameters_t_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _standard_analysis_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _generic_analysis_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _generic_analysis_results_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _callret_analysis_results_call_data_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _callret_analysis_results_ret_data_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _callret_analysis_results_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _po_analysis_results_po_data_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _po_analysis_results_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::common::protobuf_common_2eproto::InitDefaults();
  _specific_parameters_t_default_instance_.DefaultConstruct();
  _standard_analysis_default_instance_.DefaultConstruct();
  _generic_analysis_default_instance_.DefaultConstruct();
  _generic_analysis_results_default_instance_.DefaultConstruct();
  _callret_analysis_results_call_data_default_instance_.DefaultConstruct();
  _callret_analysis_results_ret_data_default_instance_.DefaultConstruct();
  _callret_analysis_results_default_instance_.DefaultConstruct();
  _po_analysis_results_po_data_default_instance_.DefaultConstruct();
  _po_analysis_results_default_instance_.DefaultConstruct();
  _specific_parameters_t_default_instance_.generic_params_ = const_cast< ::analysis_config::generic_analysis*>(
      ::analysis_config::generic_analysis::internal_default_instance());
  _specific_parameters_t_default_instance_.standard_params_ = const_cast< ::analysis_config::standard_analysis*>(
      ::analysis_config::standard_analysis::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025analysis_config.proto\022\017analysis_config"
      "\032\014common.proto\"\236\002\n\025specific_parameters_t"
      "\022C\n\006typeid\030\001 \002(\01623.analysis_config.speci"
      "fic_parameters_t.analyse_type\022;\n\016generic"
      "_params\030\002 \001(\0132!.analysis_config.generic_"
      "analysisH\000\022=\n\017standard_params\030\003 \001(\0132\".an"
      "alysis_config.standard_analysisH\000\"3\n\014ana"
      "lyse_type\022\010\n\004NONE\020\000\022\013\n\007GENERIC\020\001\022\014\n\010STAN"
      "DARD\020\002B\017\n\ranalyse_param\"K\n\021standard_anal"
      "ysis\022\023\n\013target_addr\030\001 \001(\004\022\014\n\004uniq\030\002 \001(\010\022"
      "\023\n\013get_formula\030\003 \001(\010\"\247\002\n\020generic_analysi"
      "s\022:\n\004kind\030\001 \002(\0162,.analysis_config.generi"
      "c_analysis.query_type\022\023\n\013target_addr\030\002 \002"
      "(\004\022\013\n\003dba\030\003 \002(\t\022\024\n\014limit_values\030\004 \001(\r\022\023\n"
      "\013get_formula\030\005 \001(\010\022\021\n\tfrom_addr\030\006 \001(\004\022\017\n"
      "\007to_addr\030\007 \001(\004\022\034\n\024restrict_values_from\030\010"
      " \001(\004\022\032\n\022restrict_values_to\030\t \001(\004\",\n\nquer"
      "y_type\022\022\n\016SATISFIABILITY\020\000\022\n\n\006VALUES\020\001\"c"
      "\n\030generic_analysis_results\022\"\n\006result\030\001 \002"
      "(\0162\022.common.smt_result\022\016\n\006values\030\002 \003(\004\022\023"
      "\n\013smt_formula\030\003 \001(\t\"\267\005\n\030callret_analysis"
      "_results\022B\n\006values\030\001 \003(\01322.analysis_conf"
      "ig.callret_analysis_results.ret_data\032c\n\t"
      "call_data\022\014\n\004addr\030\001 \002(\004\022H\n\006status\030\002 \002(\0162"
      "8.analysis_config.callret_analysis_resul"
      "ts.callret_status\032\236\002\n\010ret_data\022\020\n\010ret_ad"
      "dr\030\001 \002(\004\022H\n\006status\030\002 \002(\01628.analysis_conf"
      "ig.callret_analysis_results.callret_stat"
      "us\022H\n\006labels\030\003 \003(\01628.analysis_config.cal"
      "lret_analysis_results.callret_labels\022\023\n\013"
      "returnsites\030\004 \003(\004\022\023\n\013solve_count\030\005 \002(\r\022B"
      "\n\005calls\030\006 \003(\01323.analysis_config.callret_"
      "analysis_results.call_data\"\254\001\n\016callret_l"
      "abels\022\014\n\010VIOLABLE\020\001\022\013\n\007ALIGNED\020\002\022\016\n\nDISA"
      "LIGNED\020\003\022\016\n\nCAN_RETURN\020\004\022\n\n\006SINGLE\020\005\022\014\n\010"
      "MULTIPLE\020\006\022\n\n\006STRONG\020\007\022\010\n\004WEAK\020\010\022\020\n\014SOLV"
      "ER_WRONG\020\t\022\013\n\007NO_CALL\020\n\022\020\n\014HAS_RETURNED\020"
      "\013\"\"\n\016callret_status\022\006\n\002OK\020\001\022\010\n\004VIOL\020\002\"\326\002"
      "\n\023po_analysis_results\022<\n\006values\030\001 \003(\0132,."
      "analysis_config.po_analysis_results.po_d"
      "ata\032\276\001\n\007po_data\022\020\n\010jmp_addr\030\001 \002(\004\022>\n\006sta"
      "tus\030\002 \002(\0162..analysis_config.po_analysis_"
      "results.po_status\022\016\n\006ksteps\030\003 \002(\r\022\030\n\020com"
      "putation_time\030\004 \002(\002\022\020\n\010nb_paths\030\005 \001(\r\022\024\n"
      "\014alive_branch\030\006 \001(\004\022\017\n\007formula\030\007 \001(\t\"@\n\t"
      "po_status\022\013\n\007UNKNOWN\020\001\022\016\n\nNOT_OPAQUE\020\002\022\n"
      "\n\006OPAQUE\020\003\022\n\n\006LIKELY\020\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1862);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "analysis_config.proto", &protobuf_RegisterTypes);
  ::common::protobuf_common_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_analysis_5fconfig_2eproto

const ::google::protobuf::EnumDescriptor* specific_parameters_t_analyse_type_descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool specific_parameters_t_analyse_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const specific_parameters_t_analyse_type specific_parameters_t::NONE;
const specific_parameters_t_analyse_type specific_parameters_t::GENERIC;
const specific_parameters_t_analyse_type specific_parameters_t::STANDARD;
const specific_parameters_t_analyse_type specific_parameters_t::analyse_type_MIN;
const specific_parameters_t_analyse_type specific_parameters_t::analyse_type_MAX;
const int specific_parameters_t::analyse_type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* generic_analysis_query_type_descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_enum_descriptors[1];
}
bool generic_analysis_query_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const generic_analysis_query_type generic_analysis::SATISFIABILITY;
const generic_analysis_query_type generic_analysis::VALUES;
const generic_analysis_query_type generic_analysis::query_type_MIN;
const generic_analysis_query_type generic_analysis::query_type_MAX;
const int generic_analysis::query_type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* callret_analysis_results_callret_labels_descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_enum_descriptors[2];
}
bool callret_analysis_results_callret_labels_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const callret_analysis_results_callret_labels callret_analysis_results::VIOLABLE;
const callret_analysis_results_callret_labels callret_analysis_results::ALIGNED;
const callret_analysis_results_callret_labels callret_analysis_results::DISALIGNED;
const callret_analysis_results_callret_labels callret_analysis_results::CAN_RETURN;
const callret_analysis_results_callret_labels callret_analysis_results::SINGLE;
const callret_analysis_results_callret_labels callret_analysis_results::MULTIPLE;
const callret_analysis_results_callret_labels callret_analysis_results::STRONG;
const callret_analysis_results_callret_labels callret_analysis_results::WEAK;
const callret_analysis_results_callret_labels callret_analysis_results::SOLVER_WRONG;
const callret_analysis_results_callret_labels callret_analysis_results::NO_CALL;
const callret_analysis_results_callret_labels callret_analysis_results::HAS_RETURNED;
const callret_analysis_results_callret_labels callret_analysis_results::callret_labels_MIN;
const callret_analysis_results_callret_labels callret_analysis_results::callret_labels_MAX;
const int callret_analysis_results::callret_labels_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* callret_analysis_results_callret_status_descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_enum_descriptors[3];
}
bool callret_analysis_results_callret_status_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const callret_analysis_results_callret_status callret_analysis_results::OK;
const callret_analysis_results_callret_status callret_analysis_results::VIOL;
const callret_analysis_results_callret_status callret_analysis_results::callret_status_MIN;
const callret_analysis_results_callret_status callret_analysis_results::callret_status_MAX;
const int callret_analysis_results::callret_status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* po_analysis_results_po_status_descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_enum_descriptors[4];
}
bool po_analysis_results_po_status_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const po_analysis_results_po_status po_analysis_results::UNKNOWN;
const po_analysis_results_po_status po_analysis_results::NOT_OPAQUE;
const po_analysis_results_po_status po_analysis_results::OPAQUE;
const po_analysis_results_po_status po_analysis_results::LIKELY;
const po_analysis_results_po_status po_analysis_results::po_status_MIN;
const po_analysis_results_po_status po_analysis_results::po_status_MAX;
const int po_analysis_results::po_status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int specific_parameters_t::kTypeidFieldNumber;
const int specific_parameters_t::kGenericParamsFieldNumber;
const int specific_parameters_t::kStandardParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

specific_parameters_t::specific_parameters_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_analysis_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:analysis_config.specific_parameters_t)
}
specific_parameters_t::specific_parameters_t(const specific_parameters_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  typeid__ = from.typeid__;
  clear_has_analyse_param();
  switch (from.analyse_param_case()) {
    case kGenericParams: {
      mutable_generic_params()->::analysis_config::generic_analysis::MergeFrom(from.generic_params());
      break;
    }
    case kStandardParams: {
      mutable_standard_params()->::analysis_config::standard_analysis::MergeFrom(from.standard_params());
      break;
    }
    case ANALYSE_PARAM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:analysis_config.specific_parameters_t)
}

void specific_parameters_t::SharedCtor() {
  _cached_size_ = 0;
  typeid__ = 0;
  clear_has_analyse_param();
}

specific_parameters_t::~specific_parameters_t() {
  // @@protoc_insertion_point(destructor:analysis_config.specific_parameters_t)
  SharedDtor();
}

void specific_parameters_t::SharedDtor() {
  if (has_analyse_param()) {
    clear_analyse_param();
  }
}

void specific_parameters_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* specific_parameters_t::descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[0].descriptor;
}

const specific_parameters_t& specific_parameters_t::default_instance() {
  protobuf_analysis_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

specific_parameters_t* specific_parameters_t::New(::google::protobuf::Arena* arena) const {
  specific_parameters_t* n = new specific_parameters_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void specific_parameters_t::clear_analyse_param() {
// @@protoc_insertion_point(one_of_clear_start:analysis_config.specific_parameters_t)
  switch (analyse_param_case()) {
    case kGenericParams: {
      delete analyse_param_.generic_params_;
      break;
    }
    case kStandardParams: {
      delete analyse_param_.standard_params_;
      break;
    }
    case ANALYSE_PARAM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ANALYSE_PARAM_NOT_SET;
}


void specific_parameters_t::Clear() {
// @@protoc_insertion_point(message_clear_start:analysis_config.specific_parameters_t)
  typeid__ = 0;
  clear_analyse_param();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool specific_parameters_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analysis_config.specific_parameters_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .analysis_config.specific_parameters_t.analyse_type typeid = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::analysis_config::specific_parameters_t_analyse_type_IsValid(value)) {
            set_typeid_(static_cast< ::analysis_config::specific_parameters_t_analyse_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .analysis_config.generic_analysis generic_params = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_generic_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .analysis_config.standard_analysis standard_params = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_standard_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analysis_config.specific_parameters_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analysis_config.specific_parameters_t)
  return false;
#undef DO_
}

void specific_parameters_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analysis_config.specific_parameters_t)
  // required .analysis_config.specific_parameters_t.analyse_type typeid = 1;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->typeid_(), output);
  }

  switch (analyse_param_case()) {
    case kGenericParams:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, *analyse_param_.generic_params_, output);
      break;
    case kStandardParams:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, *analyse_param_.standard_params_, output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:analysis_config.specific_parameters_t)
}

::google::protobuf::uint8* specific_parameters_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:analysis_config.specific_parameters_t)
  // required .analysis_config.specific_parameters_t.analyse_type typeid = 1;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->typeid_(), target);
  }

  switch (analyse_param_case()) {
    case kGenericParams:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          2, *analyse_param_.generic_params_, false, target);
      break;
    case kStandardParams:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          3, *analyse_param_.standard_params_, false, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:analysis_config.specific_parameters_t)
  return target;
}

size_t specific_parameters_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:analysis_config.specific_parameters_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .analysis_config.specific_parameters_t.analyse_type typeid = 1;
  if (has_typeid_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->typeid_());
  }
  switch (analyse_param_case()) {
    // optional .analysis_config.generic_analysis generic_params = 2;
    case kGenericParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *analyse_param_.generic_params_);
      break;
    }
    // optional .analysis_config.standard_analysis standard_params = 3;
    case kStandardParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *analyse_param_.standard_params_);
      break;
    }
    case ANALYSE_PARAM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void specific_parameters_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analysis_config.specific_parameters_t)
  GOOGLE_DCHECK_NE(&from, this);
  const specific_parameters_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const specific_parameters_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analysis_config.specific_parameters_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analysis_config.specific_parameters_t)
    MergeFrom(*source);
  }
}

void specific_parameters_t::MergeFrom(const specific_parameters_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analysis_config.specific_parameters_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_typeid_()) {
    set_typeid_(from.typeid_());
  }
  switch (from.analyse_param_case()) {
    case kGenericParams: {
      mutable_generic_params()->::analysis_config::generic_analysis::MergeFrom(from.generic_params());
      break;
    }
    case kStandardParams: {
      mutable_standard_params()->::analysis_config::standard_analysis::MergeFrom(from.standard_params());
      break;
    }
    case ANALYSE_PARAM_NOT_SET: {
      break;
    }
  }
}

void specific_parameters_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analysis_config.specific_parameters_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void specific_parameters_t::CopyFrom(const specific_parameters_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analysis_config.specific_parameters_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool specific_parameters_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  switch (analyse_param_case()) {
    case kGenericParams: {
      if (has_generic_params()) {
        if (!this->generic_params().IsInitialized()) return false;
      }
      break;
    }
    case kStandardParams: {
      break;
    }
    case ANALYSE_PARAM_NOT_SET: {
      break;
    }
  }
  return true;
}

void specific_parameters_t::Swap(specific_parameters_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void specific_parameters_t::InternalSwap(specific_parameters_t* other) {
  std::swap(typeid__, other->typeid__);
  std::swap(analyse_param_, other->analyse_param_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata specific_parameters_t::GetMetadata() const {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// specific_parameters_t

// required .analysis_config.specific_parameters_t.analyse_type typeid = 1;
bool specific_parameters_t::has_typeid_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void specific_parameters_t::set_has_typeid_() {
  _has_bits_[0] |= 0x00000001u;
}
void specific_parameters_t::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000001u;
}
void specific_parameters_t::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
::analysis_config::specific_parameters_t_analyse_type specific_parameters_t::typeid_() const {
  // @@protoc_insertion_point(field_get:analysis_config.specific_parameters_t.typeid)
  return static_cast< ::analysis_config::specific_parameters_t_analyse_type >(typeid__);
}
void specific_parameters_t::set_typeid_(::analysis_config::specific_parameters_t_analyse_type value) {
  assert(::analysis_config::specific_parameters_t_analyse_type_IsValid(value));
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:analysis_config.specific_parameters_t.typeid)
}

// optional .analysis_config.generic_analysis generic_params = 2;
bool specific_parameters_t::has_generic_params() const {
  return analyse_param_case() == kGenericParams;
}
void specific_parameters_t::set_has_generic_params() {
  _oneof_case_[0] = kGenericParams;
}
void specific_parameters_t::clear_generic_params() {
  if (has_generic_params()) {
    delete analyse_param_.generic_params_;
    clear_has_analyse_param();
  }
}
 const ::analysis_config::generic_analysis& specific_parameters_t::generic_params() const {
  // @@protoc_insertion_point(field_get:analysis_config.specific_parameters_t.generic_params)
  return has_generic_params()
      ? *analyse_param_.generic_params_
      : ::analysis_config::generic_analysis::default_instance();
}
::analysis_config::generic_analysis* specific_parameters_t::mutable_generic_params() {
  if (!has_generic_params()) {
    clear_analyse_param();
    set_has_generic_params();
    analyse_param_.generic_params_ = new ::analysis_config::generic_analysis;
  }
  // @@protoc_insertion_point(field_mutable:analysis_config.specific_parameters_t.generic_params)
  return analyse_param_.generic_params_;
}
::analysis_config::generic_analysis* specific_parameters_t::release_generic_params() {
  // @@protoc_insertion_point(field_release:analysis_config.specific_parameters_t.generic_params)
  if (has_generic_params()) {
    clear_has_analyse_param();
    ::analysis_config::generic_analysis* temp = analyse_param_.generic_params_;
    analyse_param_.generic_params_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void specific_parameters_t::set_allocated_generic_params(::analysis_config::generic_analysis* generic_params) {
  clear_analyse_param();
  if (generic_params) {
    set_has_generic_params();
    analyse_param_.generic_params_ = generic_params;
  }
  // @@protoc_insertion_point(field_set_allocated:analysis_config.specific_parameters_t.generic_params)
}

// optional .analysis_config.standard_analysis standard_params = 3;
bool specific_parameters_t::has_standard_params() const {
  return analyse_param_case() == kStandardParams;
}
void specific_parameters_t::set_has_standard_params() {
  _oneof_case_[0] = kStandardParams;
}
void specific_parameters_t::clear_standard_params() {
  if (has_standard_params()) {
    delete analyse_param_.standard_params_;
    clear_has_analyse_param();
  }
}
 const ::analysis_config::standard_analysis& specific_parameters_t::standard_params() const {
  // @@protoc_insertion_point(field_get:analysis_config.specific_parameters_t.standard_params)
  return has_standard_params()
      ? *analyse_param_.standard_params_
      : ::analysis_config::standard_analysis::default_instance();
}
::analysis_config::standard_analysis* specific_parameters_t::mutable_standard_params() {
  if (!has_standard_params()) {
    clear_analyse_param();
    set_has_standard_params();
    analyse_param_.standard_params_ = new ::analysis_config::standard_analysis;
  }
  // @@protoc_insertion_point(field_mutable:analysis_config.specific_parameters_t.standard_params)
  return analyse_param_.standard_params_;
}
::analysis_config::standard_analysis* specific_parameters_t::release_standard_params() {
  // @@protoc_insertion_point(field_release:analysis_config.specific_parameters_t.standard_params)
  if (has_standard_params()) {
    clear_has_analyse_param();
    ::analysis_config::standard_analysis* temp = analyse_param_.standard_params_;
    analyse_param_.standard_params_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void specific_parameters_t::set_allocated_standard_params(::analysis_config::standard_analysis* standard_params) {
  clear_analyse_param();
  if (standard_params) {
    set_has_standard_params();
    analyse_param_.standard_params_ = standard_params;
  }
  // @@protoc_insertion_point(field_set_allocated:analysis_config.specific_parameters_t.standard_params)
}

bool specific_parameters_t::has_analyse_param() const {
  return analyse_param_case() != ANALYSE_PARAM_NOT_SET;
}
void specific_parameters_t::clear_has_analyse_param() {
  _oneof_case_[0] = ANALYSE_PARAM_NOT_SET;
}
specific_parameters_t::AnalyseParamCase specific_parameters_t::analyse_param_case() const {
  return specific_parameters_t::AnalyseParamCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int standard_analysis::kTargetAddrFieldNumber;
const int standard_analysis::kUniqFieldNumber;
const int standard_analysis::kGetFormulaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

standard_analysis::standard_analysis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_analysis_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:analysis_config.standard_analysis)
}
standard_analysis::standard_analysis(const standard_analysis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_addr_, &from.target_addr_,
    reinterpret_cast<char*>(&get_formula_) -
    reinterpret_cast<char*>(&target_addr_) + sizeof(get_formula_));
  // @@protoc_insertion_point(copy_constructor:analysis_config.standard_analysis)
}

void standard_analysis::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&target_addr_, 0, reinterpret_cast<char*>(&get_formula_) -
    reinterpret_cast<char*>(&target_addr_) + sizeof(get_formula_));
}

standard_analysis::~standard_analysis() {
  // @@protoc_insertion_point(destructor:analysis_config.standard_analysis)
  SharedDtor();
}

void standard_analysis::SharedDtor() {
}

void standard_analysis::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* standard_analysis::descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[1].descriptor;
}

const standard_analysis& standard_analysis::default_instance() {
  protobuf_analysis_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

standard_analysis* standard_analysis::New(::google::protobuf::Arena* arena) const {
  standard_analysis* n = new standard_analysis;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void standard_analysis::Clear() {
// @@protoc_insertion_point(message_clear_start:analysis_config.standard_analysis)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&target_addr_, 0, reinterpret_cast<char*>(&get_formula_) -
      reinterpret_cast<char*>(&target_addr_) + sizeof(get_formula_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool standard_analysis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analysis_config.standard_analysis)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 target_addr = 1;
      case 1: {
        if (tag == 8u) {
          set_has_target_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool uniq = 2;
      case 2: {
        if (tag == 16u) {
          set_has_uniq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool get_formula = 3;
      case 3: {
        if (tag == 24u) {
          set_has_get_formula();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &get_formula_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analysis_config.standard_analysis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analysis_config.standard_analysis)
  return false;
#undef DO_
}

void standard_analysis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analysis_config.standard_analysis)
  // optional uint64 target_addr = 1;
  if (has_target_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->target_addr(), output);
  }

  // optional bool uniq = 2;
  if (has_uniq()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->uniq(), output);
  }

  // optional bool get_formula = 3;
  if (has_get_formula()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->get_formula(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:analysis_config.standard_analysis)
}

::google::protobuf::uint8* standard_analysis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:analysis_config.standard_analysis)
  // optional uint64 target_addr = 1;
  if (has_target_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->target_addr(), target);
  }

  // optional bool uniq = 2;
  if (has_uniq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->uniq(), target);
  }

  // optional bool get_formula = 3;
  if (has_get_formula()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->get_formula(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:analysis_config.standard_analysis)
  return target;
}

size_t standard_analysis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:analysis_config.standard_analysis)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 target_addr = 1;
    if (has_target_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->target_addr());
    }

    // optional bool uniq = 2;
    if (has_uniq()) {
      total_size += 1 + 1;
    }

    // optional bool get_formula = 3;
    if (has_get_formula()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void standard_analysis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analysis_config.standard_analysis)
  GOOGLE_DCHECK_NE(&from, this);
  const standard_analysis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const standard_analysis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analysis_config.standard_analysis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analysis_config.standard_analysis)
    MergeFrom(*source);
  }
}

void standard_analysis::MergeFrom(const standard_analysis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analysis_config.standard_analysis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_target_addr()) {
      set_target_addr(from.target_addr());
    }
    if (from.has_uniq()) {
      set_uniq(from.uniq());
    }
    if (from.has_get_formula()) {
      set_get_formula(from.get_formula());
    }
  }
}

void standard_analysis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analysis_config.standard_analysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void standard_analysis::CopyFrom(const standard_analysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analysis_config.standard_analysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool standard_analysis::IsInitialized() const {
  return true;
}

void standard_analysis::Swap(standard_analysis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void standard_analysis::InternalSwap(standard_analysis* other) {
  std::swap(target_addr_, other->target_addr_);
  std::swap(uniq_, other->uniq_);
  std::swap(get_formula_, other->get_formula_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata standard_analysis::GetMetadata() const {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// standard_analysis

// optional uint64 target_addr = 1;
bool standard_analysis::has_target_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void standard_analysis::set_has_target_addr() {
  _has_bits_[0] |= 0x00000001u;
}
void standard_analysis::clear_has_target_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
void standard_analysis::clear_target_addr() {
  target_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_target_addr();
}
::google::protobuf::uint64 standard_analysis::target_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.standard_analysis.target_addr)
  return target_addr_;
}
void standard_analysis::set_target_addr(::google::protobuf::uint64 value) {
  set_has_target_addr();
  target_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.standard_analysis.target_addr)
}

// optional bool uniq = 2;
bool standard_analysis::has_uniq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void standard_analysis::set_has_uniq() {
  _has_bits_[0] |= 0x00000002u;
}
void standard_analysis::clear_has_uniq() {
  _has_bits_[0] &= ~0x00000002u;
}
void standard_analysis::clear_uniq() {
  uniq_ = false;
  clear_has_uniq();
}
bool standard_analysis::uniq() const {
  // @@protoc_insertion_point(field_get:analysis_config.standard_analysis.uniq)
  return uniq_;
}
void standard_analysis::set_uniq(bool value) {
  set_has_uniq();
  uniq_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.standard_analysis.uniq)
}

// optional bool get_formula = 3;
bool standard_analysis::has_get_formula() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void standard_analysis::set_has_get_formula() {
  _has_bits_[0] |= 0x00000004u;
}
void standard_analysis::clear_has_get_formula() {
  _has_bits_[0] &= ~0x00000004u;
}
void standard_analysis::clear_get_formula() {
  get_formula_ = false;
  clear_has_get_formula();
}
bool standard_analysis::get_formula() const {
  // @@protoc_insertion_point(field_get:analysis_config.standard_analysis.get_formula)
  return get_formula_;
}
void standard_analysis::set_get_formula(bool value) {
  set_has_get_formula();
  get_formula_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.standard_analysis.get_formula)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int generic_analysis::kKindFieldNumber;
const int generic_analysis::kTargetAddrFieldNumber;
const int generic_analysis::kDbaFieldNumber;
const int generic_analysis::kLimitValuesFieldNumber;
const int generic_analysis::kGetFormulaFieldNumber;
const int generic_analysis::kFromAddrFieldNumber;
const int generic_analysis::kToAddrFieldNumber;
const int generic_analysis::kRestrictValuesFromFieldNumber;
const int generic_analysis::kRestrictValuesToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

generic_analysis::generic_analysis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_analysis_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:analysis_config.generic_analysis)
}
generic_analysis::generic_analysis(const generic_analysis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dba_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dba()) {
    dba_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dba_);
  }
  ::memcpy(&target_addr_, &from.target_addr_,
    reinterpret_cast<char*>(&get_formula_) -
    reinterpret_cast<char*>(&target_addr_) + sizeof(get_formula_));
  // @@protoc_insertion_point(copy_constructor:analysis_config.generic_analysis)
}

void generic_analysis::SharedCtor() {
  _cached_size_ = 0;
  dba_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_addr_, 0, reinterpret_cast<char*>(&get_formula_) -
    reinterpret_cast<char*>(&target_addr_) + sizeof(get_formula_));
}

generic_analysis::~generic_analysis() {
  // @@protoc_insertion_point(destructor:analysis_config.generic_analysis)
  SharedDtor();
}

void generic_analysis::SharedDtor() {
  dba_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void generic_analysis::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* generic_analysis::descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[2].descriptor;
}

const generic_analysis& generic_analysis::default_instance() {
  protobuf_analysis_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

generic_analysis* generic_analysis::New(::google::protobuf::Arena* arena) const {
  generic_analysis* n = new generic_analysis;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void generic_analysis::Clear() {
// @@protoc_insertion_point(message_clear_start:analysis_config.generic_analysis)
  if (has_dba()) {
    GOOGLE_DCHECK(!dba_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*dba_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&target_addr_, 0, reinterpret_cast<char*>(&restrict_values_to_) -
      reinterpret_cast<char*>(&target_addr_) + sizeof(restrict_values_to_));
  }
  get_formula_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool generic_analysis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analysis_config.generic_analysis)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .analysis_config.generic_analysis.query_type kind = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::analysis_config::generic_analysis_query_type_IsValid(value)) {
            set_kind(static_cast< ::analysis_config::generic_analysis_query_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 target_addr = 2;
      case 2: {
        if (tag == 16u) {
          set_has_target_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dba = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dba()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dba().data(), this->dba().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "analysis_config.generic_analysis.dba");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 limit_values = 4;
      case 4: {
        if (tag == 32u) {
          set_has_limit_values();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_values_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool get_formula = 5;
      case 5: {
        if (tag == 40u) {
          set_has_get_formula();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &get_formula_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 from_addr = 6;
      case 6: {
        if (tag == 48u) {
          set_has_from_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &from_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 to_addr = 7;
      case 7: {
        if (tag == 56u) {
          set_has_to_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &to_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 restrict_values_from = 8;
      case 8: {
        if (tag == 64u) {
          set_has_restrict_values_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &restrict_values_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 restrict_values_to = 9;
      case 9: {
        if (tag == 72u) {
          set_has_restrict_values_to();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &restrict_values_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analysis_config.generic_analysis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analysis_config.generic_analysis)
  return false;
#undef DO_
}

void generic_analysis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analysis_config.generic_analysis)
  // required .analysis_config.generic_analysis.query_type kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // required uint64 target_addr = 2;
  if (has_target_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->target_addr(), output);
  }

  // required string dba = 3;
  if (has_dba()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dba().data(), this->dba().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "analysis_config.generic_analysis.dba");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dba(), output);
  }

  // optional uint32 limit_values = 4;
  if (has_limit_values()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->limit_values(), output);
  }

  // optional bool get_formula = 5;
  if (has_get_formula()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->get_formula(), output);
  }

  // optional uint64 from_addr = 6;
  if (has_from_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->from_addr(), output);
  }

  // optional uint64 to_addr = 7;
  if (has_to_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->to_addr(), output);
  }

  // optional uint64 restrict_values_from = 8;
  if (has_restrict_values_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->restrict_values_from(), output);
  }

  // optional uint64 restrict_values_to = 9;
  if (has_restrict_values_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->restrict_values_to(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:analysis_config.generic_analysis)
}

::google::protobuf::uint8* generic_analysis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:analysis_config.generic_analysis)
  // required .analysis_config.generic_analysis.query_type kind = 1;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // required uint64 target_addr = 2;
  if (has_target_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->target_addr(), target);
  }

  // required string dba = 3;
  if (has_dba()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dba().data(), this->dba().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "analysis_config.generic_analysis.dba");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dba(), target);
  }

  // optional uint32 limit_values = 4;
  if (has_limit_values()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->limit_values(), target);
  }

  // optional bool get_formula = 5;
  if (has_get_formula()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->get_formula(), target);
  }

  // optional uint64 from_addr = 6;
  if (has_from_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->from_addr(), target);
  }

  // optional uint64 to_addr = 7;
  if (has_to_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->to_addr(), target);
  }

  // optional uint64 restrict_values_from = 8;
  if (has_restrict_values_from()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->restrict_values_from(), target);
  }

  // optional uint64 restrict_values_to = 9;
  if (has_restrict_values_to()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->restrict_values_to(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:analysis_config.generic_analysis)
  return target;
}

size_t generic_analysis::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:analysis_config.generic_analysis)
  size_t total_size = 0;

  if (has_dba()) {
    // required string dba = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dba());
  }

  if (has_target_addr()) {
    // required uint64 target_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_addr());
  }

  if (has_kind()) {
    // required .analysis_config.generic_analysis.query_type kind = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  return total_size;
}
size_t generic_analysis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:analysis_config.generic_analysis)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string dba = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dba());

    // required uint64 target_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_addr());

    // required .analysis_config.generic_analysis.query_type kind = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 248u) {
    // optional uint32 limit_values = 4;
    if (has_limit_values()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit_values());
    }

    // optional uint64 from_addr = 6;
    if (has_from_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->from_addr());
    }

    // optional uint64 to_addr = 7;
    if (has_to_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->to_addr());
    }

    // optional uint64 restrict_values_from = 8;
    if (has_restrict_values_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->restrict_values_from());
    }

    // optional uint64 restrict_values_to = 9;
    if (has_restrict_values_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->restrict_values_to());
    }

  }
  // optional bool get_formula = 5;
  if (has_get_formula()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void generic_analysis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analysis_config.generic_analysis)
  GOOGLE_DCHECK_NE(&from, this);
  const generic_analysis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const generic_analysis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analysis_config.generic_analysis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analysis_config.generic_analysis)
    MergeFrom(*source);
  }
}

void generic_analysis::MergeFrom(const generic_analysis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analysis_config.generic_analysis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_dba()) {
      set_has_dba();
      dba_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dba_);
    }
    if (from.has_target_addr()) {
      set_target_addr(from.target_addr());
    }
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_limit_values()) {
      set_limit_values(from.limit_values());
    }
    if (from.has_from_addr()) {
      set_from_addr(from.from_addr());
    }
    if (from.has_to_addr()) {
      set_to_addr(from.to_addr());
    }
    if (from.has_restrict_values_from()) {
      set_restrict_values_from(from.restrict_values_from());
    }
    if (from.has_restrict_values_to()) {
      set_restrict_values_to(from.restrict_values_to());
    }
  }
  if (from.has_get_formula()) {
    set_get_formula(from.get_formula());
  }
}

void generic_analysis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analysis_config.generic_analysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void generic_analysis::CopyFrom(const generic_analysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analysis_config.generic_analysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool generic_analysis::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void generic_analysis::Swap(generic_analysis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void generic_analysis::InternalSwap(generic_analysis* other) {
  dba_.Swap(&other->dba_);
  std::swap(target_addr_, other->target_addr_);
  std::swap(kind_, other->kind_);
  std::swap(limit_values_, other->limit_values_);
  std::swap(from_addr_, other->from_addr_);
  std::swap(to_addr_, other->to_addr_);
  std::swap(restrict_values_from_, other->restrict_values_from_);
  std::swap(restrict_values_to_, other->restrict_values_to_);
  std::swap(get_formula_, other->get_formula_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata generic_analysis::GetMetadata() const {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// generic_analysis

// required .analysis_config.generic_analysis.query_type kind = 1;
bool generic_analysis::has_kind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void generic_analysis::set_has_kind() {
  _has_bits_[0] |= 0x00000004u;
}
void generic_analysis::clear_has_kind() {
  _has_bits_[0] &= ~0x00000004u;
}
void generic_analysis::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
::analysis_config::generic_analysis_query_type generic_analysis::kind() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.kind)
  return static_cast< ::analysis_config::generic_analysis_query_type >(kind_);
}
void generic_analysis::set_kind(::analysis_config::generic_analysis_query_type value) {
  assert(::analysis_config::generic_analysis_query_type_IsValid(value));
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.kind)
}

// required uint64 target_addr = 2;
bool generic_analysis::has_target_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void generic_analysis::set_has_target_addr() {
  _has_bits_[0] |= 0x00000002u;
}
void generic_analysis::clear_has_target_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
void generic_analysis::clear_target_addr() {
  target_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_target_addr();
}
::google::protobuf::uint64 generic_analysis::target_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.target_addr)
  return target_addr_;
}
void generic_analysis::set_target_addr(::google::protobuf::uint64 value) {
  set_has_target_addr();
  target_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.target_addr)
}

// required string dba = 3;
bool generic_analysis::has_dba() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void generic_analysis::set_has_dba() {
  _has_bits_[0] |= 0x00000001u;
}
void generic_analysis::clear_has_dba() {
  _has_bits_[0] &= ~0x00000001u;
}
void generic_analysis::clear_dba() {
  dba_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dba();
}
const ::std::string& generic_analysis::dba() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.dba)
  return dba_.GetNoArena();
}
void generic_analysis::set_dba(const ::std::string& value) {
  set_has_dba();
  dba_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.dba)
}
#if LANG_CXX11
void generic_analysis::set_dba(::std::string&& value) {
  set_has_dba();
  dba_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:analysis_config.generic_analysis.dba)
}
#endif
void generic_analysis::set_dba(const char* value) {
  set_has_dba();
  dba_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analysis_config.generic_analysis.dba)
}
void generic_analysis::set_dba(const char* value, size_t size) {
  set_has_dba();
  dba_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analysis_config.generic_analysis.dba)
}
::std::string* generic_analysis::mutable_dba() {
  set_has_dba();
  // @@protoc_insertion_point(field_mutable:analysis_config.generic_analysis.dba)
  return dba_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* generic_analysis::release_dba() {
  // @@protoc_insertion_point(field_release:analysis_config.generic_analysis.dba)
  clear_has_dba();
  return dba_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void generic_analysis::set_allocated_dba(::std::string* dba) {
  if (dba != NULL) {
    set_has_dba();
  } else {
    clear_has_dba();
  }
  dba_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dba);
  // @@protoc_insertion_point(field_set_allocated:analysis_config.generic_analysis.dba)
}

// optional uint32 limit_values = 4;
bool generic_analysis::has_limit_values() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void generic_analysis::set_has_limit_values() {
  _has_bits_[0] |= 0x00000008u;
}
void generic_analysis::clear_has_limit_values() {
  _has_bits_[0] &= ~0x00000008u;
}
void generic_analysis::clear_limit_values() {
  limit_values_ = 0u;
  clear_has_limit_values();
}
::google::protobuf::uint32 generic_analysis::limit_values() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.limit_values)
  return limit_values_;
}
void generic_analysis::set_limit_values(::google::protobuf::uint32 value) {
  set_has_limit_values();
  limit_values_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.limit_values)
}

// optional bool get_formula = 5;
bool generic_analysis::has_get_formula() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void generic_analysis::set_has_get_formula() {
  _has_bits_[0] |= 0x00000100u;
}
void generic_analysis::clear_has_get_formula() {
  _has_bits_[0] &= ~0x00000100u;
}
void generic_analysis::clear_get_formula() {
  get_formula_ = false;
  clear_has_get_formula();
}
bool generic_analysis::get_formula() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.get_formula)
  return get_formula_;
}
void generic_analysis::set_get_formula(bool value) {
  set_has_get_formula();
  get_formula_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.get_formula)
}

// optional uint64 from_addr = 6;
bool generic_analysis::has_from_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void generic_analysis::set_has_from_addr() {
  _has_bits_[0] |= 0x00000010u;
}
void generic_analysis::clear_has_from_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
void generic_analysis::clear_from_addr() {
  from_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_from_addr();
}
::google::protobuf::uint64 generic_analysis::from_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.from_addr)
  return from_addr_;
}
void generic_analysis::set_from_addr(::google::protobuf::uint64 value) {
  set_has_from_addr();
  from_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.from_addr)
}

// optional uint64 to_addr = 7;
bool generic_analysis::has_to_addr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void generic_analysis::set_has_to_addr() {
  _has_bits_[0] |= 0x00000020u;
}
void generic_analysis::clear_has_to_addr() {
  _has_bits_[0] &= ~0x00000020u;
}
void generic_analysis::clear_to_addr() {
  to_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_to_addr();
}
::google::protobuf::uint64 generic_analysis::to_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.to_addr)
  return to_addr_;
}
void generic_analysis::set_to_addr(::google::protobuf::uint64 value) {
  set_has_to_addr();
  to_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.to_addr)
}

// optional uint64 restrict_values_from = 8;
bool generic_analysis::has_restrict_values_from() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void generic_analysis::set_has_restrict_values_from() {
  _has_bits_[0] |= 0x00000040u;
}
void generic_analysis::clear_has_restrict_values_from() {
  _has_bits_[0] &= ~0x00000040u;
}
void generic_analysis::clear_restrict_values_from() {
  restrict_values_from_ = GOOGLE_ULONGLONG(0);
  clear_has_restrict_values_from();
}
::google::protobuf::uint64 generic_analysis::restrict_values_from() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.restrict_values_from)
  return restrict_values_from_;
}
void generic_analysis::set_restrict_values_from(::google::protobuf::uint64 value) {
  set_has_restrict_values_from();
  restrict_values_from_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.restrict_values_from)
}

// optional uint64 restrict_values_to = 9;
bool generic_analysis::has_restrict_values_to() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void generic_analysis::set_has_restrict_values_to() {
  _has_bits_[0] |= 0x00000080u;
}
void generic_analysis::clear_has_restrict_values_to() {
  _has_bits_[0] &= ~0x00000080u;
}
void generic_analysis::clear_restrict_values_to() {
  restrict_values_to_ = GOOGLE_ULONGLONG(0);
  clear_has_restrict_values_to();
}
::google::protobuf::uint64 generic_analysis::restrict_values_to() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis.restrict_values_to)
  return restrict_values_to_;
}
void generic_analysis::set_restrict_values_to(::google::protobuf::uint64 value) {
  set_has_restrict_values_to();
  restrict_values_to_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis.restrict_values_to)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int generic_analysis_results::kResultFieldNumber;
const int generic_analysis_results::kValuesFieldNumber;
const int generic_analysis_results::kSmtFormulaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

generic_analysis_results::generic_analysis_results()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_analysis_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:analysis_config.generic_analysis_results)
}
generic_analysis_results::generic_analysis_results(const generic_analysis_results& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smt_formula_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_smt_formula()) {
    smt_formula_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smt_formula_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:analysis_config.generic_analysis_results)
}

void generic_analysis_results::SharedCtor() {
  _cached_size_ = 0;
  smt_formula_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

generic_analysis_results::~generic_analysis_results() {
  // @@protoc_insertion_point(destructor:analysis_config.generic_analysis_results)
  SharedDtor();
}

void generic_analysis_results::SharedDtor() {
  smt_formula_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void generic_analysis_results::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* generic_analysis_results::descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[3].descriptor;
}

const generic_analysis_results& generic_analysis_results::default_instance() {
  protobuf_analysis_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

generic_analysis_results* generic_analysis_results::New(::google::protobuf::Arena* arena) const {
  generic_analysis_results* n = new generic_analysis_results;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void generic_analysis_results::Clear() {
// @@protoc_insertion_point(message_clear_start:analysis_config.generic_analysis_results)
  values_.Clear();
  if (has_smt_formula()) {
    GOOGLE_DCHECK(!smt_formula_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*smt_formula_.UnsafeRawStringPointer())->clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool generic_analysis_results::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analysis_config.generic_analysis_results)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .common.smt_result result = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::common::smt_result_IsValid(value)) {
            set_result(static_cast< ::common::smt_result >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 values = 2;
      case 2: {
        if (tag == 16u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_values())));
        } else if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string smt_formula = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smt_formula()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smt_formula().data(), this->smt_formula().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "analysis_config.generic_analysis_results.smt_formula");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analysis_config.generic_analysis_results)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analysis_config.generic_analysis_results)
  return false;
#undef DO_
}

void generic_analysis_results::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analysis_config.generic_analysis_results)
  // required .common.smt_result result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // repeated uint64 values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->values(i), output);
  }

  // optional string smt_formula = 3;
  if (has_smt_formula()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smt_formula().data(), this->smt_formula().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "analysis_config.generic_analysis_results.smt_formula");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smt_formula(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:analysis_config.generic_analysis_results)
}

::google::protobuf::uint8* generic_analysis_results::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:analysis_config.generic_analysis_results)
  // required .common.smt_result result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // repeated uint64 values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->values(i), target);
  }

  // optional string smt_formula = 3;
  if (has_smt_formula()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smt_formula().data(), this->smt_formula().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "analysis_config.generic_analysis_results.smt_formula");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->smt_formula(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:analysis_config.generic_analysis_results)
  return target;
}

size_t generic_analysis_results::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:analysis_config.generic_analysis_results)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .common.smt_result result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }
  // repeated uint64 values = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->values_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->values_size());
    total_size += data_size;
  }

  // optional string smt_formula = 3;
  if (has_smt_formula()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smt_formula());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void generic_analysis_results::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analysis_config.generic_analysis_results)
  GOOGLE_DCHECK_NE(&from, this);
  const generic_analysis_results* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const generic_analysis_results>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analysis_config.generic_analysis_results)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analysis_config.generic_analysis_results)
    MergeFrom(*source);
  }
}

void generic_analysis_results::MergeFrom(const generic_analysis_results& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analysis_config.generic_analysis_results)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_smt_formula()) {
      set_has_smt_formula();
      smt_formula_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smt_formula_);
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
}

void generic_analysis_results::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analysis_config.generic_analysis_results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void generic_analysis_results::CopyFrom(const generic_analysis_results& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analysis_config.generic_analysis_results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool generic_analysis_results::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void generic_analysis_results::Swap(generic_analysis_results* other) {
  if (other == this) return;
  InternalSwap(other);
}
void generic_analysis_results::InternalSwap(generic_analysis_results* other) {
  values_.UnsafeArenaSwap(&other->values_);
  smt_formula_.Swap(&other->smt_formula_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata generic_analysis_results::GetMetadata() const {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// generic_analysis_results

// required .common.smt_result result = 1;
bool generic_analysis_results::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void generic_analysis_results::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void generic_analysis_results::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void generic_analysis_results::clear_result() {
  result_ = 0;
  clear_has_result();
}
::common::smt_result generic_analysis_results::result() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis_results.result)
  return static_cast< ::common::smt_result >(result_);
}
void generic_analysis_results::set_result(::common::smt_result value) {
  assert(::common::smt_result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis_results.result)
}

// repeated uint64 values = 2;
int generic_analysis_results::values_size() const {
  return values_.size();
}
void generic_analysis_results::clear_values() {
  values_.Clear();
}
::google::protobuf::uint64 generic_analysis_results::values(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis_results.values)
  return values_.Get(index);
}
void generic_analysis_results::set_values(int index, ::google::protobuf::uint64 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis_results.values)
}
void generic_analysis_results::add_values(::google::protobuf::uint64 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:analysis_config.generic_analysis_results.values)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
generic_analysis_results::values() const {
  // @@protoc_insertion_point(field_list:analysis_config.generic_analysis_results.values)
  return values_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
generic_analysis_results::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.generic_analysis_results.values)
  return &values_;
}

// optional string smt_formula = 3;
bool generic_analysis_results::has_smt_formula() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void generic_analysis_results::set_has_smt_formula() {
  _has_bits_[0] |= 0x00000001u;
}
void generic_analysis_results::clear_has_smt_formula() {
  _has_bits_[0] &= ~0x00000001u;
}
void generic_analysis_results::clear_smt_formula() {
  smt_formula_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smt_formula();
}
const ::std::string& generic_analysis_results::smt_formula() const {
  // @@protoc_insertion_point(field_get:analysis_config.generic_analysis_results.smt_formula)
  return smt_formula_.GetNoArena();
}
void generic_analysis_results::set_smt_formula(const ::std::string& value) {
  set_has_smt_formula();
  smt_formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analysis_config.generic_analysis_results.smt_formula)
}
#if LANG_CXX11
void generic_analysis_results::set_smt_formula(::std::string&& value) {
  set_has_smt_formula();
  smt_formula_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:analysis_config.generic_analysis_results.smt_formula)
}
#endif
void generic_analysis_results::set_smt_formula(const char* value) {
  set_has_smt_formula();
  smt_formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analysis_config.generic_analysis_results.smt_formula)
}
void generic_analysis_results::set_smt_formula(const char* value, size_t size) {
  set_has_smt_formula();
  smt_formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analysis_config.generic_analysis_results.smt_formula)
}
::std::string* generic_analysis_results::mutable_smt_formula() {
  set_has_smt_formula();
  // @@protoc_insertion_point(field_mutable:analysis_config.generic_analysis_results.smt_formula)
  return smt_formula_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* generic_analysis_results::release_smt_formula() {
  // @@protoc_insertion_point(field_release:analysis_config.generic_analysis_results.smt_formula)
  clear_has_smt_formula();
  return smt_formula_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void generic_analysis_results::set_allocated_smt_formula(::std::string* smt_formula) {
  if (smt_formula != NULL) {
    set_has_smt_formula();
  } else {
    clear_has_smt_formula();
  }
  smt_formula_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smt_formula);
  // @@protoc_insertion_point(field_set_allocated:analysis_config.generic_analysis_results.smt_formula)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int callret_analysis_results_call_data::kAddrFieldNumber;
const int callret_analysis_results_call_data::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

callret_analysis_results_call_data::callret_analysis_results_call_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_analysis_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:analysis_config.callret_analysis_results.call_data)
}
callret_analysis_results_call_data::callret_analysis_results_call_data(const callret_analysis_results_call_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&addr_, &from.addr_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&addr_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:analysis_config.callret_analysis_results.call_data)
}

void callret_analysis_results_call_data::SharedCtor() {
  _cached_size_ = 0;
  addr_ = GOOGLE_ULONGLONG(0);
  status_ = 1;
}

callret_analysis_results_call_data::~callret_analysis_results_call_data() {
  // @@protoc_insertion_point(destructor:analysis_config.callret_analysis_results.call_data)
  SharedDtor();
}

void callret_analysis_results_call_data::SharedDtor() {
}

void callret_analysis_results_call_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* callret_analysis_results_call_data::descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[4].descriptor;
}

const callret_analysis_results_call_data& callret_analysis_results_call_data::default_instance() {
  protobuf_analysis_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

callret_analysis_results_call_data* callret_analysis_results_call_data::New(::google::protobuf::Arena* arena) const {
  callret_analysis_results_call_data* n = new callret_analysis_results_call_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void callret_analysis_results_call_data::Clear() {
// @@protoc_insertion_point(message_clear_start:analysis_config.callret_analysis_results.call_data)
  if (_has_bits_[0 / 32] & 3u) {
    addr_ = GOOGLE_ULONGLONG(0);
    status_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool callret_analysis_results_call_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analysis_config.callret_analysis_results.call_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 addr = 1;
      case 1: {
        if (tag == 8u) {
          set_has_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .analysis_config.callret_analysis_results.callret_status status = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::analysis_config::callret_analysis_results_callret_status_IsValid(value)) {
            set_status(static_cast< ::analysis_config::callret_analysis_results_callret_status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analysis_config.callret_analysis_results.call_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analysis_config.callret_analysis_results.call_data)
  return false;
#undef DO_
}

void callret_analysis_results_call_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analysis_config.callret_analysis_results.call_data)
  // required uint64 addr = 1;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->addr(), output);
  }

  // required .analysis_config.callret_analysis_results.callret_status status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:analysis_config.callret_analysis_results.call_data)
}

::google::protobuf::uint8* callret_analysis_results_call_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:analysis_config.callret_analysis_results.call_data)
  // required uint64 addr = 1;
  if (has_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->addr(), target);
  }

  // required .analysis_config.callret_analysis_results.callret_status status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:analysis_config.callret_analysis_results.call_data)
  return target;
}

size_t callret_analysis_results_call_data::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:analysis_config.callret_analysis_results.call_data)
  size_t total_size = 0;

  if (has_addr()) {
    // required uint64 addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->addr());
  }

  if (has_status()) {
    // required .analysis_config.callret_analysis_results.callret_status status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  return total_size;
}
size_t callret_analysis_results_call_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:analysis_config.callret_analysis_results.call_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->addr());

    // required .analysis_config.callret_analysis_results.callret_status status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void callret_analysis_results_call_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analysis_config.callret_analysis_results.call_data)
  GOOGLE_DCHECK_NE(&from, this);
  const callret_analysis_results_call_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const callret_analysis_results_call_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analysis_config.callret_analysis_results.call_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analysis_config.callret_analysis_results.call_data)
    MergeFrom(*source);
  }
}

void callret_analysis_results_call_data::MergeFrom(const callret_analysis_results_call_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analysis_config.callret_analysis_results.call_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_addr()) {
      set_addr(from.addr());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
}

void callret_analysis_results_call_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analysis_config.callret_analysis_results.call_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void callret_analysis_results_call_data::CopyFrom(const callret_analysis_results_call_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analysis_config.callret_analysis_results.call_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool callret_analysis_results_call_data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void callret_analysis_results_call_data::Swap(callret_analysis_results_call_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void callret_analysis_results_call_data::InternalSwap(callret_analysis_results_call_data* other) {
  std::swap(addr_, other->addr_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata callret_analysis_results_call_data::GetMetadata() const {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// callret_analysis_results_call_data

// required uint64 addr = 1;
bool callret_analysis_results_call_data::has_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void callret_analysis_results_call_data::set_has_addr() {
  _has_bits_[0] |= 0x00000001u;
}
void callret_analysis_results_call_data::clear_has_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
void callret_analysis_results_call_data::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
  clear_has_addr();
}
::google::protobuf::uint64 callret_analysis_results_call_data::addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.call_data.addr)
  return addr_;
}
void callret_analysis_results_call_data::set_addr(::google::protobuf::uint64 value) {
  set_has_addr();
  addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.call_data.addr)
}

// required .analysis_config.callret_analysis_results.callret_status status = 2;
bool callret_analysis_results_call_data::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void callret_analysis_results_call_data::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
void callret_analysis_results_call_data::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void callret_analysis_results_call_data::clear_status() {
  status_ = 1;
  clear_has_status();
}
::analysis_config::callret_analysis_results_callret_status callret_analysis_results_call_data::status() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.call_data.status)
  return static_cast< ::analysis_config::callret_analysis_results_callret_status >(status_);
}
void callret_analysis_results_call_data::set_status(::analysis_config::callret_analysis_results_callret_status value) {
  assert(::analysis_config::callret_analysis_results_callret_status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.call_data.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int callret_analysis_results_ret_data::kRetAddrFieldNumber;
const int callret_analysis_results_ret_data::kStatusFieldNumber;
const int callret_analysis_results_ret_data::kLabelsFieldNumber;
const int callret_analysis_results_ret_data::kReturnsitesFieldNumber;
const int callret_analysis_results_ret_data::kSolveCountFieldNumber;
const int callret_analysis_results_ret_data::kCallsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

callret_analysis_results_ret_data::callret_analysis_results_ret_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_analysis_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:analysis_config.callret_analysis_results.ret_data)
}
callret_analysis_results_ret_data::callret_analysis_results_ret_data(const callret_analysis_results_ret_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      labels_(from.labels_),
      returnsites_(from.returnsites_),
      calls_(from.calls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ret_addr_, &from.ret_addr_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&ret_addr_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:analysis_config.callret_analysis_results.ret_data)
}

void callret_analysis_results_ret_data::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ret_addr_, 0, reinterpret_cast<char*>(&solve_count_) -
    reinterpret_cast<char*>(&ret_addr_) + sizeof(solve_count_));
  status_ = 1;
}

callret_analysis_results_ret_data::~callret_analysis_results_ret_data() {
  // @@protoc_insertion_point(destructor:analysis_config.callret_analysis_results.ret_data)
  SharedDtor();
}

void callret_analysis_results_ret_data::SharedDtor() {
}

void callret_analysis_results_ret_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* callret_analysis_results_ret_data::descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[5].descriptor;
}

const callret_analysis_results_ret_data& callret_analysis_results_ret_data::default_instance() {
  protobuf_analysis_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

callret_analysis_results_ret_data* callret_analysis_results_ret_data::New(::google::protobuf::Arena* arena) const {
  callret_analysis_results_ret_data* n = new callret_analysis_results_ret_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void callret_analysis_results_ret_data::Clear() {
// @@protoc_insertion_point(message_clear_start:analysis_config.callret_analysis_results.ret_data)
  labels_.Clear();
  returnsites_.Clear();
  calls_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&ret_addr_, 0, reinterpret_cast<char*>(&solve_count_) -
      reinterpret_cast<char*>(&ret_addr_) + sizeof(solve_count_));
    status_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool callret_analysis_results_ret_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analysis_config.callret_analysis_results.ret_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 ret_addr = 1;
      case 1: {
        if (tag == 8u) {
          set_has_ret_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ret_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .analysis_config.callret_analysis_results.callret_status status = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::analysis_config::callret_analysis_results_callret_status_IsValid(value)) {
            set_status(static_cast< ::analysis_config::callret_analysis_results_callret_status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .analysis_config.callret_analysis_results.callret_labels labels = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::analysis_config::callret_analysis_results_callret_labels_IsValid(value)) {
            add_labels(static_cast< ::analysis_config::callret_analysis_results_callret_labels >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 3,
                 ::analysis_config::callret_analysis_results_callret_labels_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_labels())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 returnsites = 4;
      case 4: {
        if (tag == 32u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32u, input, this->mutable_returnsites())));
        } else if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_returnsites())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 solve_count = 5;
      case 5: {
        if (tag == 40u) {
          set_has_solve_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &solve_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .analysis_config.callret_analysis_results.call_data calls = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_calls()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analysis_config.callret_analysis_results.ret_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analysis_config.callret_analysis_results.ret_data)
  return false;
#undef DO_
}

void callret_analysis_results_ret_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analysis_config.callret_analysis_results.ret_data)
  // required uint64 ret_addr = 1;
  if (has_ret_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ret_addr(), output);
  }

  // required .analysis_config.callret_analysis_results.callret_status status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // repeated .analysis_config.callret_analysis_results.callret_labels labels = 3;
  for (int i = 0; i < this->labels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->labels(i), output);
  }

  // repeated uint64 returnsites = 4;
  for (int i = 0; i < this->returnsites_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->returnsites(i), output);
  }

  // required uint32 solve_count = 5;
  if (has_solve_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->solve_count(), output);
  }

  // repeated .analysis_config.callret_analysis_results.call_data calls = 6;
  for (unsigned int i = 0, n = this->calls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->calls(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:analysis_config.callret_analysis_results.ret_data)
}

::google::protobuf::uint8* callret_analysis_results_ret_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:analysis_config.callret_analysis_results.ret_data)
  // required uint64 ret_addr = 1;
  if (has_ret_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ret_addr(), target);
  }

  // required .analysis_config.callret_analysis_results.callret_status status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // repeated .analysis_config.callret_analysis_results.callret_labels labels = 3;
  for (int i = 0; i < this->labels_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->labels(i), target);
  }

  // repeated uint64 returnsites = 4;
  for (int i = 0; i < this->returnsites_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(4, this->returnsites(i), target);
  }

  // required uint32 solve_count = 5;
  if (has_solve_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->solve_count(), target);
  }

  // repeated .analysis_config.callret_analysis_results.call_data calls = 6;
  for (unsigned int i = 0, n = this->calls_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->calls(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:analysis_config.callret_analysis_results.ret_data)
  return target;
}

size_t callret_analysis_results_ret_data::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:analysis_config.callret_analysis_results.ret_data)
  size_t total_size = 0;

  if (has_ret_addr()) {
    // required uint64 ret_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ret_addr());
  }

  if (has_solve_count()) {
    // required uint32 solve_count = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->solve_count());
  }

  if (has_status()) {
    // required .analysis_config.callret_analysis_results.callret_status status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  return total_size;
}
size_t callret_analysis_results_ret_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:analysis_config.callret_analysis_results.ret_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 ret_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ret_addr());

    // required uint32 solve_count = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->solve_count());

    // required .analysis_config.callret_analysis_results.callret_status status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .analysis_config.callret_analysis_results.callret_labels labels = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->labels_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->labels(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated uint64 returnsites = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->returnsites_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->returnsites_size());
    total_size += data_size;
  }

  // repeated .analysis_config.callret_analysis_results.call_data calls = 6;
  {
    unsigned int count = this->calls_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->calls(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void callret_analysis_results_ret_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analysis_config.callret_analysis_results.ret_data)
  GOOGLE_DCHECK_NE(&from, this);
  const callret_analysis_results_ret_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const callret_analysis_results_ret_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analysis_config.callret_analysis_results.ret_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analysis_config.callret_analysis_results.ret_data)
    MergeFrom(*source);
  }
}

void callret_analysis_results_ret_data::MergeFrom(const callret_analysis_results_ret_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analysis_config.callret_analysis_results.ret_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  returnsites_.MergeFrom(from.returnsites_);
  calls_.MergeFrom(from.calls_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_ret_addr()) {
      set_ret_addr(from.ret_addr());
    }
    if (from.has_solve_count()) {
      set_solve_count(from.solve_count());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
}

void callret_analysis_results_ret_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analysis_config.callret_analysis_results.ret_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void callret_analysis_results_ret_data::CopyFrom(const callret_analysis_results_ret_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analysis_config.callret_analysis_results.ret_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool callret_analysis_results_ret_data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->calls())) return false;
  return true;
}

void callret_analysis_results_ret_data::Swap(callret_analysis_results_ret_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void callret_analysis_results_ret_data::InternalSwap(callret_analysis_results_ret_data* other) {
  labels_.UnsafeArenaSwap(&other->labels_);
  returnsites_.UnsafeArenaSwap(&other->returnsites_);
  calls_.UnsafeArenaSwap(&other->calls_);
  std::swap(ret_addr_, other->ret_addr_);
  std::swap(solve_count_, other->solve_count_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata callret_analysis_results_ret_data::GetMetadata() const {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// callret_analysis_results_ret_data

// required uint64 ret_addr = 1;
bool callret_analysis_results_ret_data::has_ret_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void callret_analysis_results_ret_data::set_has_ret_addr() {
  _has_bits_[0] |= 0x00000001u;
}
void callret_analysis_results_ret_data::clear_has_ret_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
void callret_analysis_results_ret_data::clear_ret_addr() {
  ret_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_ret_addr();
}
::google::protobuf::uint64 callret_analysis_results_ret_data::ret_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.ret_addr)
  return ret_addr_;
}
void callret_analysis_results_ret_data::set_ret_addr(::google::protobuf::uint64 value) {
  set_has_ret_addr();
  ret_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.ret_addr)
}

// required .analysis_config.callret_analysis_results.callret_status status = 2;
bool callret_analysis_results_ret_data::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void callret_analysis_results_ret_data::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
void callret_analysis_results_ret_data::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void callret_analysis_results_ret_data::clear_status() {
  status_ = 1;
  clear_has_status();
}
::analysis_config::callret_analysis_results_callret_status callret_analysis_results_ret_data::status() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.status)
  return static_cast< ::analysis_config::callret_analysis_results_callret_status >(status_);
}
void callret_analysis_results_ret_data::set_status(::analysis_config::callret_analysis_results_callret_status value) {
  assert(::analysis_config::callret_analysis_results_callret_status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.status)
}

// repeated .analysis_config.callret_analysis_results.callret_labels labels = 3;
int callret_analysis_results_ret_data::labels_size() const {
  return labels_.size();
}
void callret_analysis_results_ret_data::clear_labels() {
  labels_.Clear();
}
::analysis_config::callret_analysis_results_callret_labels callret_analysis_results_ret_data::labels(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.labels)
  return static_cast< ::analysis_config::callret_analysis_results_callret_labels >(labels_.Get(index));
}
void callret_analysis_results_ret_data::set_labels(int index, ::analysis_config::callret_analysis_results_callret_labels value) {
  assert(::analysis_config::callret_analysis_results_callret_labels_IsValid(value));
  labels_.Set(index, value);
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.labels)
}
void callret_analysis_results_ret_data::add_labels(::analysis_config::callret_analysis_results_callret_labels value) {
  assert(::analysis_config::callret_analysis_results_callret_labels_IsValid(value));
  labels_.Add(value);
  // @@protoc_insertion_point(field_add:analysis_config.callret_analysis_results.ret_data.labels)
}
const ::google::protobuf::RepeatedField<int>&
callret_analysis_results_ret_data::labels() const {
  // @@protoc_insertion_point(field_list:analysis_config.callret_analysis_results.ret_data.labels)
  return labels_;
}
::google::protobuf::RepeatedField<int>*
callret_analysis_results_ret_data::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.callret_analysis_results.ret_data.labels)
  return &labels_;
}

// repeated uint64 returnsites = 4;
int callret_analysis_results_ret_data::returnsites_size() const {
  return returnsites_.size();
}
void callret_analysis_results_ret_data::clear_returnsites() {
  returnsites_.Clear();
}
::google::protobuf::uint64 callret_analysis_results_ret_data::returnsites(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.returnsites)
  return returnsites_.Get(index);
}
void callret_analysis_results_ret_data::set_returnsites(int index, ::google::protobuf::uint64 value) {
  returnsites_.Set(index, value);
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.returnsites)
}
void callret_analysis_results_ret_data::add_returnsites(::google::protobuf::uint64 value) {
  returnsites_.Add(value);
  // @@protoc_insertion_point(field_add:analysis_config.callret_analysis_results.ret_data.returnsites)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
callret_analysis_results_ret_data::returnsites() const {
  // @@protoc_insertion_point(field_list:analysis_config.callret_analysis_results.ret_data.returnsites)
  return returnsites_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
callret_analysis_results_ret_data::mutable_returnsites() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.callret_analysis_results.ret_data.returnsites)
  return &returnsites_;
}

// required uint32 solve_count = 5;
bool callret_analysis_results_ret_data::has_solve_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void callret_analysis_results_ret_data::set_has_solve_count() {
  _has_bits_[0] |= 0x00000002u;
}
void callret_analysis_results_ret_data::clear_has_solve_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void callret_analysis_results_ret_data::clear_solve_count() {
  solve_count_ = 0u;
  clear_has_solve_count();
}
::google::protobuf::uint32 callret_analysis_results_ret_data::solve_count() const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.solve_count)
  return solve_count_;
}
void callret_analysis_results_ret_data::set_solve_count(::google::protobuf::uint32 value) {
  set_has_solve_count();
  solve_count_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.callret_analysis_results.ret_data.solve_count)
}

// repeated .analysis_config.callret_analysis_results.call_data calls = 6;
int callret_analysis_results_ret_data::calls_size() const {
  return calls_.size();
}
void callret_analysis_results_ret_data::clear_calls() {
  calls_.Clear();
}
const ::analysis_config::callret_analysis_results_call_data& callret_analysis_results_ret_data::calls(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.ret_data.calls)
  return calls_.Get(index);
}
::analysis_config::callret_analysis_results_call_data* callret_analysis_results_ret_data::mutable_calls(int index) {
  // @@protoc_insertion_point(field_mutable:analysis_config.callret_analysis_results.ret_data.calls)
  return calls_.Mutable(index);
}
::analysis_config::callret_analysis_results_call_data* callret_analysis_results_ret_data::add_calls() {
  // @@protoc_insertion_point(field_add:analysis_config.callret_analysis_results.ret_data.calls)
  return calls_.Add();
}
::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_call_data >*
callret_analysis_results_ret_data::mutable_calls() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.callret_analysis_results.ret_data.calls)
  return &calls_;
}
const ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_call_data >&
callret_analysis_results_ret_data::calls() const {
  // @@protoc_insertion_point(field_list:analysis_config.callret_analysis_results.ret_data.calls)
  return calls_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int callret_analysis_results::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

callret_analysis_results::callret_analysis_results()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_analysis_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:analysis_config.callret_analysis_results)
}
callret_analysis_results::callret_analysis_results(const callret_analysis_results& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:analysis_config.callret_analysis_results)
}

void callret_analysis_results::SharedCtor() {
  _cached_size_ = 0;
}

callret_analysis_results::~callret_analysis_results() {
  // @@protoc_insertion_point(destructor:analysis_config.callret_analysis_results)
  SharedDtor();
}

void callret_analysis_results::SharedDtor() {
}

void callret_analysis_results::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* callret_analysis_results::descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[6].descriptor;
}

const callret_analysis_results& callret_analysis_results::default_instance() {
  protobuf_analysis_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

callret_analysis_results* callret_analysis_results::New(::google::protobuf::Arena* arena) const {
  callret_analysis_results* n = new callret_analysis_results;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void callret_analysis_results::Clear() {
// @@protoc_insertion_point(message_clear_start:analysis_config.callret_analysis_results)
  values_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool callret_analysis_results::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analysis_config.callret_analysis_results)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .analysis_config.callret_analysis_results.ret_data values = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analysis_config.callret_analysis_results)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analysis_config.callret_analysis_results)
  return false;
#undef DO_
}

void callret_analysis_results::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analysis_config.callret_analysis_results)
  // repeated .analysis_config.callret_analysis_results.ret_data values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:analysis_config.callret_analysis_results)
}

::google::protobuf::uint8* callret_analysis_results::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:analysis_config.callret_analysis_results)
  // repeated .analysis_config.callret_analysis_results.ret_data values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->values(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:analysis_config.callret_analysis_results)
  return target;
}

size_t callret_analysis_results::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:analysis_config.callret_analysis_results)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .analysis_config.callret_analysis_results.ret_data values = 1;
  {
    unsigned int count = this->values_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->values(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void callret_analysis_results::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analysis_config.callret_analysis_results)
  GOOGLE_DCHECK_NE(&from, this);
  const callret_analysis_results* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const callret_analysis_results>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analysis_config.callret_analysis_results)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analysis_config.callret_analysis_results)
    MergeFrom(*source);
  }
}

void callret_analysis_results::MergeFrom(const callret_analysis_results& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analysis_config.callret_analysis_results)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
}

void callret_analysis_results::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analysis_config.callret_analysis_results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void callret_analysis_results::CopyFrom(const callret_analysis_results& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analysis_config.callret_analysis_results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool callret_analysis_results::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->values())) return false;
  return true;
}

void callret_analysis_results::Swap(callret_analysis_results* other) {
  if (other == this) return;
  InternalSwap(other);
}
void callret_analysis_results::InternalSwap(callret_analysis_results* other) {
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata callret_analysis_results::GetMetadata() const {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// callret_analysis_results

// repeated .analysis_config.callret_analysis_results.ret_data values = 1;
int callret_analysis_results::values_size() const {
  return values_.size();
}
void callret_analysis_results::clear_values() {
  values_.Clear();
}
const ::analysis_config::callret_analysis_results_ret_data& callret_analysis_results::values(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.callret_analysis_results.values)
  return values_.Get(index);
}
::analysis_config::callret_analysis_results_ret_data* callret_analysis_results::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:analysis_config.callret_analysis_results.values)
  return values_.Mutable(index);
}
::analysis_config::callret_analysis_results_ret_data* callret_analysis_results::add_values() {
  // @@protoc_insertion_point(field_add:analysis_config.callret_analysis_results.values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_ret_data >*
callret_analysis_results::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.callret_analysis_results.values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::analysis_config::callret_analysis_results_ret_data >&
callret_analysis_results::values() const {
  // @@protoc_insertion_point(field_list:analysis_config.callret_analysis_results.values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int po_analysis_results_po_data::kJmpAddrFieldNumber;
const int po_analysis_results_po_data::kStatusFieldNumber;
const int po_analysis_results_po_data::kKstepsFieldNumber;
const int po_analysis_results_po_data::kComputationTimeFieldNumber;
const int po_analysis_results_po_data::kNbPathsFieldNumber;
const int po_analysis_results_po_data::kAliveBranchFieldNumber;
const int po_analysis_results_po_data::kFormulaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

po_analysis_results_po_data::po_analysis_results_po_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_analysis_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:analysis_config.po_analysis_results.po_data)
}
po_analysis_results_po_data::po_analysis_results_po_data(const po_analysis_results_po_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  formula_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_formula()) {
    formula_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formula_);
  }
  ::memcpy(&jmp_addr_, &from.jmp_addr_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&jmp_addr_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:analysis_config.po_analysis_results.po_data)
}

void po_analysis_results_po_data::SharedCtor() {
  _cached_size_ = 0;
  formula_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&jmp_addr_, 0, reinterpret_cast<char*>(&nb_paths_) -
    reinterpret_cast<char*>(&jmp_addr_) + sizeof(nb_paths_));
  status_ = 1;
}

po_analysis_results_po_data::~po_analysis_results_po_data() {
  // @@protoc_insertion_point(destructor:analysis_config.po_analysis_results.po_data)
  SharedDtor();
}

void po_analysis_results_po_data::SharedDtor() {
  formula_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void po_analysis_results_po_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* po_analysis_results_po_data::descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[7].descriptor;
}

const po_analysis_results_po_data& po_analysis_results_po_data::default_instance() {
  protobuf_analysis_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

po_analysis_results_po_data* po_analysis_results_po_data::New(::google::protobuf::Arena* arena) const {
  po_analysis_results_po_data* n = new po_analysis_results_po_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void po_analysis_results_po_data::Clear() {
// @@protoc_insertion_point(message_clear_start:analysis_config.po_analysis_results.po_data)
  if (has_formula()) {
    GOOGLE_DCHECK(!formula_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*formula_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 126u) {
    ::memset(&jmp_addr_, 0, reinterpret_cast<char*>(&nb_paths_) -
      reinterpret_cast<char*>(&jmp_addr_) + sizeof(nb_paths_));
    status_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool po_analysis_results_po_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analysis_config.po_analysis_results.po_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 jmp_addr = 1;
      case 1: {
        if (tag == 8u) {
          set_has_jmp_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &jmp_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .analysis_config.po_analysis_results.po_status status = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::analysis_config::po_analysis_results_po_status_IsValid(value)) {
            set_status(static_cast< ::analysis_config::po_analysis_results_po_status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ksteps = 3;
      case 3: {
        if (tag == 24u) {
          set_has_ksteps();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ksteps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float computation_time = 4;
      case 4: {
        if (tag == 37u) {
          set_has_computation_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &computation_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 nb_paths = 5;
      case 5: {
        if (tag == 40u) {
          set_has_nb_paths();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nb_paths_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 alive_branch = 6;
      case 6: {
        if (tag == 48u) {
          set_has_alive_branch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &alive_branch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string formula = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_formula()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->formula().data(), this->formula().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "analysis_config.po_analysis_results.po_data.formula");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analysis_config.po_analysis_results.po_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analysis_config.po_analysis_results.po_data)
  return false;
#undef DO_
}

void po_analysis_results_po_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analysis_config.po_analysis_results.po_data)
  // required uint64 jmp_addr = 1;
  if (has_jmp_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->jmp_addr(), output);
  }

  // required .analysis_config.po_analysis_results.po_status status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // required uint32 ksteps = 3;
  if (has_ksteps()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ksteps(), output);
  }

  // required float computation_time = 4;
  if (has_computation_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->computation_time(), output);
  }

  // optional uint32 nb_paths = 5;
  if (has_nb_paths()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->nb_paths(), output);
  }

  // optional uint64 alive_branch = 6;
  if (has_alive_branch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->alive_branch(), output);
  }

  // optional string formula = 7;
  if (has_formula()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formula().data(), this->formula().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "analysis_config.po_analysis_results.po_data.formula");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->formula(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:analysis_config.po_analysis_results.po_data)
}

::google::protobuf::uint8* po_analysis_results_po_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:analysis_config.po_analysis_results.po_data)
  // required uint64 jmp_addr = 1;
  if (has_jmp_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->jmp_addr(), target);
  }

  // required .analysis_config.po_analysis_results.po_status status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // required uint32 ksteps = 3;
  if (has_ksteps()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ksteps(), target);
  }

  // required float computation_time = 4;
  if (has_computation_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->computation_time(), target);
  }

  // optional uint32 nb_paths = 5;
  if (has_nb_paths()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->nb_paths(), target);
  }

  // optional uint64 alive_branch = 6;
  if (has_alive_branch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->alive_branch(), target);
  }

  // optional string formula = 7;
  if (has_formula()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formula().data(), this->formula().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "analysis_config.po_analysis_results.po_data.formula");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->formula(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:analysis_config.po_analysis_results.po_data)
  return target;
}

size_t po_analysis_results_po_data::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:analysis_config.po_analysis_results.po_data)
  size_t total_size = 0;

  if (has_jmp_addr()) {
    // required uint64 jmp_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->jmp_addr());
  }

  if (has_ksteps()) {
    // required uint32 ksteps = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ksteps());
  }

  if (has_computation_time()) {
    // required float computation_time = 4;
    total_size += 1 + 4;
  }

  if (has_status()) {
    // required .analysis_config.po_analysis_results.po_status status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  return total_size;
}
size_t po_analysis_results_po_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:analysis_config.po_analysis_results.po_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000004e) ^ 0x0000004e) == 0) {  // All required fields are present.
    // required uint64 jmp_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->jmp_addr());

    // required uint32 ksteps = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ksteps());

    // required float computation_time = 4;
    total_size += 1 + 4;

    // required .analysis_config.po_analysis_results.po_status status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string formula = 7;
  if (has_formula()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->formula());
  }

  if (_has_bits_[0 / 32] & 48u) {
    // optional uint64 alive_branch = 6;
    if (has_alive_branch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->alive_branch());
    }

    // optional uint32 nb_paths = 5;
    if (has_nb_paths()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nb_paths());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void po_analysis_results_po_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analysis_config.po_analysis_results.po_data)
  GOOGLE_DCHECK_NE(&from, this);
  const po_analysis_results_po_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const po_analysis_results_po_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analysis_config.po_analysis_results.po_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analysis_config.po_analysis_results.po_data)
    MergeFrom(*source);
  }
}

void po_analysis_results_po_data::MergeFrom(const po_analysis_results_po_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analysis_config.po_analysis_results.po_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 127u) {
    if (from.has_formula()) {
      set_has_formula();
      formula_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formula_);
    }
    if (from.has_jmp_addr()) {
      set_jmp_addr(from.jmp_addr());
    }
    if (from.has_ksteps()) {
      set_ksteps(from.ksteps());
    }
    if (from.has_computation_time()) {
      set_computation_time(from.computation_time());
    }
    if (from.has_alive_branch()) {
      set_alive_branch(from.alive_branch());
    }
    if (from.has_nb_paths()) {
      set_nb_paths(from.nb_paths());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
}

void po_analysis_results_po_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analysis_config.po_analysis_results.po_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void po_analysis_results_po_data::CopyFrom(const po_analysis_results_po_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analysis_config.po_analysis_results.po_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool po_analysis_results_po_data::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000004e) != 0x0000004e) return false;
  return true;
}

void po_analysis_results_po_data::Swap(po_analysis_results_po_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void po_analysis_results_po_data::InternalSwap(po_analysis_results_po_data* other) {
  formula_.Swap(&other->formula_);
  std::swap(jmp_addr_, other->jmp_addr_);
  std::swap(ksteps_, other->ksteps_);
  std::swap(computation_time_, other->computation_time_);
  std::swap(alive_branch_, other->alive_branch_);
  std::swap(nb_paths_, other->nb_paths_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata po_analysis_results_po_data::GetMetadata() const {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// po_analysis_results_po_data

// required uint64 jmp_addr = 1;
bool po_analysis_results_po_data::has_jmp_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void po_analysis_results_po_data::set_has_jmp_addr() {
  _has_bits_[0] |= 0x00000002u;
}
void po_analysis_results_po_data::clear_has_jmp_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
void po_analysis_results_po_data::clear_jmp_addr() {
  jmp_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_jmp_addr();
}
::google::protobuf::uint64 po_analysis_results_po_data::jmp_addr() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.jmp_addr)
  return jmp_addr_;
}
void po_analysis_results_po_data::set_jmp_addr(::google::protobuf::uint64 value) {
  set_has_jmp_addr();
  jmp_addr_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.jmp_addr)
}

// required .analysis_config.po_analysis_results.po_status status = 2;
bool po_analysis_results_po_data::has_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void po_analysis_results_po_data::set_has_status() {
  _has_bits_[0] |= 0x00000040u;
}
void po_analysis_results_po_data::clear_has_status() {
  _has_bits_[0] &= ~0x00000040u;
}
void po_analysis_results_po_data::clear_status() {
  status_ = 1;
  clear_has_status();
}
::analysis_config::po_analysis_results_po_status po_analysis_results_po_data::status() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.status)
  return static_cast< ::analysis_config::po_analysis_results_po_status >(status_);
}
void po_analysis_results_po_data::set_status(::analysis_config::po_analysis_results_po_status value) {
  assert(::analysis_config::po_analysis_results_po_status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.status)
}

// required uint32 ksteps = 3;
bool po_analysis_results_po_data::has_ksteps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void po_analysis_results_po_data::set_has_ksteps() {
  _has_bits_[0] |= 0x00000004u;
}
void po_analysis_results_po_data::clear_has_ksteps() {
  _has_bits_[0] &= ~0x00000004u;
}
void po_analysis_results_po_data::clear_ksteps() {
  ksteps_ = 0u;
  clear_has_ksteps();
}
::google::protobuf::uint32 po_analysis_results_po_data::ksteps() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.ksteps)
  return ksteps_;
}
void po_analysis_results_po_data::set_ksteps(::google::protobuf::uint32 value) {
  set_has_ksteps();
  ksteps_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.ksteps)
}

// required float computation_time = 4;
bool po_analysis_results_po_data::has_computation_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void po_analysis_results_po_data::set_has_computation_time() {
  _has_bits_[0] |= 0x00000008u;
}
void po_analysis_results_po_data::clear_has_computation_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void po_analysis_results_po_data::clear_computation_time() {
  computation_time_ = 0;
  clear_has_computation_time();
}
float po_analysis_results_po_data::computation_time() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.computation_time)
  return computation_time_;
}
void po_analysis_results_po_data::set_computation_time(float value) {
  set_has_computation_time();
  computation_time_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.computation_time)
}

// optional uint32 nb_paths = 5;
bool po_analysis_results_po_data::has_nb_paths() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void po_analysis_results_po_data::set_has_nb_paths() {
  _has_bits_[0] |= 0x00000020u;
}
void po_analysis_results_po_data::clear_has_nb_paths() {
  _has_bits_[0] &= ~0x00000020u;
}
void po_analysis_results_po_data::clear_nb_paths() {
  nb_paths_ = 0u;
  clear_has_nb_paths();
}
::google::protobuf::uint32 po_analysis_results_po_data::nb_paths() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.nb_paths)
  return nb_paths_;
}
void po_analysis_results_po_data::set_nb_paths(::google::protobuf::uint32 value) {
  set_has_nb_paths();
  nb_paths_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.nb_paths)
}

// optional uint64 alive_branch = 6;
bool po_analysis_results_po_data::has_alive_branch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void po_analysis_results_po_data::set_has_alive_branch() {
  _has_bits_[0] |= 0x00000010u;
}
void po_analysis_results_po_data::clear_has_alive_branch() {
  _has_bits_[0] &= ~0x00000010u;
}
void po_analysis_results_po_data::clear_alive_branch() {
  alive_branch_ = GOOGLE_ULONGLONG(0);
  clear_has_alive_branch();
}
::google::protobuf::uint64 po_analysis_results_po_data::alive_branch() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.alive_branch)
  return alive_branch_;
}
void po_analysis_results_po_data::set_alive_branch(::google::protobuf::uint64 value) {
  set_has_alive_branch();
  alive_branch_ = value;
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.alive_branch)
}

// optional string formula = 7;
bool po_analysis_results_po_data::has_formula() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void po_analysis_results_po_data::set_has_formula() {
  _has_bits_[0] |= 0x00000001u;
}
void po_analysis_results_po_data::clear_has_formula() {
  _has_bits_[0] &= ~0x00000001u;
}
void po_analysis_results_po_data::clear_formula() {
  formula_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_formula();
}
const ::std::string& po_analysis_results_po_data::formula() const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.po_data.formula)
  return formula_.GetNoArena();
}
void po_analysis_results_po_data::set_formula(const ::std::string& value) {
  set_has_formula();
  formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analysis_config.po_analysis_results.po_data.formula)
}
#if LANG_CXX11
void po_analysis_results_po_data::set_formula(::std::string&& value) {
  set_has_formula();
  formula_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:analysis_config.po_analysis_results.po_data.formula)
}
#endif
void po_analysis_results_po_data::set_formula(const char* value) {
  set_has_formula();
  formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analysis_config.po_analysis_results.po_data.formula)
}
void po_analysis_results_po_data::set_formula(const char* value, size_t size) {
  set_has_formula();
  formula_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analysis_config.po_analysis_results.po_data.formula)
}
::std::string* po_analysis_results_po_data::mutable_formula() {
  set_has_formula();
  // @@protoc_insertion_point(field_mutable:analysis_config.po_analysis_results.po_data.formula)
  return formula_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* po_analysis_results_po_data::release_formula() {
  // @@protoc_insertion_point(field_release:analysis_config.po_analysis_results.po_data.formula)
  clear_has_formula();
  return formula_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void po_analysis_results_po_data::set_allocated_formula(::std::string* formula) {
  if (formula != NULL) {
    set_has_formula();
  } else {
    clear_has_formula();
  }
  formula_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), formula);
  // @@protoc_insertion_point(field_set_allocated:analysis_config.po_analysis_results.po_data.formula)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int po_analysis_results::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

po_analysis_results::po_analysis_results()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_analysis_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:analysis_config.po_analysis_results)
}
po_analysis_results::po_analysis_results(const po_analysis_results& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:analysis_config.po_analysis_results)
}

void po_analysis_results::SharedCtor() {
  _cached_size_ = 0;
}

po_analysis_results::~po_analysis_results() {
  // @@protoc_insertion_point(destructor:analysis_config.po_analysis_results)
  SharedDtor();
}

void po_analysis_results::SharedDtor() {
}

void po_analysis_results::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* po_analysis_results::descriptor() {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[8].descriptor;
}

const po_analysis_results& po_analysis_results::default_instance() {
  protobuf_analysis_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

po_analysis_results* po_analysis_results::New(::google::protobuf::Arena* arena) const {
  po_analysis_results* n = new po_analysis_results;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void po_analysis_results::Clear() {
// @@protoc_insertion_point(message_clear_start:analysis_config.po_analysis_results)
  values_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool po_analysis_results::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analysis_config.po_analysis_results)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .analysis_config.po_analysis_results.po_data values = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analysis_config.po_analysis_results)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analysis_config.po_analysis_results)
  return false;
#undef DO_
}

void po_analysis_results::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analysis_config.po_analysis_results)
  // repeated .analysis_config.po_analysis_results.po_data values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:analysis_config.po_analysis_results)
}

::google::protobuf::uint8* po_analysis_results::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:analysis_config.po_analysis_results)
  // repeated .analysis_config.po_analysis_results.po_data values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->values(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:analysis_config.po_analysis_results)
  return target;
}

size_t po_analysis_results::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:analysis_config.po_analysis_results)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .analysis_config.po_analysis_results.po_data values = 1;
  {
    unsigned int count = this->values_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->values(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void po_analysis_results::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analysis_config.po_analysis_results)
  GOOGLE_DCHECK_NE(&from, this);
  const po_analysis_results* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const po_analysis_results>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analysis_config.po_analysis_results)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analysis_config.po_analysis_results)
    MergeFrom(*source);
  }
}

void po_analysis_results::MergeFrom(const po_analysis_results& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analysis_config.po_analysis_results)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
}

void po_analysis_results::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analysis_config.po_analysis_results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void po_analysis_results::CopyFrom(const po_analysis_results& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analysis_config.po_analysis_results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool po_analysis_results::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->values())) return false;
  return true;
}

void po_analysis_results::Swap(po_analysis_results* other) {
  if (other == this) return;
  InternalSwap(other);
}
void po_analysis_results::InternalSwap(po_analysis_results* other) {
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata po_analysis_results::GetMetadata() const {
  protobuf_analysis_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_analysis_5fconfig_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// po_analysis_results

// repeated .analysis_config.po_analysis_results.po_data values = 1;
int po_analysis_results::values_size() const {
  return values_.size();
}
void po_analysis_results::clear_values() {
  values_.Clear();
}
const ::analysis_config::po_analysis_results_po_data& po_analysis_results::values(int index) const {
  // @@protoc_insertion_point(field_get:analysis_config.po_analysis_results.values)
  return values_.Get(index);
}
::analysis_config::po_analysis_results_po_data* po_analysis_results::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:analysis_config.po_analysis_results.values)
  return values_.Mutable(index);
}
::analysis_config::po_analysis_results_po_data* po_analysis_results::add_values() {
  // @@protoc_insertion_point(field_add:analysis_config.po_analysis_results.values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::analysis_config::po_analysis_results_po_data >*
po_analysis_results::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:analysis_config.po_analysis_results.values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::analysis_config::po_analysis_results_po_data >&
po_analysis_results::values() const {
  // @@protoc_insertion_point(field_list:analysis_config.po_analysis_results.values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace analysis_config

// @@protoc_insertion_point(global_scope)
