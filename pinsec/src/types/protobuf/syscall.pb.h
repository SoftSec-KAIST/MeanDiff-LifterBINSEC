// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: syscall.proto

#ifndef PROTOBUF_syscall_2eproto__INCLUDED
#define PROTOBUF_syscall_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
namespace common {
class indirect_register_t;
class indirect_register_tDefaultTypeInternal;
extern indirect_register_tDefaultTypeInternal _indirect_register_t_default_instance_;
class memory_pol;
class memory_polDefaultTypeInternal;
extern memory_polDefaultTypeInternal _memory_pol_default_instance_;
class memory_t;
class memory_tDefaultTypeInternal;
extern memory_tDefaultTypeInternal _memory_t_default_instance_;
class register_t;
class register_tDefaultTypeInternal;
extern register_tDefaultTypeInternal _register_t_default_instance_;
class register_value_t;
class register_value_tDefaultTypeInternal;
extern register_value_tDefaultTypeInternal _register_value_t_default_instance_;
}  // namespace common
namespace syscall_types {
class nr_open_t;
class nr_open_tDefaultTypeInternal;
extern nr_open_tDefaultTypeInternal _nr_open_t_default_instance_;
class nr_read_pol;
class nr_read_polDefaultTypeInternal;
extern nr_read_polDefaultTypeInternal _nr_read_pol_default_instance_;
class nr_read_t;
class nr_read_tDefaultTypeInternal;
extern nr_read_tDefaultTypeInternal _nr_read_t_default_instance_;
class nr_write_t;
class nr_write_tDefaultTypeInternal;
extern nr_write_tDefaultTypeInternal _nr_write_t_default_instance_;
class sys_generic_t;
class sys_generic_tDefaultTypeInternal;
extern sys_generic_tDefaultTypeInternal _sys_generic_t_default_instance_;
class syscall_pol;
class syscall_polDefaultTypeInternal;
extern syscall_polDefaultTypeInternal _syscall_pol_default_instance_;
class syscall_t;
class syscall_tDefaultTypeInternal;
extern syscall_tDefaultTypeInternal _syscall_t_default_instance_;
}  // namespace syscall_types

namespace syscall_types {

namespace protobuf_syscall_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_syscall_2eproto

enum syscall_ident {
  NR_READ = 0,
  NR_WRITE = 1,
  NR_OPEN = 2,
  GENERIC = 3
};
bool syscall_ident_IsValid(int value);
const syscall_ident syscall_ident_MIN = NR_READ;
const syscall_ident syscall_ident_MAX = GENERIC;
const int syscall_ident_ARRAYSIZE = syscall_ident_MAX + 1;

const ::google::protobuf::EnumDescriptor* syscall_ident_descriptor();
inline const ::std::string& syscall_ident_Name(syscall_ident value) {
  return ::google::protobuf::internal::NameOfEnum(
    syscall_ident_descriptor(), value);
}
inline bool syscall_ident_Parse(
    const ::std::string& name, syscall_ident* value) {
  return ::google::protobuf::internal::ParseNamedEnum<syscall_ident>(
    syscall_ident_descriptor(), name, value);
}
// ===================================================================

class syscall_pol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:syscall_types.syscall_pol) */ {
 public:
  syscall_pol();
  virtual ~syscall_pol();

  syscall_pol(const syscall_pol& from);

  inline syscall_pol& operator=(const syscall_pol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const syscall_pol& default_instance();

  enum SyscallPolCntCase {
    kNrRead = 6,
    SYSCALL_POL_CNT_NOT_SET = 0,
  };

  static inline const syscall_pol* internal_default_instance() {
    return reinterpret_cast<const syscall_pol*>(
               &_syscall_pol_default_instance_);
  }

  void Swap(syscall_pol* other);

  // implements Message ----------------------------------------------

  inline syscall_pol* New() const PROTOBUF_FINAL { return New(NULL); }

  syscall_pol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const syscall_pol& from);
  void MergeFrom(const syscall_pol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(syscall_pol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 restrict_addresses = 5;
  int restrict_addresses_size() const;
  void clear_restrict_addresses();
  static const int kRestrictAddressesFieldNumber = 5;
  ::google::protobuf::uint64 restrict_addresses(int index) const;
  void set_restrict_addresses(int index, ::google::protobuf::uint64 value);
  void add_restrict_addresses(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      restrict_addresses() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_restrict_addresses();

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required .syscall_types.syscall_ident ident = 3;
  bool has_ident() const;
  void clear_ident();
  static const int kIdentFieldNumber = 3;
  ::syscall_types::syscall_ident ident() const;
  void set_ident(::syscall_types::syscall_ident value);

  // required .common.tracing_action action = 4;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 4;
  ::common::tracing_action action() const;
  void set_action(::common::tracing_action value);

  // optional .syscall_types.nr_read_pol nr_read = 6;
  bool has_nr_read() const;
  void clear_nr_read();
  static const int kNrReadFieldNumber = 6;
  const ::syscall_types::nr_read_pol& nr_read() const;
  ::syscall_types::nr_read_pol* mutable_nr_read();
  ::syscall_types::nr_read_pol* release_nr_read();
  void set_allocated_nr_read(::syscall_types::nr_read_pol* nr_read);

  SyscallPolCntCase syscall_pol_cnt_case() const;
  // @@protoc_insertion_point(class_scope:syscall_types.syscall_pol)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_ident();
  void clear_has_ident();
  void set_has_action();
  void clear_has_action();
  void set_has_nr_read();

  inline bool has_syscall_pol_cnt() const;
  void clear_syscall_pol_cnt();
  inline void clear_has_syscall_pol_cnt();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > restrict_addresses_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 id_;
  int ident_;
  int action_;
  union SyscallPolCntUnion {
    SyscallPolCntUnion() {}
    ::syscall_types::nr_read_pol* nr_read_;
  } syscall_pol_cnt_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_syscall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class syscall_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:syscall_types.syscall_t) */ {
 public:
  syscall_t();
  virtual ~syscall_t();

  syscall_t(const syscall_t& from);

  inline syscall_t& operator=(const syscall_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const syscall_t& default_instance();

  enum SyscallTCntCase {
    kOpenSyscall = 3,
    kReadSyscall = 4,
    kWriteSycall = 5,
    kGenericSycall = 6,
    SYSCALL_T_CNT_NOT_SET = 0,
  };

  static inline const syscall_t* internal_default_instance() {
    return reinterpret_cast<const syscall_t*>(
               &_syscall_t_default_instance_);
  }

  void Swap(syscall_t* other);

  // implements Message ----------------------------------------------

  inline syscall_t* New() const PROTOBUF_FINAL { return New(NULL); }

  syscall_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const syscall_t& from);
  void MergeFrom(const syscall_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(syscall_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required .syscall_types.syscall_ident ident = 2;
  bool has_ident() const;
  void clear_ident();
  static const int kIdentFieldNumber = 2;
  ::syscall_types::syscall_ident ident() const;
  void set_ident(::syscall_types::syscall_ident value);

  // optional .syscall_types.nr_open_t open_syscall = 3;
  bool has_open_syscall() const;
  void clear_open_syscall();
  static const int kOpenSyscallFieldNumber = 3;
  const ::syscall_types::nr_open_t& open_syscall() const;
  ::syscall_types::nr_open_t* mutable_open_syscall();
  ::syscall_types::nr_open_t* release_open_syscall();
  void set_allocated_open_syscall(::syscall_types::nr_open_t* open_syscall);

  // optional .syscall_types.nr_read_t read_syscall = 4;
  bool has_read_syscall() const;
  void clear_read_syscall();
  static const int kReadSyscallFieldNumber = 4;
  const ::syscall_types::nr_read_t& read_syscall() const;
  ::syscall_types::nr_read_t* mutable_read_syscall();
  ::syscall_types::nr_read_t* release_read_syscall();
  void set_allocated_read_syscall(::syscall_types::nr_read_t* read_syscall);

  // optional .syscall_types.nr_write_t write_sycall = 5;
  bool has_write_sycall() const;
  void clear_write_sycall();
  static const int kWriteSycallFieldNumber = 5;
  const ::syscall_types::nr_write_t& write_sycall() const;
  ::syscall_types::nr_write_t* mutable_write_sycall();
  ::syscall_types::nr_write_t* release_write_sycall();
  void set_allocated_write_sycall(::syscall_types::nr_write_t* write_sycall);

  // optional .syscall_types.sys_generic_t generic_sycall = 6;
  bool has_generic_sycall() const;
  void clear_generic_sycall();
  static const int kGenericSycallFieldNumber = 6;
  const ::syscall_types::sys_generic_t& generic_sycall() const;
  ::syscall_types::sys_generic_t* mutable_generic_sycall();
  ::syscall_types::sys_generic_t* release_generic_sycall();
  void set_allocated_generic_sycall(::syscall_types::sys_generic_t* generic_sycall);

  SyscallTCntCase syscall_t_cnt_case() const;
  // @@protoc_insertion_point(class_scope:syscall_types.syscall_t)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_ident();
  void clear_has_ident();
  void set_has_open_syscall();
  void set_has_read_syscall();
  void set_has_write_sycall();
  void set_has_generic_sycall();

  inline bool has_syscall_t_cnt() const;
  void clear_syscall_t_cnt();
  inline void clear_has_syscall_t_cnt();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int ident_;
  union SyscallTCntUnion {
    SyscallTCntUnion() {}
    ::syscall_types::nr_open_t* open_syscall_;
    ::syscall_types::nr_read_t* read_syscall_;
    ::syscall_types::nr_write_t* write_sycall_;
    ::syscall_types::sys_generic_t* generic_sycall_;
  } syscall_t_cnt_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_syscall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class nr_read_pol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:syscall_types.nr_read_pol) */ {
 public:
  nr_read_pol();
  virtual ~nr_read_pol();

  nr_read_pol(const nr_read_pol& from);

  inline nr_read_pol& operator=(const nr_read_pol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const nr_read_pol& default_instance();

  static inline const nr_read_pol* internal_default_instance() {
    return reinterpret_cast<const nr_read_pol*>(
               &_nr_read_pol_default_instance_);
  }

  void Swap(nr_read_pol* other);

  // implements Message ----------------------------------------------

  inline nr_read_pol* New() const PROTOBUF_FINAL { return New(NULL); }

  nr_read_pol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const nr_read_pol& from);
  void MergeFrom(const nr_read_pol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(nr_read_pol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:syscall_types.nr_read_pol)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct  protobuf_syscall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class nr_open_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:syscall_types.nr_open_t) */ {
 public:
  nr_open_t();
  virtual ~nr_open_t();

  nr_open_t(const nr_open_t& from);

  inline nr_open_t& operator=(const nr_open_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const nr_open_t& default_instance();

  static inline const nr_open_t* internal_default_instance() {
    return reinterpret_cast<const nr_open_t*>(
               &_nr_open_t_default_instance_);
  }

  void Swap(nr_open_t* other);

  // implements Message ----------------------------------------------

  inline nr_open_t* New() const PROTOBUF_FINAL { return New(NULL); }

  nr_open_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const nr_open_t& from);
  void MergeFrom(const nr_open_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(nr_open_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string file_name = 1;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // required sint32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // required uint32 mode = 3;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::google::protobuf::uint32 mode() const;
  void set_mode(::google::protobuf::uint32 value);

  // required int32 file_descriptor = 4;
  bool has_file_descriptor() const;
  void clear_file_descriptor();
  static const int kFileDescriptorFieldNumber = 4;
  ::google::protobuf::int32 file_descriptor() const;
  void set_file_descriptor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:syscall_types.nr_open_t)
 private:
  void set_has_file_name();
  void clear_has_file_name();
  void set_has_flags();
  void clear_has_flags();
  void set_has_mode();
  void clear_has_mode();
  void set_has_file_descriptor();
  void clear_has_file_descriptor();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::uint32 mode_;
  ::google::protobuf::int32 file_descriptor_;
  friend struct  protobuf_syscall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class nr_read_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:syscall_types.nr_read_t) */ {
 public:
  nr_read_t();
  virtual ~nr_read_t();

  nr_read_t(const nr_read_t& from);

  inline nr_read_t& operator=(const nr_read_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const nr_read_t& default_instance();

  static inline const nr_read_t* internal_default_instance() {
    return reinterpret_cast<const nr_read_t*>(
               &_nr_read_t_default_instance_);
  }

  void Swap(nr_read_t* other);

  // implements Message ----------------------------------------------

  inline nr_read_t* New() const PROTOBUF_FINAL { return New(NULL); }

  nr_read_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const nr_read_t& from);
  void MergeFrom(const nr_read_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(nr_read_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes buffer_data = 4;
  bool has_buffer_data() const;
  void clear_buffer_data();
  static const int kBufferDataFieldNumber = 4;
  const ::std::string& buffer_data() const;
  void set_buffer_data(const ::std::string& value);
  #if LANG_CXX11
  void set_buffer_data(::std::string&& value);
  #endif
  void set_buffer_data(const char* value);
  void set_buffer_data(const void* value, size_t size);
  ::std::string* mutable_buffer_data();
  ::std::string* release_buffer_data();
  void set_allocated_buffer_data(::std::string* buffer_data);

  // required uint64 buffer_address = 2;
  bool has_buffer_address() const;
  void clear_buffer_address();
  static const int kBufferAddressFieldNumber = 2;
  ::google::protobuf::uint64 buffer_address() const;
  void set_buffer_address(::google::protobuf::uint64 value);

  // required uint32 file_descriptor = 1;
  bool has_file_descriptor() const;
  void clear_file_descriptor();
  static const int kFileDescriptorFieldNumber = 1;
  ::google::protobuf::uint32 file_descriptor() const;
  void set_file_descriptor(::google::protobuf::uint32 value);

  // required uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // required uint32 count_effective = 5;
  bool has_count_effective() const;
  void clear_count_effective();
  static const int kCountEffectiveFieldNumber = 5;
  ::google::protobuf::uint32 count_effective() const;
  void set_count_effective(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:syscall_types.nr_read_t)
 private:
  void set_has_file_descriptor();
  void clear_has_file_descriptor();
  void set_has_buffer_address();
  void clear_has_buffer_address();
  void set_has_count();
  void clear_has_count();
  void set_has_buffer_data();
  void clear_has_buffer_data();
  void set_has_count_effective();
  void clear_has_count_effective();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buffer_data_;
  ::google::protobuf::uint64 buffer_address_;
  ::google::protobuf::uint32 file_descriptor_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_effective_;
  friend struct  protobuf_syscall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class nr_write_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:syscall_types.nr_write_t) */ {
 public:
  nr_write_t();
  virtual ~nr_write_t();

  nr_write_t(const nr_write_t& from);

  inline nr_write_t& operator=(const nr_write_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const nr_write_t& default_instance();

  static inline const nr_write_t* internal_default_instance() {
    return reinterpret_cast<const nr_write_t*>(
               &_nr_write_t_default_instance_);
  }

  void Swap(nr_write_t* other);

  // implements Message ----------------------------------------------

  inline nr_write_t* New() const PROTOBUF_FINAL { return New(NULL); }

  nr_write_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const nr_write_t& from);
  void MergeFrom(const nr_write_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(nr_write_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes buffer_data = 4;
  bool has_buffer_data() const;
  void clear_buffer_data();
  static const int kBufferDataFieldNumber = 4;
  const ::std::string& buffer_data() const;
  void set_buffer_data(const ::std::string& value);
  #if LANG_CXX11
  void set_buffer_data(::std::string&& value);
  #endif
  void set_buffer_data(const char* value);
  void set_buffer_data(const void* value, size_t size);
  ::std::string* mutable_buffer_data();
  ::std::string* release_buffer_data();
  void set_allocated_buffer_data(::std::string* buffer_data);

  // required uint64 buffer_address = 2;
  bool has_buffer_address() const;
  void clear_buffer_address();
  static const int kBufferAddressFieldNumber = 2;
  ::google::protobuf::uint64 buffer_address() const;
  void set_buffer_address(::google::protobuf::uint64 value);

  // required uint32 file_descriptor = 1;
  bool has_file_descriptor() const;
  void clear_file_descriptor();
  static const int kFileDescriptorFieldNumber = 1;
  ::google::protobuf::uint32 file_descriptor() const;
  void set_file_descriptor(::google::protobuf::uint32 value);

  // required uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // required uint32 count_effective = 5;
  bool has_count_effective() const;
  void clear_count_effective();
  static const int kCountEffectiveFieldNumber = 5;
  ::google::protobuf::uint32 count_effective() const;
  void set_count_effective(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:syscall_types.nr_write_t)
 private:
  void set_has_file_descriptor();
  void clear_has_file_descriptor();
  void set_has_buffer_address();
  void clear_has_buffer_address();
  void set_has_count();
  void clear_has_count();
  void set_has_buffer_data();
  void clear_has_buffer_data();
  void set_has_count_effective();
  void clear_has_count_effective();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buffer_data_;
  ::google::protobuf::uint64 buffer_address_;
  ::google::protobuf::uint32 file_descriptor_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_effective_;
  friend struct  protobuf_syscall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class sys_generic_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:syscall_types.sys_generic_t) */ {
 public:
  sys_generic_t();
  virtual ~sys_generic_t();

  sys_generic_t(const sys_generic_t& from);

  inline sys_generic_t& operator=(const sys_generic_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sys_generic_t& default_instance();

  static inline const sys_generic_t* internal_default_instance() {
    return reinterpret_cast<const sys_generic_t*>(
               &_sys_generic_t_default_instance_);
  }

  void Swap(sys_generic_t* other);

  // implements Message ----------------------------------------------

  inline sys_generic_t* New() const PROTOBUF_FINAL { return New(NULL); }

  sys_generic_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const sys_generic_t& from);
  void MergeFrom(const sys_generic_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(sys_generic_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint32 address = 2;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  ::google::protobuf::uint32 address() const;
  void set_address(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:syscall_types.sys_generic_t)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_address();
  void clear_has_address();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 address_;
  friend struct  protobuf_syscall_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// syscall_pol

// required uint32 id = 1;
inline bool syscall_pol::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void syscall_pol::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void syscall_pol::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void syscall_pol::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 syscall_pol::id() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_pol.id)
  return id_;
}
inline void syscall_pol::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.syscall_pol.id)
}

// required string name = 2;
inline bool syscall_pol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void syscall_pol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void syscall_pol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void syscall_pol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& syscall_pol::name() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_pol.name)
  return name_.GetNoArena();
}
inline void syscall_pol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:syscall_types.syscall_pol.name)
}
#if LANG_CXX11
inline void syscall_pol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:syscall_types.syscall_pol.name)
}
#endif
inline void syscall_pol::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:syscall_types.syscall_pol.name)
}
inline void syscall_pol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:syscall_types.syscall_pol.name)
}
inline ::std::string* syscall_pol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:syscall_types.syscall_pol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* syscall_pol::release_name() {
  // @@protoc_insertion_point(field_release:syscall_types.syscall_pol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void syscall_pol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:syscall_types.syscall_pol.name)
}

// required .syscall_types.syscall_ident ident = 3;
inline bool syscall_pol::has_ident() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void syscall_pol::set_has_ident() {
  _has_bits_[0] |= 0x00000004u;
}
inline void syscall_pol::clear_has_ident() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void syscall_pol::clear_ident() {
  ident_ = 0;
  clear_has_ident();
}
inline ::syscall_types::syscall_ident syscall_pol::ident() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_pol.ident)
  return static_cast< ::syscall_types::syscall_ident >(ident_);
}
inline void syscall_pol::set_ident(::syscall_types::syscall_ident value) {
  assert(::syscall_types::syscall_ident_IsValid(value));
  set_has_ident();
  ident_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.syscall_pol.ident)
}

// required .common.tracing_action action = 4;
inline bool syscall_pol::has_action() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void syscall_pol::set_has_action() {
  _has_bits_[0] |= 0x00000008u;
}
inline void syscall_pol::clear_has_action() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void syscall_pol::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::common::tracing_action syscall_pol::action() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_pol.action)
  return static_cast< ::common::tracing_action >(action_);
}
inline void syscall_pol::set_action(::common::tracing_action value) {
  assert(::common::tracing_action_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.syscall_pol.action)
}

// repeated uint64 restrict_addresses = 5;
inline int syscall_pol::restrict_addresses_size() const {
  return restrict_addresses_.size();
}
inline void syscall_pol::clear_restrict_addresses() {
  restrict_addresses_.Clear();
}
inline ::google::protobuf::uint64 syscall_pol::restrict_addresses(int index) const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_pol.restrict_addresses)
  return restrict_addresses_.Get(index);
}
inline void syscall_pol::set_restrict_addresses(int index, ::google::protobuf::uint64 value) {
  restrict_addresses_.Set(index, value);
  // @@protoc_insertion_point(field_set:syscall_types.syscall_pol.restrict_addresses)
}
inline void syscall_pol::add_restrict_addresses(::google::protobuf::uint64 value) {
  restrict_addresses_.Add(value);
  // @@protoc_insertion_point(field_add:syscall_types.syscall_pol.restrict_addresses)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
syscall_pol::restrict_addresses() const {
  // @@protoc_insertion_point(field_list:syscall_types.syscall_pol.restrict_addresses)
  return restrict_addresses_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
syscall_pol::mutable_restrict_addresses() {
  // @@protoc_insertion_point(field_mutable_list:syscall_types.syscall_pol.restrict_addresses)
  return &restrict_addresses_;
}

// optional .syscall_types.nr_read_pol nr_read = 6;
inline bool syscall_pol::has_nr_read() const {
  return syscall_pol_cnt_case() == kNrRead;
}
inline void syscall_pol::set_has_nr_read() {
  _oneof_case_[0] = kNrRead;
}
inline void syscall_pol::clear_nr_read() {
  if (has_nr_read()) {
    delete syscall_pol_cnt_.nr_read_;
    clear_has_syscall_pol_cnt();
  }
}
inline  const ::syscall_types::nr_read_pol& syscall_pol::nr_read() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_pol.nr_read)
  return has_nr_read()
      ? *syscall_pol_cnt_.nr_read_
      : ::syscall_types::nr_read_pol::default_instance();
}
inline ::syscall_types::nr_read_pol* syscall_pol::mutable_nr_read() {
  if (!has_nr_read()) {
    clear_syscall_pol_cnt();
    set_has_nr_read();
    syscall_pol_cnt_.nr_read_ = new ::syscall_types::nr_read_pol;
  }
  // @@protoc_insertion_point(field_mutable:syscall_types.syscall_pol.nr_read)
  return syscall_pol_cnt_.nr_read_;
}
inline ::syscall_types::nr_read_pol* syscall_pol::release_nr_read() {
  // @@protoc_insertion_point(field_release:syscall_types.syscall_pol.nr_read)
  if (has_nr_read()) {
    clear_has_syscall_pol_cnt();
    ::syscall_types::nr_read_pol* temp = syscall_pol_cnt_.nr_read_;
    syscall_pol_cnt_.nr_read_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void syscall_pol::set_allocated_nr_read(::syscall_types::nr_read_pol* nr_read) {
  clear_syscall_pol_cnt();
  if (nr_read) {
    set_has_nr_read();
    syscall_pol_cnt_.nr_read_ = nr_read;
  }
  // @@protoc_insertion_point(field_set_allocated:syscall_types.syscall_pol.nr_read)
}

inline bool syscall_pol::has_syscall_pol_cnt() const {
  return syscall_pol_cnt_case() != SYSCALL_POL_CNT_NOT_SET;
}
inline void syscall_pol::clear_has_syscall_pol_cnt() {
  _oneof_case_[0] = SYSCALL_POL_CNT_NOT_SET;
}
inline syscall_pol::SyscallPolCntCase syscall_pol::syscall_pol_cnt_case() const {
  return syscall_pol::SyscallPolCntCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// syscall_t

// required uint32 id = 1;
inline bool syscall_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void syscall_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void syscall_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void syscall_t::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 syscall_t::id() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_t.id)
  return id_;
}
inline void syscall_t::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.syscall_t.id)
}

// required .syscall_types.syscall_ident ident = 2;
inline bool syscall_t::has_ident() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void syscall_t::set_has_ident() {
  _has_bits_[0] |= 0x00000002u;
}
inline void syscall_t::clear_has_ident() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void syscall_t::clear_ident() {
  ident_ = 0;
  clear_has_ident();
}
inline ::syscall_types::syscall_ident syscall_t::ident() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_t.ident)
  return static_cast< ::syscall_types::syscall_ident >(ident_);
}
inline void syscall_t::set_ident(::syscall_types::syscall_ident value) {
  assert(::syscall_types::syscall_ident_IsValid(value));
  set_has_ident();
  ident_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.syscall_t.ident)
}

// optional .syscall_types.nr_open_t open_syscall = 3;
inline bool syscall_t::has_open_syscall() const {
  return syscall_t_cnt_case() == kOpenSyscall;
}
inline void syscall_t::set_has_open_syscall() {
  _oneof_case_[0] = kOpenSyscall;
}
inline void syscall_t::clear_open_syscall() {
  if (has_open_syscall()) {
    delete syscall_t_cnt_.open_syscall_;
    clear_has_syscall_t_cnt();
  }
}
inline  const ::syscall_types::nr_open_t& syscall_t::open_syscall() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_t.open_syscall)
  return has_open_syscall()
      ? *syscall_t_cnt_.open_syscall_
      : ::syscall_types::nr_open_t::default_instance();
}
inline ::syscall_types::nr_open_t* syscall_t::mutable_open_syscall() {
  if (!has_open_syscall()) {
    clear_syscall_t_cnt();
    set_has_open_syscall();
    syscall_t_cnt_.open_syscall_ = new ::syscall_types::nr_open_t;
  }
  // @@protoc_insertion_point(field_mutable:syscall_types.syscall_t.open_syscall)
  return syscall_t_cnt_.open_syscall_;
}
inline ::syscall_types::nr_open_t* syscall_t::release_open_syscall() {
  // @@protoc_insertion_point(field_release:syscall_types.syscall_t.open_syscall)
  if (has_open_syscall()) {
    clear_has_syscall_t_cnt();
    ::syscall_types::nr_open_t* temp = syscall_t_cnt_.open_syscall_;
    syscall_t_cnt_.open_syscall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void syscall_t::set_allocated_open_syscall(::syscall_types::nr_open_t* open_syscall) {
  clear_syscall_t_cnt();
  if (open_syscall) {
    set_has_open_syscall();
    syscall_t_cnt_.open_syscall_ = open_syscall;
  }
  // @@protoc_insertion_point(field_set_allocated:syscall_types.syscall_t.open_syscall)
}

// optional .syscall_types.nr_read_t read_syscall = 4;
inline bool syscall_t::has_read_syscall() const {
  return syscall_t_cnt_case() == kReadSyscall;
}
inline void syscall_t::set_has_read_syscall() {
  _oneof_case_[0] = kReadSyscall;
}
inline void syscall_t::clear_read_syscall() {
  if (has_read_syscall()) {
    delete syscall_t_cnt_.read_syscall_;
    clear_has_syscall_t_cnt();
  }
}
inline  const ::syscall_types::nr_read_t& syscall_t::read_syscall() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_t.read_syscall)
  return has_read_syscall()
      ? *syscall_t_cnt_.read_syscall_
      : ::syscall_types::nr_read_t::default_instance();
}
inline ::syscall_types::nr_read_t* syscall_t::mutable_read_syscall() {
  if (!has_read_syscall()) {
    clear_syscall_t_cnt();
    set_has_read_syscall();
    syscall_t_cnt_.read_syscall_ = new ::syscall_types::nr_read_t;
  }
  // @@protoc_insertion_point(field_mutable:syscall_types.syscall_t.read_syscall)
  return syscall_t_cnt_.read_syscall_;
}
inline ::syscall_types::nr_read_t* syscall_t::release_read_syscall() {
  // @@protoc_insertion_point(field_release:syscall_types.syscall_t.read_syscall)
  if (has_read_syscall()) {
    clear_has_syscall_t_cnt();
    ::syscall_types::nr_read_t* temp = syscall_t_cnt_.read_syscall_;
    syscall_t_cnt_.read_syscall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void syscall_t::set_allocated_read_syscall(::syscall_types::nr_read_t* read_syscall) {
  clear_syscall_t_cnt();
  if (read_syscall) {
    set_has_read_syscall();
    syscall_t_cnt_.read_syscall_ = read_syscall;
  }
  // @@protoc_insertion_point(field_set_allocated:syscall_types.syscall_t.read_syscall)
}

// optional .syscall_types.nr_write_t write_sycall = 5;
inline bool syscall_t::has_write_sycall() const {
  return syscall_t_cnt_case() == kWriteSycall;
}
inline void syscall_t::set_has_write_sycall() {
  _oneof_case_[0] = kWriteSycall;
}
inline void syscall_t::clear_write_sycall() {
  if (has_write_sycall()) {
    delete syscall_t_cnt_.write_sycall_;
    clear_has_syscall_t_cnt();
  }
}
inline  const ::syscall_types::nr_write_t& syscall_t::write_sycall() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_t.write_sycall)
  return has_write_sycall()
      ? *syscall_t_cnt_.write_sycall_
      : ::syscall_types::nr_write_t::default_instance();
}
inline ::syscall_types::nr_write_t* syscall_t::mutable_write_sycall() {
  if (!has_write_sycall()) {
    clear_syscall_t_cnt();
    set_has_write_sycall();
    syscall_t_cnt_.write_sycall_ = new ::syscall_types::nr_write_t;
  }
  // @@protoc_insertion_point(field_mutable:syscall_types.syscall_t.write_sycall)
  return syscall_t_cnt_.write_sycall_;
}
inline ::syscall_types::nr_write_t* syscall_t::release_write_sycall() {
  // @@protoc_insertion_point(field_release:syscall_types.syscall_t.write_sycall)
  if (has_write_sycall()) {
    clear_has_syscall_t_cnt();
    ::syscall_types::nr_write_t* temp = syscall_t_cnt_.write_sycall_;
    syscall_t_cnt_.write_sycall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void syscall_t::set_allocated_write_sycall(::syscall_types::nr_write_t* write_sycall) {
  clear_syscall_t_cnt();
  if (write_sycall) {
    set_has_write_sycall();
    syscall_t_cnt_.write_sycall_ = write_sycall;
  }
  // @@protoc_insertion_point(field_set_allocated:syscall_types.syscall_t.write_sycall)
}

// optional .syscall_types.sys_generic_t generic_sycall = 6;
inline bool syscall_t::has_generic_sycall() const {
  return syscall_t_cnt_case() == kGenericSycall;
}
inline void syscall_t::set_has_generic_sycall() {
  _oneof_case_[0] = kGenericSycall;
}
inline void syscall_t::clear_generic_sycall() {
  if (has_generic_sycall()) {
    delete syscall_t_cnt_.generic_sycall_;
    clear_has_syscall_t_cnt();
  }
}
inline  const ::syscall_types::sys_generic_t& syscall_t::generic_sycall() const {
  // @@protoc_insertion_point(field_get:syscall_types.syscall_t.generic_sycall)
  return has_generic_sycall()
      ? *syscall_t_cnt_.generic_sycall_
      : ::syscall_types::sys_generic_t::default_instance();
}
inline ::syscall_types::sys_generic_t* syscall_t::mutable_generic_sycall() {
  if (!has_generic_sycall()) {
    clear_syscall_t_cnt();
    set_has_generic_sycall();
    syscall_t_cnt_.generic_sycall_ = new ::syscall_types::sys_generic_t;
  }
  // @@protoc_insertion_point(field_mutable:syscall_types.syscall_t.generic_sycall)
  return syscall_t_cnt_.generic_sycall_;
}
inline ::syscall_types::sys_generic_t* syscall_t::release_generic_sycall() {
  // @@protoc_insertion_point(field_release:syscall_types.syscall_t.generic_sycall)
  if (has_generic_sycall()) {
    clear_has_syscall_t_cnt();
    ::syscall_types::sys_generic_t* temp = syscall_t_cnt_.generic_sycall_;
    syscall_t_cnt_.generic_sycall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void syscall_t::set_allocated_generic_sycall(::syscall_types::sys_generic_t* generic_sycall) {
  clear_syscall_t_cnt();
  if (generic_sycall) {
    set_has_generic_sycall();
    syscall_t_cnt_.generic_sycall_ = generic_sycall;
  }
  // @@protoc_insertion_point(field_set_allocated:syscall_types.syscall_t.generic_sycall)
}

inline bool syscall_t::has_syscall_t_cnt() const {
  return syscall_t_cnt_case() != SYSCALL_T_CNT_NOT_SET;
}
inline void syscall_t::clear_has_syscall_t_cnt() {
  _oneof_case_[0] = SYSCALL_T_CNT_NOT_SET;
}
inline syscall_t::SyscallTCntCase syscall_t::syscall_t_cnt_case() const {
  return syscall_t::SyscallTCntCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// nr_read_pol

// required string name = 1;
inline bool nr_read_pol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void nr_read_pol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void nr_read_pol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void nr_read_pol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& nr_read_pol::name() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_read_pol.name)
  return name_.GetNoArena();
}
inline void nr_read_pol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:syscall_types.nr_read_pol.name)
}
#if LANG_CXX11
inline void nr_read_pol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:syscall_types.nr_read_pol.name)
}
#endif
inline void nr_read_pol::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:syscall_types.nr_read_pol.name)
}
inline void nr_read_pol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:syscall_types.nr_read_pol.name)
}
inline ::std::string* nr_read_pol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:syscall_types.nr_read_pol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* nr_read_pol::release_name() {
  // @@protoc_insertion_point(field_release:syscall_types.nr_read_pol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void nr_read_pol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:syscall_types.nr_read_pol.name)
}

// -------------------------------------------------------------------

// nr_open_t

// required string file_name = 1;
inline bool nr_open_t::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void nr_open_t::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void nr_open_t::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void nr_open_t::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& nr_open_t::file_name() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_open_t.file_name)
  return file_name_.GetNoArena();
}
inline void nr_open_t::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:syscall_types.nr_open_t.file_name)
}
#if LANG_CXX11
inline void nr_open_t::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:syscall_types.nr_open_t.file_name)
}
#endif
inline void nr_open_t::set_file_name(const char* value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:syscall_types.nr_open_t.file_name)
}
inline void nr_open_t::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:syscall_types.nr_open_t.file_name)
}
inline ::std::string* nr_open_t::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:syscall_types.nr_open_t.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* nr_open_t::release_file_name() {
  // @@protoc_insertion_point(field_release:syscall_types.nr_open_t.file_name)
  clear_has_file_name();
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void nr_open_t::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:syscall_types.nr_open_t.file_name)
}

// required sint32 flags = 2;
inline bool nr_open_t::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void nr_open_t::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void nr_open_t::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void nr_open_t::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 nr_open_t::flags() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_open_t.flags)
  return flags_;
}
inline void nr_open_t::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_open_t.flags)
}

// required uint32 mode = 3;
inline bool nr_open_t::has_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void nr_open_t::set_has_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void nr_open_t::clear_has_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void nr_open_t::clear_mode() {
  mode_ = 0u;
  clear_has_mode();
}
inline ::google::protobuf::uint32 nr_open_t::mode() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_open_t.mode)
  return mode_;
}
inline void nr_open_t::set_mode(::google::protobuf::uint32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_open_t.mode)
}

// required int32 file_descriptor = 4;
inline bool nr_open_t::has_file_descriptor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void nr_open_t::set_has_file_descriptor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void nr_open_t::clear_has_file_descriptor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void nr_open_t::clear_file_descriptor() {
  file_descriptor_ = 0;
  clear_has_file_descriptor();
}
inline ::google::protobuf::int32 nr_open_t::file_descriptor() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_open_t.file_descriptor)
  return file_descriptor_;
}
inline void nr_open_t::set_file_descriptor(::google::protobuf::int32 value) {
  set_has_file_descriptor();
  file_descriptor_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_open_t.file_descriptor)
}

// -------------------------------------------------------------------

// nr_read_t

// required uint32 file_descriptor = 1;
inline bool nr_read_t::has_file_descriptor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void nr_read_t::set_has_file_descriptor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void nr_read_t::clear_has_file_descriptor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void nr_read_t::clear_file_descriptor() {
  file_descriptor_ = 0u;
  clear_has_file_descriptor();
}
inline ::google::protobuf::uint32 nr_read_t::file_descriptor() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_read_t.file_descriptor)
  return file_descriptor_;
}
inline void nr_read_t::set_file_descriptor(::google::protobuf::uint32 value) {
  set_has_file_descriptor();
  file_descriptor_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_read_t.file_descriptor)
}

// required uint64 buffer_address = 2;
inline bool nr_read_t::has_buffer_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void nr_read_t::set_has_buffer_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void nr_read_t::clear_has_buffer_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void nr_read_t::clear_buffer_address() {
  buffer_address_ = GOOGLE_ULONGLONG(0);
  clear_has_buffer_address();
}
inline ::google::protobuf::uint64 nr_read_t::buffer_address() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_read_t.buffer_address)
  return buffer_address_;
}
inline void nr_read_t::set_buffer_address(::google::protobuf::uint64 value) {
  set_has_buffer_address();
  buffer_address_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_read_t.buffer_address)
}

// required uint32 count = 3;
inline bool nr_read_t::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void nr_read_t::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void nr_read_t::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void nr_read_t::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 nr_read_t::count() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_read_t.count)
  return count_;
}
inline void nr_read_t::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_read_t.count)
}

// required bytes buffer_data = 4;
inline bool nr_read_t::has_buffer_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void nr_read_t::set_has_buffer_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void nr_read_t::clear_has_buffer_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void nr_read_t::clear_buffer_data() {
  buffer_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buffer_data();
}
inline const ::std::string& nr_read_t::buffer_data() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_read_t.buffer_data)
  return buffer_data_.GetNoArena();
}
inline void nr_read_t::set_buffer_data(const ::std::string& value) {
  set_has_buffer_data();
  buffer_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:syscall_types.nr_read_t.buffer_data)
}
#if LANG_CXX11
inline void nr_read_t::set_buffer_data(::std::string&& value) {
  set_has_buffer_data();
  buffer_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:syscall_types.nr_read_t.buffer_data)
}
#endif
inline void nr_read_t::set_buffer_data(const char* value) {
  set_has_buffer_data();
  buffer_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:syscall_types.nr_read_t.buffer_data)
}
inline void nr_read_t::set_buffer_data(const void* value, size_t size) {
  set_has_buffer_data();
  buffer_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:syscall_types.nr_read_t.buffer_data)
}
inline ::std::string* nr_read_t::mutable_buffer_data() {
  set_has_buffer_data();
  // @@protoc_insertion_point(field_mutable:syscall_types.nr_read_t.buffer_data)
  return buffer_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* nr_read_t::release_buffer_data() {
  // @@protoc_insertion_point(field_release:syscall_types.nr_read_t.buffer_data)
  clear_has_buffer_data();
  return buffer_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void nr_read_t::set_allocated_buffer_data(::std::string* buffer_data) {
  if (buffer_data != NULL) {
    set_has_buffer_data();
  } else {
    clear_has_buffer_data();
  }
  buffer_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer_data);
  // @@protoc_insertion_point(field_set_allocated:syscall_types.nr_read_t.buffer_data)
}

// required uint32 count_effective = 5;
inline bool nr_read_t::has_count_effective() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void nr_read_t::set_has_count_effective() {
  _has_bits_[0] |= 0x00000010u;
}
inline void nr_read_t::clear_has_count_effective() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void nr_read_t::clear_count_effective() {
  count_effective_ = 0u;
  clear_has_count_effective();
}
inline ::google::protobuf::uint32 nr_read_t::count_effective() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_read_t.count_effective)
  return count_effective_;
}
inline void nr_read_t::set_count_effective(::google::protobuf::uint32 value) {
  set_has_count_effective();
  count_effective_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_read_t.count_effective)
}

// -------------------------------------------------------------------

// nr_write_t

// required uint32 file_descriptor = 1;
inline bool nr_write_t::has_file_descriptor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void nr_write_t::set_has_file_descriptor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void nr_write_t::clear_has_file_descriptor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void nr_write_t::clear_file_descriptor() {
  file_descriptor_ = 0u;
  clear_has_file_descriptor();
}
inline ::google::protobuf::uint32 nr_write_t::file_descriptor() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_write_t.file_descriptor)
  return file_descriptor_;
}
inline void nr_write_t::set_file_descriptor(::google::protobuf::uint32 value) {
  set_has_file_descriptor();
  file_descriptor_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_write_t.file_descriptor)
}

// required uint64 buffer_address = 2;
inline bool nr_write_t::has_buffer_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void nr_write_t::set_has_buffer_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void nr_write_t::clear_has_buffer_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void nr_write_t::clear_buffer_address() {
  buffer_address_ = GOOGLE_ULONGLONG(0);
  clear_has_buffer_address();
}
inline ::google::protobuf::uint64 nr_write_t::buffer_address() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_write_t.buffer_address)
  return buffer_address_;
}
inline void nr_write_t::set_buffer_address(::google::protobuf::uint64 value) {
  set_has_buffer_address();
  buffer_address_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_write_t.buffer_address)
}

// required uint32 count = 3;
inline bool nr_write_t::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void nr_write_t::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void nr_write_t::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void nr_write_t::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 nr_write_t::count() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_write_t.count)
  return count_;
}
inline void nr_write_t::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_write_t.count)
}

// required bytes buffer_data = 4;
inline bool nr_write_t::has_buffer_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void nr_write_t::set_has_buffer_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void nr_write_t::clear_has_buffer_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void nr_write_t::clear_buffer_data() {
  buffer_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buffer_data();
}
inline const ::std::string& nr_write_t::buffer_data() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_write_t.buffer_data)
  return buffer_data_.GetNoArena();
}
inline void nr_write_t::set_buffer_data(const ::std::string& value) {
  set_has_buffer_data();
  buffer_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:syscall_types.nr_write_t.buffer_data)
}
#if LANG_CXX11
inline void nr_write_t::set_buffer_data(::std::string&& value) {
  set_has_buffer_data();
  buffer_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:syscall_types.nr_write_t.buffer_data)
}
#endif
inline void nr_write_t::set_buffer_data(const char* value) {
  set_has_buffer_data();
  buffer_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:syscall_types.nr_write_t.buffer_data)
}
inline void nr_write_t::set_buffer_data(const void* value, size_t size) {
  set_has_buffer_data();
  buffer_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:syscall_types.nr_write_t.buffer_data)
}
inline ::std::string* nr_write_t::mutable_buffer_data() {
  set_has_buffer_data();
  // @@protoc_insertion_point(field_mutable:syscall_types.nr_write_t.buffer_data)
  return buffer_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* nr_write_t::release_buffer_data() {
  // @@protoc_insertion_point(field_release:syscall_types.nr_write_t.buffer_data)
  clear_has_buffer_data();
  return buffer_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void nr_write_t::set_allocated_buffer_data(::std::string* buffer_data) {
  if (buffer_data != NULL) {
    set_has_buffer_data();
  } else {
    clear_has_buffer_data();
  }
  buffer_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer_data);
  // @@protoc_insertion_point(field_set_allocated:syscall_types.nr_write_t.buffer_data)
}

// required uint32 count_effective = 5;
inline bool nr_write_t::has_count_effective() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void nr_write_t::set_has_count_effective() {
  _has_bits_[0] |= 0x00000010u;
}
inline void nr_write_t::clear_has_count_effective() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void nr_write_t::clear_count_effective() {
  count_effective_ = 0u;
  clear_has_count_effective();
}
inline ::google::protobuf::uint32 nr_write_t::count_effective() const {
  // @@protoc_insertion_point(field_get:syscall_types.nr_write_t.count_effective)
  return count_effective_;
}
inline void nr_write_t::set_count_effective(::google::protobuf::uint32 value) {
  set_has_count_effective();
  count_effective_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.nr_write_t.count_effective)
}

// -------------------------------------------------------------------

// sys_generic_t

// required string name = 1;
inline bool sys_generic_t::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sys_generic_t::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sys_generic_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sys_generic_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& sys_generic_t::name() const {
  // @@protoc_insertion_point(field_get:syscall_types.sys_generic_t.name)
  return name_.GetNoArena();
}
inline void sys_generic_t::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:syscall_types.sys_generic_t.name)
}
#if LANG_CXX11
inline void sys_generic_t::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:syscall_types.sys_generic_t.name)
}
#endif
inline void sys_generic_t::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:syscall_types.sys_generic_t.name)
}
inline void sys_generic_t::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:syscall_types.sys_generic_t.name)
}
inline ::std::string* sys_generic_t::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:syscall_types.sys_generic_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sys_generic_t::release_name() {
  // @@protoc_insertion_point(field_release:syscall_types.sys_generic_t.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sys_generic_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:syscall_types.sys_generic_t.name)
}

// required uint32 address = 2;
inline bool sys_generic_t::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sys_generic_t::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sys_generic_t::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sys_generic_t::clear_address() {
  address_ = 0u;
  clear_has_address();
}
inline ::google::protobuf::uint32 sys_generic_t::address() const {
  // @@protoc_insertion_point(field_get:syscall_types.sys_generic_t.address)
  return address_;
}
inline void sys_generic_t::set_address(::google::protobuf::uint32 value) {
  set_has_address();
  address_ = value;
  // @@protoc_insertion_point(field_set:syscall_types.sys_generic_t.address)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace syscall_types

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::syscall_types::syscall_ident> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::syscall_types::syscall_ident>() {
  return ::syscall_types::syscall_ident_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_syscall_2eproto__INCLUDED
