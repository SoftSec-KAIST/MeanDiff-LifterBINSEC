// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace common {
class register_value_tDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<register_value_t> {
  public:
  ::google::protobuf::uint32 value_8_;
  ::google::protobuf::uint32 value_16_;
  ::google::protobuf::uint32 value_32_;
  ::google::protobuf::uint64 value_64_;
  ::google::protobuf::internal::ArenaStringPtr value_80_;
  ::google::protobuf::internal::ArenaStringPtr value_128_;
  ::google::protobuf::internal::ArenaStringPtr value_256_;
} _register_value_t_default_instance_;
class register_tDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<register_t> {
} _register_t_default_instance_;
class memory_tDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<memory_t> {
} _memory_t_default_instance_;
class indirect_register_tDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<indirect_register_t> {
} _indirect_register_t_default_instance_;
class memory_polDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<memory_pol> {
} _memory_pol_default_instance_;

namespace protobuf_common_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[8];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_value_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_value_t, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_value_t, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_value_t, typeid__),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_register_value_t_default_instance_), value_8_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_register_value_t_default_instance_), value_16_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_register_value_t_default_instance_), value_32_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_register_value_t_default_instance_), value_64_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_register_value_t_default_instance_), value_80_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_register_value_t_default_instance_), value_128_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_register_value_t_default_instance_), value_256_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_value_t, value_cnt_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_t, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(register_t, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(memory_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(memory_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(memory_t, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(memory_t, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(indirect_register_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(indirect_register_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(indirect_register_t, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(indirect_register_t, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(memory_pol, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(memory_pol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(memory_pol, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(memory_pol, value_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 13, sizeof(register_value_t)},
  { 21, 27, sizeof(register_t)},
  { 29, 35, sizeof(memory_t)},
  { 37, 43, sizeof(indirect_register_t)},
  { 45, 51, sizeof(memory_pol)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_register_value_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_register_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_memory_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_indirect_register_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_memory_pol_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _register_value_t_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _register_t_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _memory_t_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _indirect_register_t_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _memory_pol_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _register_value_t_default_instance_.DefaultConstruct();
  _register_t_default_instance_.DefaultConstruct();
  _memory_t_default_instance_.DefaultConstruct();
  _indirect_register_t_default_instance_.DefaultConstruct();
  _memory_pol_default_instance_.DefaultConstruct();
  _register_value_t_default_instance_.value_8_ = 0u;
  _register_value_t_default_instance_.value_16_ = 0u;
  _register_value_t_default_instance_.value_32_ = 0u;
  _register_value_t_default_instance_.value_64_ = GOOGLE_ULONGLONG(0);
  _register_value_t_default_instance_.value_80_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _register_value_t_default_instance_.value_128_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _register_value_t_default_instance_.value_256_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _register_t_default_instance_.get_mutable()->value_ = const_cast< ::common::register_value_t*>(
      ::common::register_value_t::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014common.proto\022\006common\"\322\001\n\020register_valu"
      "e_t\022$\n\006typeid\030\001 \002(\0162\024.common.proto_size_"
      "t\022\021\n\007value_8\030\002 \001(\rH\000\022\022\n\010value_16\030\003 \001(\rH\000"
      "\022\022\n\010value_32\030\004 \001(\rH\000\022\022\n\010value_64\030\005 \001(\004H\000"
      "\022\022\n\010value_80\030\006 \001(\014H\000\022\023\n\tvalue_128\030\007 \001(\014H"
      "\000\022\023\n\tvalue_256\030\010 \001(\014H\000B\013\n\tvalue_cnt\"C\n\nr"
      "egister_t\022\014\n\004name\030\001 \002(\t\022\'\n\005value\030\002 \002(\0132\030"
      ".common.register_value_t\"\'\n\010memory_t\022\014\n\004"
      "addr\030\001 \002(\004\022\r\n\005value\030\002 \002(\014\"2\n\023indirect_re"
      "gister_t\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002(\014\"[\n"
      "\nmemory_pol\022%\n\004addr\030\001 \001(\0162\016.common.actio"
      "n:\007DEFAULT\022&\n\005value\030\002 \001(\0162\016.common.actio"
      "n:\007DEFAULT*:\n\nsmt_result\022\013\n\007UNKNOWN\020\000\022\007\n"
      "\003SAT\020\001\022\t\n\005UNSAT\020\002\022\013\n\007TIMEOUT\020\003*$\n\016tracin"
      "g_action\022\010\n\004SKIP\020\000\022\010\n\004INTO\020\001*K\n\006action\022\013"
      "\n\007DEFAULT\020\000\022\t\n\005PATCH\020\001\022\010\n\004CONC\020\002\022\010\n\004SYMB"
      "\020\003\022\t\n\005LOGIC\020\004\022\n\n\006IGNORE\020\005*X\n\021call_conven"
      "tion_t\022\017\n\013UNKNOWN_CVT\020\000\022\t\n\005CDECL\020\001\022\014\n\010FA"
      "STCALL\020\002\022\013\n\007STDCALL\020\003\022\014\n\010THISCALL\020\004*(\n\ti"
      "r_kind_t\022\007\n\003DBA\020\001\022\007\n\003BAP\020\002\022\t\n\005MIASM\020\003*6\n"
      "\010solver_t\022\006\n\002Z3\020\001\022\r\n\tBOOLECTOR\020\002\022\010\n\004CVC4"
      "\020\003\022\t\n\005YICES\020\004*1\n\024analysis_direction_t\022\013\n"
      "\007FORWARD\020\001\022\014\n\010BACKWARD\020\002*n\n\014proto_size_t"
      "\022\020\n\014INVALID_SIZE\020\000\022\010\n\004BIT8\020\001\022\t\n\005BIT16\020\002\022"
      "\t\n\005BIT32\020\003\022\t\n\005BIT64\020\004\022\t\n\005BIT80\020\005\022\n\n\006BIT1"
      "28\020\006\022\n\n\006BIT256\020\007"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1016);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_common_2eproto

const ::google::protobuf::EnumDescriptor* smt_result_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[0];
}
bool smt_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* tracing_action_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[1];
}
bool tracing_action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* action_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[2];
}
bool action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* call_convention_t_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[3];
}
bool call_convention_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ir_kind_t_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[4];
}
bool ir_kind_t_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* solver_t_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[5];
}
bool solver_t_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* analysis_direction_t_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[6];
}
bool analysis_direction_t_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* proto_size_t_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[7];
}
bool proto_size_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int register_value_t::kTypeidFieldNumber;
const int register_value_t::kValue8FieldNumber;
const int register_value_t::kValue16FieldNumber;
const int register_value_t::kValue32FieldNumber;
const int register_value_t::kValue64FieldNumber;
const int register_value_t::kValue80FieldNumber;
const int register_value_t::kValue128FieldNumber;
const int register_value_t::kValue256FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

register_value_t::register_value_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_common_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.register_value_t)
}
register_value_t::register_value_t(const register_value_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  typeid__ = from.typeid__;
  clear_has_value_cnt();
  switch (from.value_cnt_case()) {
    case kValue8: {
      set_value_8(from.value_8());
      break;
    }
    case kValue16: {
      set_value_16(from.value_16());
      break;
    }
    case kValue32: {
      set_value_32(from.value_32());
      break;
    }
    case kValue64: {
      set_value_64(from.value_64());
      break;
    }
    case kValue80: {
      set_value_80(from.value_80());
      break;
    }
    case kValue128: {
      set_value_128(from.value_128());
      break;
    }
    case kValue256: {
      set_value_256(from.value_256());
      break;
    }
    case VALUE_CNT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:common.register_value_t)
}

void register_value_t::SharedCtor() {
  _cached_size_ = 0;
  typeid__ = 0;
  clear_has_value_cnt();
}

register_value_t::~register_value_t() {
  // @@protoc_insertion_point(destructor:common.register_value_t)
  SharedDtor();
}

void register_value_t::SharedDtor() {
  if (has_value_cnt()) {
    clear_value_cnt();
  }
}

void register_value_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* register_value_t::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[0].descriptor;
}

const register_value_t& register_value_t::default_instance() {
  protobuf_common_2eproto::InitDefaults();
  return *internal_default_instance();
}

register_value_t* register_value_t::New(::google::protobuf::Arena* arena) const {
  register_value_t* n = new register_value_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void register_value_t::clear_value_cnt() {
// @@protoc_insertion_point(one_of_clear_start:common.register_value_t)
  switch (value_cnt_case()) {
    case kValue8: {
      // No need to clear
      break;
    }
    case kValue16: {
      // No need to clear
      break;
    }
    case kValue32: {
      // No need to clear
      break;
    }
    case kValue64: {
      // No need to clear
      break;
    }
    case kValue80: {
      value_cnt_.value_80_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kValue128: {
      value_cnt_.value_128_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kValue256: {
      value_cnt_.value_256_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_CNT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_CNT_NOT_SET;
}


void register_value_t::Clear() {
// @@protoc_insertion_point(message_clear_start:common.register_value_t)
  typeid__ = 0;
  clear_value_cnt();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool register_value_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.register_value_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .common.proto_size_t typeid = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::common::proto_size_t_IsValid(value)) {
            set_typeid_(static_cast< ::common::proto_size_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value_8 = 2;
      case 2: {
        if (tag == 16u) {
          clear_value_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_cnt_.value_8_)));
          set_has_value_8();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value_16 = 3;
      case 3: {
        if (tag == 24u) {
          clear_value_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_cnt_.value_16_)));
          set_has_value_16();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value_32 = 4;
      case 4: {
        if (tag == 32u) {
          clear_value_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_cnt_.value_32_)));
          set_has_value_32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 value_64 = 5;
      case 5: {
        if (tag == 40u) {
          clear_value_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_cnt_.value_64_)));
          set_has_value_64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value_80 = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_80()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value_128 = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_128()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value_256 = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_256()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.register_value_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.register_value_t)
  return false;
#undef DO_
}

void register_value_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.register_value_t)
  // required .common.proto_size_t typeid = 1;
  if (has_typeid_()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->typeid_(), output);
  }

  switch (value_cnt_case()) {
    case kValue8:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value_8(), output);
      break;
    case kValue16:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value_16(), output);
      break;
    case kValue32:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->value_32(), output);
      break;
    case kValue64:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->value_64(), output);
      break;
    case kValue80:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        6, this->value_80(), output);
      break;
    case kValue128:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        7, this->value_128(), output);
      break;
    case kValue256:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        8, this->value_256(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.register_value_t)
}

::google::protobuf::uint8* register_value_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.register_value_t)
  // required .common.proto_size_t typeid = 1;
  if (has_typeid_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->typeid_(), target);
  }

  switch (value_cnt_case()) {
    case kValue8:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value_8(), target);
      break;
    case kValue16:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value_16(), target);
      break;
    case kValue32:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->value_32(), target);
      break;
    case kValue64:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->value_64(), target);
      break;
    case kValue80:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          6, this->value_80(), target);
      break;
    case kValue128:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          7, this->value_128(), target);
      break;
    case kValue256:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          8, this->value_256(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.register_value_t)
  return target;
}

size_t register_value_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.register_value_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .common.proto_size_t typeid = 1;
  if (has_typeid_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->typeid_());
  }
  switch (value_cnt_case()) {
    // optional uint32 value_8 = 2;
    case kValue8: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value_8());
      break;
    }
    // optional uint32 value_16 = 3;
    case kValue16: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value_16());
      break;
    }
    // optional uint32 value_32 = 4;
    case kValue32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value_32());
      break;
    }
    // optional uint64 value_64 = 5;
    case kValue64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->value_64());
      break;
    }
    // optional bytes value_80 = 6;
    case kValue80: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value_80());
      break;
    }
    // optional bytes value_128 = 7;
    case kValue128: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value_128());
      break;
    }
    // optional bytes value_256 = 8;
    case kValue256: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value_256());
      break;
    }
    case VALUE_CNT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void register_value_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.register_value_t)
  GOOGLE_DCHECK_NE(&from, this);
  const register_value_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const register_value_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.register_value_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.register_value_t)
    MergeFrom(*source);
  }
}

void register_value_t::MergeFrom(const register_value_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.register_value_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_typeid_()) {
    set_typeid_(from.typeid_());
  }
  switch (from.value_cnt_case()) {
    case kValue8: {
      set_value_8(from.value_8());
      break;
    }
    case kValue16: {
      set_value_16(from.value_16());
      break;
    }
    case kValue32: {
      set_value_32(from.value_32());
      break;
    }
    case kValue64: {
      set_value_64(from.value_64());
      break;
    }
    case kValue80: {
      set_value_80(from.value_80());
      break;
    }
    case kValue128: {
      set_value_128(from.value_128());
      break;
    }
    case kValue256: {
      set_value_256(from.value_256());
      break;
    }
    case VALUE_CNT_NOT_SET: {
      break;
    }
  }
}

void register_value_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.register_value_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void register_value_t::CopyFrom(const register_value_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.register_value_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool register_value_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void register_value_t::Swap(register_value_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void register_value_t::InternalSwap(register_value_t* other) {
  std::swap(typeid__, other->typeid__);
  std::swap(value_cnt_, other->value_cnt_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata register_value_t::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// register_value_t

// required .common.proto_size_t typeid = 1;
bool register_value_t::has_typeid_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void register_value_t::set_has_typeid_() {
  _has_bits_[0] |= 0x00000001u;
}
void register_value_t::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000001u;
}
void register_value_t::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
::common::proto_size_t register_value_t::typeid_() const {
  // @@protoc_insertion_point(field_get:common.register_value_t.typeid)
  return static_cast< ::common::proto_size_t >(typeid__);
}
void register_value_t::set_typeid_(::common::proto_size_t value) {
  assert(::common::proto_size_t_IsValid(value));
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:common.register_value_t.typeid)
}

// optional uint32 value_8 = 2;
bool register_value_t::has_value_8() const {
  return value_cnt_case() == kValue8;
}
void register_value_t::set_has_value_8() {
  _oneof_case_[0] = kValue8;
}
void register_value_t::clear_value_8() {
  if (has_value_8()) {
    value_cnt_.value_8_ = 0u;
    clear_has_value_cnt();
  }
}
::google::protobuf::uint32 register_value_t::value_8() const {
  // @@protoc_insertion_point(field_get:common.register_value_t.value_8)
  if (has_value_8()) {
    return value_cnt_.value_8_;
  }
  return 0u;
}
void register_value_t::set_value_8(::google::protobuf::uint32 value) {
  if (!has_value_8()) {
    clear_value_cnt();
    set_has_value_8();
  }
  value_cnt_.value_8_ = value;
  // @@protoc_insertion_point(field_set:common.register_value_t.value_8)
}

// optional uint32 value_16 = 3;
bool register_value_t::has_value_16() const {
  return value_cnt_case() == kValue16;
}
void register_value_t::set_has_value_16() {
  _oneof_case_[0] = kValue16;
}
void register_value_t::clear_value_16() {
  if (has_value_16()) {
    value_cnt_.value_16_ = 0u;
    clear_has_value_cnt();
  }
}
::google::protobuf::uint32 register_value_t::value_16() const {
  // @@protoc_insertion_point(field_get:common.register_value_t.value_16)
  if (has_value_16()) {
    return value_cnt_.value_16_;
  }
  return 0u;
}
void register_value_t::set_value_16(::google::protobuf::uint32 value) {
  if (!has_value_16()) {
    clear_value_cnt();
    set_has_value_16();
  }
  value_cnt_.value_16_ = value;
  // @@protoc_insertion_point(field_set:common.register_value_t.value_16)
}

// optional uint32 value_32 = 4;
bool register_value_t::has_value_32() const {
  return value_cnt_case() == kValue32;
}
void register_value_t::set_has_value_32() {
  _oneof_case_[0] = kValue32;
}
void register_value_t::clear_value_32() {
  if (has_value_32()) {
    value_cnt_.value_32_ = 0u;
    clear_has_value_cnt();
  }
}
::google::protobuf::uint32 register_value_t::value_32() const {
  // @@protoc_insertion_point(field_get:common.register_value_t.value_32)
  if (has_value_32()) {
    return value_cnt_.value_32_;
  }
  return 0u;
}
void register_value_t::set_value_32(::google::protobuf::uint32 value) {
  if (!has_value_32()) {
    clear_value_cnt();
    set_has_value_32();
  }
  value_cnt_.value_32_ = value;
  // @@protoc_insertion_point(field_set:common.register_value_t.value_32)
}

// optional uint64 value_64 = 5;
bool register_value_t::has_value_64() const {
  return value_cnt_case() == kValue64;
}
void register_value_t::set_has_value_64() {
  _oneof_case_[0] = kValue64;
}
void register_value_t::clear_value_64() {
  if (has_value_64()) {
    value_cnt_.value_64_ = GOOGLE_ULONGLONG(0);
    clear_has_value_cnt();
  }
}
::google::protobuf::uint64 register_value_t::value_64() const {
  // @@protoc_insertion_point(field_get:common.register_value_t.value_64)
  if (has_value_64()) {
    return value_cnt_.value_64_;
  }
  return GOOGLE_ULONGLONG(0);
}
void register_value_t::set_value_64(::google::protobuf::uint64 value) {
  if (!has_value_64()) {
    clear_value_cnt();
    set_has_value_64();
  }
  value_cnt_.value_64_ = value;
  // @@protoc_insertion_point(field_set:common.register_value_t.value_64)
}

// optional bytes value_80 = 6;
bool register_value_t::has_value_80() const {
  return value_cnt_case() == kValue80;
}
void register_value_t::set_has_value_80() {
  _oneof_case_[0] = kValue80;
}
void register_value_t::clear_value_80() {
  if (has_value_80()) {
    value_cnt_.value_80_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value_cnt();
  }
}
const ::std::string& register_value_t::value_80() const {
  // @@protoc_insertion_point(field_get:common.register_value_t.value_80)
  if (has_value_80()) {
    return value_cnt_.value_80_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void register_value_t::set_value_80(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:common.register_value_t.value_80)
  if (!has_value_80()) {
    clear_value_cnt();
    set_has_value_80();
    value_cnt_.value_80_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_80_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.register_value_t.value_80)
}
#if LANG_CXX11
void register_value_t::set_value_80(::std::string&& value) {
  // @@protoc_insertion_point(field_set:common.register_value_t.value_80)
  if (!has_value_80()) {
    clear_value_cnt();
    set_has_value_80();
    value_cnt_.value_80_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_80_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.register_value_t.value_80)
}
#endif
void register_value_t::set_value_80(const char* value) {
  if (!has_value_80()) {
    clear_value_cnt();
    set_has_value_80();
    value_cnt_.value_80_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_80_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.register_value_t.value_80)
}
void register_value_t::set_value_80(const void* value, size_t size) {
  if (!has_value_80()) {
    clear_value_cnt();
    set_has_value_80();
    value_cnt_.value_80_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_80_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.register_value_t.value_80)
}
::std::string* register_value_t::mutable_value_80() {
  if (!has_value_80()) {
    clear_value_cnt();
    set_has_value_80();
    value_cnt_.value_80_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:common.register_value_t.value_80)
  return value_cnt_.value_80_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* register_value_t::release_value_80() {
  // @@protoc_insertion_point(field_release:common.register_value_t.value_80)
  if (has_value_80()) {
    clear_has_value_cnt();
    return value_cnt_.value_80_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void register_value_t::set_allocated_value_80(::std::string* value_80) {
  if (!has_value_80()) {
    value_cnt_.value_80_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value_cnt();
  if (value_80 != NULL) {
    set_has_value_80();
    value_cnt_.value_80_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        value_80);
  }
  // @@protoc_insertion_point(field_set_allocated:common.register_value_t.value_80)
}

// optional bytes value_128 = 7;
bool register_value_t::has_value_128() const {
  return value_cnt_case() == kValue128;
}
void register_value_t::set_has_value_128() {
  _oneof_case_[0] = kValue128;
}
void register_value_t::clear_value_128() {
  if (has_value_128()) {
    value_cnt_.value_128_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value_cnt();
  }
}
const ::std::string& register_value_t::value_128() const {
  // @@protoc_insertion_point(field_get:common.register_value_t.value_128)
  if (has_value_128()) {
    return value_cnt_.value_128_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void register_value_t::set_value_128(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:common.register_value_t.value_128)
  if (!has_value_128()) {
    clear_value_cnt();
    set_has_value_128();
    value_cnt_.value_128_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_128_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.register_value_t.value_128)
}
#if LANG_CXX11
void register_value_t::set_value_128(::std::string&& value) {
  // @@protoc_insertion_point(field_set:common.register_value_t.value_128)
  if (!has_value_128()) {
    clear_value_cnt();
    set_has_value_128();
    value_cnt_.value_128_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_128_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.register_value_t.value_128)
}
#endif
void register_value_t::set_value_128(const char* value) {
  if (!has_value_128()) {
    clear_value_cnt();
    set_has_value_128();
    value_cnt_.value_128_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_128_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.register_value_t.value_128)
}
void register_value_t::set_value_128(const void* value, size_t size) {
  if (!has_value_128()) {
    clear_value_cnt();
    set_has_value_128();
    value_cnt_.value_128_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_128_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.register_value_t.value_128)
}
::std::string* register_value_t::mutable_value_128() {
  if (!has_value_128()) {
    clear_value_cnt();
    set_has_value_128();
    value_cnt_.value_128_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:common.register_value_t.value_128)
  return value_cnt_.value_128_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* register_value_t::release_value_128() {
  // @@protoc_insertion_point(field_release:common.register_value_t.value_128)
  if (has_value_128()) {
    clear_has_value_cnt();
    return value_cnt_.value_128_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void register_value_t::set_allocated_value_128(::std::string* value_128) {
  if (!has_value_128()) {
    value_cnt_.value_128_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value_cnt();
  if (value_128 != NULL) {
    set_has_value_128();
    value_cnt_.value_128_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        value_128);
  }
  // @@protoc_insertion_point(field_set_allocated:common.register_value_t.value_128)
}

// optional bytes value_256 = 8;
bool register_value_t::has_value_256() const {
  return value_cnt_case() == kValue256;
}
void register_value_t::set_has_value_256() {
  _oneof_case_[0] = kValue256;
}
void register_value_t::clear_value_256() {
  if (has_value_256()) {
    value_cnt_.value_256_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value_cnt();
  }
}
const ::std::string& register_value_t::value_256() const {
  // @@protoc_insertion_point(field_get:common.register_value_t.value_256)
  if (has_value_256()) {
    return value_cnt_.value_256_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void register_value_t::set_value_256(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:common.register_value_t.value_256)
  if (!has_value_256()) {
    clear_value_cnt();
    set_has_value_256();
    value_cnt_.value_256_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.register_value_t.value_256)
}
#if LANG_CXX11
void register_value_t::set_value_256(::std::string&& value) {
  // @@protoc_insertion_point(field_set:common.register_value_t.value_256)
  if (!has_value_256()) {
    clear_value_cnt();
    set_has_value_256();
    value_cnt_.value_256_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_256_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.register_value_t.value_256)
}
#endif
void register_value_t::set_value_256(const char* value) {
  if (!has_value_256()) {
    clear_value_cnt();
    set_has_value_256();
    value_cnt_.value_256_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.register_value_t.value_256)
}
void register_value_t::set_value_256(const void* value, size_t size) {
  if (!has_value_256()) {
    clear_value_cnt();
    set_has_value_256();
    value_cnt_.value_256_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_cnt_.value_256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.register_value_t.value_256)
}
::std::string* register_value_t::mutable_value_256() {
  if (!has_value_256()) {
    clear_value_cnt();
    set_has_value_256();
    value_cnt_.value_256_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:common.register_value_t.value_256)
  return value_cnt_.value_256_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* register_value_t::release_value_256() {
  // @@protoc_insertion_point(field_release:common.register_value_t.value_256)
  if (has_value_256()) {
    clear_has_value_cnt();
    return value_cnt_.value_256_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void register_value_t::set_allocated_value_256(::std::string* value_256) {
  if (!has_value_256()) {
    value_cnt_.value_256_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value_cnt();
  if (value_256 != NULL) {
    set_has_value_256();
    value_cnt_.value_256_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        value_256);
  }
  // @@protoc_insertion_point(field_set_allocated:common.register_value_t.value_256)
}

bool register_value_t::has_value_cnt() const {
  return value_cnt_case() != VALUE_CNT_NOT_SET;
}
void register_value_t::clear_has_value_cnt() {
  _oneof_case_[0] = VALUE_CNT_NOT_SET;
}
register_value_t::ValueCntCase register_value_t::value_cnt_case() const {
  return register_value_t::ValueCntCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int register_t::kNameFieldNumber;
const int register_t::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

register_t::register_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_common_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.register_t)
}
register_t::register_t(const register_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_value()) {
    value_ = new ::common::register_value_t(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.register_t)
}

void register_t::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

register_t::~register_t() {
  // @@protoc_insertion_point(destructor:common.register_t)
  SharedDtor();
}

void register_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete value_;
  }
}

void register_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* register_t::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[1].descriptor;
}

const register_t& register_t::default_instance() {
  protobuf_common_2eproto::InitDefaults();
  return *internal_default_instance();
}

register_t* register_t::New(::google::protobuf::Arena* arena) const {
  register_t* n = new register_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void register_t::Clear() {
// @@protoc_insertion_point(message_clear_start:common.register_t)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(value_ != NULL);
      value_->::common::register_value_t::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool register_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.register_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "common.register_t.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .common.register_value_t value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.register_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.register_t)
  return false;
#undef DO_
}

void register_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.register_t)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "common.register_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .common.register_value_t value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.register_t)
}

::google::protobuf::uint8* register_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.register_t)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "common.register_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .common.register_value_t value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.register_t)
  return target;
}

size_t register_t::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.register_t)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required .common.register_value_t value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  return total_size;
}
size_t register_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.register_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .common.register_value_t value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void register_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.register_t)
  GOOGLE_DCHECK_NE(&from, this);
  const register_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const register_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.register_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.register_t)
    MergeFrom(*source);
  }
}

void register_t::MergeFrom(const register_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.register_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      mutable_value()->::common::register_value_t::MergeFrom(from.value());
    }
  }
}

void register_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.register_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void register_t::CopyFrom(const register_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.register_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool register_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_value()) {
    if (!this->value_->IsInitialized()) return false;
  }
  return true;
}

void register_t::Swap(register_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void register_t::InternalSwap(register_t* other) {
  name_.Swap(&other->name_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata register_t::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// register_t

// required string name = 1;
bool register_t::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void register_t::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void register_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void register_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& register_t::name() const {
  // @@protoc_insertion_point(field_get:common.register_t.name)
  return name_.GetNoArena();
}
void register_t::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.register_t.name)
}
#if LANG_CXX11
void register_t::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.register_t.name)
}
#endif
void register_t::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.register_t.name)
}
void register_t::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.register_t.name)
}
::std::string* register_t::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:common.register_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* register_t::release_name() {
  // @@protoc_insertion_point(field_release:common.register_t.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void register_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:common.register_t.name)
}

// required .common.register_value_t value = 2;
bool register_t::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void register_t::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void register_t::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void register_t::clear_value() {
  if (value_ != NULL) value_->::common::register_value_t::Clear();
  clear_has_value();
}
const ::common::register_value_t& register_t::value() const {
  // @@protoc_insertion_point(field_get:common.register_t.value)
  return value_ != NULL ? *value_
                         : *::common::register_value_t::internal_default_instance();
}
::common::register_value_t* register_t::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::common::register_value_t;
  }
  // @@protoc_insertion_point(field_mutable:common.register_t.value)
  return value_;
}
::common::register_value_t* register_t::release_value() {
  // @@protoc_insertion_point(field_release:common.register_t.value)
  clear_has_value();
  ::common::register_value_t* temp = value_;
  value_ = NULL;
  return temp;
}
void register_t::set_allocated_value(::common::register_value_t* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:common.register_t.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int memory_t::kAddrFieldNumber;
const int memory_t::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

memory_t::memory_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_common_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.memory_t)
}
memory_t::memory_t(const memory_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  addr_ = from.addr_;
  // @@protoc_insertion_point(copy_constructor:common.memory_t)
}

void memory_t::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_ = GOOGLE_ULONGLONG(0);
}

memory_t::~memory_t() {
  // @@protoc_insertion_point(destructor:common.memory_t)
  SharedDtor();
}

void memory_t::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void memory_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* memory_t::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[2].descriptor;
}

const memory_t& memory_t::default_instance() {
  protobuf_common_2eproto::InitDefaults();
  return *internal_default_instance();
}

memory_t* memory_t::New(::google::protobuf::Arena* arena) const {
  memory_t* n = new memory_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void memory_t::Clear() {
// @@protoc_insertion_point(message_clear_start:common.memory_t)
  if (has_value()) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  addr_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool memory_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.memory_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 addr = 1;
      case 1: {
        if (tag == 8u) {
          set_has_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.memory_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.memory_t)
  return false;
#undef DO_
}

void memory_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.memory_t)
  // required uint64 addr = 1;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->addr(), output);
  }

  // required bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.memory_t)
}

::google::protobuf::uint8* memory_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.memory_t)
  // required uint64 addr = 1;
  if (has_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->addr(), target);
  }

  // required bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.memory_t)
  return target;
}

size_t memory_t::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.memory_t)
  size_t total_size = 0;

  if (has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  if (has_addr()) {
    // required uint64 addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->addr());
  }

  return total_size;
}
size_t memory_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.memory_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

    // required uint64 addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->addr());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void memory_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.memory_t)
  GOOGLE_DCHECK_NE(&from, this);
  const memory_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const memory_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.memory_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.memory_t)
    MergeFrom(*source);
  }
}

void memory_t::MergeFrom(const memory_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.memory_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (from.has_addr()) {
      set_addr(from.addr());
    }
  }
}

void memory_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.memory_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void memory_t::CopyFrom(const memory_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.memory_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool memory_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void memory_t::Swap(memory_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void memory_t::InternalSwap(memory_t* other) {
  value_.Swap(&other->value_);
  std::swap(addr_, other->addr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata memory_t::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// memory_t

// required uint64 addr = 1;
bool memory_t::has_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void memory_t::set_has_addr() {
  _has_bits_[0] |= 0x00000002u;
}
void memory_t::clear_has_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
void memory_t::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
  clear_has_addr();
}
::google::protobuf::uint64 memory_t::addr() const {
  // @@protoc_insertion_point(field_get:common.memory_t.addr)
  return addr_;
}
void memory_t::set_addr(::google::protobuf::uint64 value) {
  set_has_addr();
  addr_ = value;
  // @@protoc_insertion_point(field_set:common.memory_t.addr)
}

// required bytes value = 2;
bool memory_t::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void memory_t::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void memory_t::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void memory_t::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& memory_t::value() const {
  // @@protoc_insertion_point(field_get:common.memory_t.value)
  return value_.GetNoArena();
}
void memory_t::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.memory_t.value)
}
#if LANG_CXX11
void memory_t::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.memory_t.value)
}
#endif
void memory_t::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.memory_t.value)
}
void memory_t::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.memory_t.value)
}
::std::string* memory_t::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:common.memory_t.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* memory_t::release_value() {
  // @@protoc_insertion_point(field_release:common.memory_t.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void memory_t::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:common.memory_t.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int indirect_register_t::kNameFieldNumber;
const int indirect_register_t::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

indirect_register_t::indirect_register_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_common_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.indirect_register_t)
}
indirect_register_t::indirect_register_t(const indirect_register_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:common.indirect_register_t)
}

void indirect_register_t::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

indirect_register_t::~indirect_register_t() {
  // @@protoc_insertion_point(destructor:common.indirect_register_t)
  SharedDtor();
}

void indirect_register_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void indirect_register_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* indirect_register_t::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[3].descriptor;
}

const indirect_register_t& indirect_register_t::default_instance() {
  protobuf_common_2eproto::InitDefaults();
  return *internal_default_instance();
}

indirect_register_t* indirect_register_t::New(::google::protobuf::Arena* arena) const {
  indirect_register_t* n = new indirect_register_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void indirect_register_t::Clear() {
// @@protoc_insertion_point(message_clear_start:common.indirect_register_t)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool indirect_register_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.indirect_register_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "common.indirect_register_t.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.indirect_register_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.indirect_register_t)
  return false;
#undef DO_
}

void indirect_register_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.indirect_register_t)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "common.indirect_register_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.indirect_register_t)
}

::google::protobuf::uint8* indirect_register_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.indirect_register_t)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "common.indirect_register_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.indirect_register_t)
  return target;
}

size_t indirect_register_t::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.indirect_register_t)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  return total_size;
}
size_t indirect_register_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.indirect_register_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void indirect_register_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.indirect_register_t)
  GOOGLE_DCHECK_NE(&from, this);
  const indirect_register_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const indirect_register_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.indirect_register_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.indirect_register_t)
    MergeFrom(*source);
  }
}

void indirect_register_t::MergeFrom(const indirect_register_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.indirect_register_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void indirect_register_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.indirect_register_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void indirect_register_t::CopyFrom(const indirect_register_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.indirect_register_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool indirect_register_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void indirect_register_t::Swap(indirect_register_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void indirect_register_t::InternalSwap(indirect_register_t* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata indirect_register_t::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// indirect_register_t

// required string name = 1;
bool indirect_register_t::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void indirect_register_t::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void indirect_register_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void indirect_register_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& indirect_register_t::name() const {
  // @@protoc_insertion_point(field_get:common.indirect_register_t.name)
  return name_.GetNoArena();
}
void indirect_register_t::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.indirect_register_t.name)
}
#if LANG_CXX11
void indirect_register_t::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.indirect_register_t.name)
}
#endif
void indirect_register_t::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.indirect_register_t.name)
}
void indirect_register_t::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.indirect_register_t.name)
}
::std::string* indirect_register_t::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:common.indirect_register_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* indirect_register_t::release_name() {
  // @@protoc_insertion_point(field_release:common.indirect_register_t.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void indirect_register_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:common.indirect_register_t.name)
}

// required bytes value = 2;
bool indirect_register_t::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void indirect_register_t::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void indirect_register_t::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void indirect_register_t::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& indirect_register_t::value() const {
  // @@protoc_insertion_point(field_get:common.indirect_register_t.value)
  return value_.GetNoArena();
}
void indirect_register_t::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.indirect_register_t.value)
}
#if LANG_CXX11
void indirect_register_t::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.indirect_register_t.value)
}
#endif
void indirect_register_t::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.indirect_register_t.value)
}
void indirect_register_t::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.indirect_register_t.value)
}
::std::string* indirect_register_t::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:common.indirect_register_t.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* indirect_register_t::release_value() {
  // @@protoc_insertion_point(field_release:common.indirect_register_t.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void indirect_register_t::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:common.indirect_register_t.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int memory_pol::kAddrFieldNumber;
const int memory_pol::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

memory_pol::memory_pol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_common_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.memory_pol)
}
memory_pol::memory_pol(const memory_pol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&addr_, &from.addr_,
    reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&addr_) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:common.memory_pol)
}

void memory_pol::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&addr_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&addr_) + sizeof(value_));
}

memory_pol::~memory_pol() {
  // @@protoc_insertion_point(destructor:common.memory_pol)
  SharedDtor();
}

void memory_pol::SharedDtor() {
}

void memory_pol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* memory_pol::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[4].descriptor;
}

const memory_pol& memory_pol::default_instance() {
  protobuf_common_2eproto::InitDefaults();
  return *internal_default_instance();
}

memory_pol* memory_pol::New(::google::protobuf::Arena* arena) const {
  memory_pol* n = new memory_pol;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void memory_pol::Clear() {
// @@protoc_insertion_point(message_clear_start:common.memory_pol)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&addr_, 0, reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&addr_) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool memory_pol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.memory_pol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.action addr = 1 [default = DEFAULT];
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::common::action_IsValid(value)) {
            set_addr(static_cast< ::common::action >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.action value = 2 [default = DEFAULT];
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::common::action_IsValid(value)) {
            set_value(static_cast< ::common::action >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.memory_pol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.memory_pol)
  return false;
#undef DO_
}

void memory_pol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.memory_pol)
  // optional .common.action addr = 1 [default = DEFAULT];
  if (has_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->addr(), output);
  }

  // optional .common.action value = 2 [default = DEFAULT];
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.memory_pol)
}

::google::protobuf::uint8* memory_pol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.memory_pol)
  // optional .common.action addr = 1 [default = DEFAULT];
  if (has_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->addr(), target);
  }

  // optional .common.action value = 2 [default = DEFAULT];
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.memory_pol)
  return target;
}

size_t memory_pol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.memory_pol)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .common.action addr = 1 [default = DEFAULT];
    if (has_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->addr());
    }

    // optional .common.action value = 2 [default = DEFAULT];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void memory_pol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.memory_pol)
  GOOGLE_DCHECK_NE(&from, this);
  const memory_pol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const memory_pol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.memory_pol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.memory_pol)
    MergeFrom(*source);
  }
}

void memory_pol::MergeFrom(const memory_pol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.memory_pol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_addr()) {
      set_addr(from.addr());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
}

void memory_pol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.memory_pol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void memory_pol::CopyFrom(const memory_pol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.memory_pol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool memory_pol::IsInitialized() const {
  return true;
}

void memory_pol::Swap(memory_pol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void memory_pol::InternalSwap(memory_pol* other) {
  std::swap(addr_, other->addr_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata memory_pol::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// memory_pol

// optional .common.action addr = 1 [default = DEFAULT];
bool memory_pol::has_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void memory_pol::set_has_addr() {
  _has_bits_[0] |= 0x00000001u;
}
void memory_pol::clear_has_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
void memory_pol::clear_addr() {
  addr_ = 0;
  clear_has_addr();
}
::common::action memory_pol::addr() const {
  // @@protoc_insertion_point(field_get:common.memory_pol.addr)
  return static_cast< ::common::action >(addr_);
}
void memory_pol::set_addr(::common::action value) {
  assert(::common::action_IsValid(value));
  set_has_addr();
  addr_ = value;
  // @@protoc_insertion_point(field_set:common.memory_pol.addr)
}

// optional .common.action value = 2 [default = DEFAULT];
bool memory_pol::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void memory_pol::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void memory_pol::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void memory_pol::clear_value() {
  value_ = 0;
  clear_has_value();
}
::common::action memory_pol::value() const {
  // @@protoc_insertion_point(field_get:common.memory_pol.value)
  return static_cast< ::common::action >(value_);
}
void memory_pol::set_value(::common::action value) {
  assert(::common::action_IsValid(value));
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:common.memory_pol.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace common

// @@protoc_insertion_point(global_scope)
